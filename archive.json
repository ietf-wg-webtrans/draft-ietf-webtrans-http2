{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-03-06T01:04:13.881252+00:00",
  "repo": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
  "labels": [
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "DC21D2"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "ietf-112",
      "description": "Issues discussed at IETF 112",
      "color": "47D2FD"
    },
    {
      "name": "editorial",
      "description": "Editorial issues that don't substantially alter the meaning of the specification",
      "color": "59FB7E"
    },
    {
      "name": "has pull request",
      "description": "Issues for which a pull request exists",
      "color": "14C303"
    },
    {
      "name": "ietf-113",
      "description": "Issues discussed at IETF 113",
      "color": "67F2ED"
    },
    {
      "name": "http3",
      "description": "Needs to align with HTTP/3",
      "color": "99451E"
    },
    {
      "name": "ready for PR",
      "description": "Issues which are ready for a pull request",
      "color": "67E997"
    },
    {
      "name": "capsule-dt",
      "description": "",
      "color": "006b75"
    },
    {
      "name": "ietf-114",
      "description": "Issues discussed at IETF 114",
      "color": "439BCA"
    },
    {
      "name": "ietf-115",
      "description": "Issues discussed at IETF 115",
      "color": "32BDF3"
    },
    {
      "name": "ietf-116",
      "description": "Issues discussed at IETF 116",
      "color": "1D5293"
    },
    {
      "name": "ietf-117",
      "description": "Issues discussed at IETF 117",
      "color": "8775BA"
    },
    {
      "name": "out of scope",
      "description": "Issues that are out of scope for the current specification",
      "color": "4C4C09"
    },
    {
      "name": "ietf-118",
      "description": "Issues discussed at IETF 118",
      "color": "5319E7"
    },
    {
      "name": "held for wglc",
      "description": "Issues held for Working Group Last Call",
      "color": "9D6338"
    },
    {
      "name": "flow-control",
      "description": "Issues blocked on flow control discussions",
      "color": "B60205"
    }
  ],
  "issues": [
    {
      "number": 3,
      "id": "MDU6SXNzdWU2NTYxMjkwNjA=",
      "title": "Describe how to bring up new WebTransport streams without additional roundtrips",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/3",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The [overview](https://tools.ietf.org/html/draft-vvv-webtransport-overview-01) contains the following text: \r\n```\r\no  Each new stream would require a WebSocket handshake to agree on\r\n      application protocol used, meaning that it would take at least one\r\n      RTT to establish each new stream before the client can write to\r\n      it.\r\n```\r\n\r\nWe should consider documenting how it's possible to send the connect frame and then the next stream, since we can guarantee in-order delivery (and processing?) of the data.\r\n\r\nWe can also note that this is orthogonal to 0-RTT.\r\n```\r\n   In some cases, the transport protocol might allow transmitting data\r\n   before the session is established; an example is TLS 0-RTT data.\r\n   Since this data can be replayed by attackers, it MUST NOT be used\r\n   unless the client has explicitly requested 0-RTT for specific streams\r\n   or datagrams it knows to be safely replayable.\r\n```\r\n",
      "createdAt": "2020-07-13T20:48:14Z",
      "updatedAt": "2021-11-05T04:27:04Z",
      "closedAt": "2021-11-05T04:27:04Z",
      "comments": [
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "Will this only be possible with WT over H2?  \r\n\r\nAn HTTP request can be sent at any time over an existing connection, and it contains both information in the headers sufficient to route it to the proper destination AND potentially payload that can be acted upon as soon as it gets there.  Because these are separate streams in HTTP/3, they could arrive out of order at a proxy, which means sending independently routable messages (which require a session and a stream) from H3 have worse latency than H2.  It's also strange because while the browser to edge hop may be H2, subsequent hops may be H3.",
          "createdAt": "2020-07-23T22:54:58Z",
          "updatedAt": "2020-07-23T22:54:58Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "It's possible that this would only work over HTTP/2, which does provide an interesting inversion from the usual benefits that you get from HTTP/3. It would be really nice if these were in a single stream in HTTP/3 as well, but I don't really see that happening if we have CONNECT followed by other streams to which that CONNECT referred.",
          "createdAt": "2020-11-15T23:02:35Z",
          "updatedAt": "2020-11-15T23:02:35Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think that this is possible with any version of this design, because the client won't have server settings when it sends 0-RTT.  HTTP/2 assumes that default settings are in play, which makes 0-RTT usable for regular requests, but the CONNECT here depends on a setting.\r\n\r\nThat doesn't seem like it is worth fixing for this mapping.  I also have reservations about the value in making 0-RTT work in the HTTP/3 mapping, but that should be taken up there.",
          "createdAt": "2021-07-08T04:49:06Z",
          "updatedAt": "2021-07-08T04:49:06Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue says that it is orthogonal to 0-RTT.  It's about sending the CONNECT and one more WT_STREAM/WT_DATAGRAMS in a single flight.  The H3 draft was updated with a section saying this is allowed: https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http3/blob/main/draft-ietf-webtrans-http3.md#buffering-incoming-streams-and-datagrams.",
          "createdAt": "2021-07-19T22:09:57Z",
          "updatedAt": "2021-07-19T22:09:57Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, the h3 draft can allow 0-RTT, but I don't see a way to have the h2 draft do that without taking a dependency on ALPS or some persistent settings concept.  I mean, it could define its own persistent settings concept, but that seems worse than ALPS (and I'm not a big fan, at least for h2).",
          "createdAt": "2021-07-20T00:26:43Z",
          "updatedAt": "2021-07-20T00:26:43Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Oops, I should have added.  I don't see any reason to allow sending prior to session *confirmation*.  You might, however, allow new streams to be created prior to getting a 200 response on the session.  For that, it really depends on how you might plan to deal with resource management.  Of course, if you could send data inside the primary stream, that makes this largely moot.",
          "createdAt": "2021-07-20T00:28:38Z",
          "updatedAt": "2021-07-20T00:28:38Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "The H3 draft disallows 0-RTT:\r\n\r\n> WebTransport over HTTP/3 does not support 0-RTT.",
          "createdAt": "2021-07-20T14:24:15Z",
          "updatedAt": "2021-07-20T14:24:15Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Just for clarity, we need to be able to take an already-established WT session and bring up a new stream + get data on that stream in either direction in a single roundtrip, hence the orthogonal-to-0-RTT part.\r\n\r\nI think this is now obsolete with #26 since it's pretty clear that a WT_STREAM frame carries data and therefore we don't need to say anything special to make it obvious that this is permitted.",
          "createdAt": "2021-11-05T04:27:03Z",
          "updatedAt": "2021-11-05T04:27:03Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "MDU6SXNzdWU2NTYxMjkyMzk=",
      "title": "Document fulfillment of WebTransport framework requirements",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/4",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We should have a clear section that explains how Http2Transport fulfills the transport protocol requirements from the [WebTransport Overview](https://tools.ietf.org/html/draft-vvv-webtransport-overview-01)\r\n\r\n```\r\n   Any transport protocol used MUST use TLS [RFC8446] or a semantically\r\n   equivalent security protocol (for instance, DTLS\r\n   [I-D.ietf-tls-dtls13]).  The protocols SHOULD use TLS version 1.3 or\r\n   later, unless they aim for backwards compatibility with legacy\r\n   systems.\r\n\r\n   Any transport protocol used MUST require the user agent to obtain and\r\n   maintain explicit consent from the server to send data.  For\r\n   connection-oriented protocols (such as TCP or QUIC), the connection\r\n   establishment and keep-alive mechanisms suffice.  For other\r\n   protocols, a mechanism such as ICE [RFC8445] can be used.\r\n\r\n   Any transport protocol used MUST limit the rate at which the client\r\n   sends data.  This SHOULD be accomplished via a feedback-based\r\n   congestion control mechanism (such as [RFC5681] or\r\n   [I-D.ietf-quic-recovery]).\r\n\r\n   Any transport protocol used MUST support simultaneously establishing\r\n   multiple sessions between the same client and server.\r\n\r\n   Any transport protocol used MUST prevent the clients from\r\n   establishing transport sessions to network endpoints that are not\r\n   WebTransport servers.\r\n\r\n   Any transport protocol used MUST provide a way for servers to filter\r\n   clients that can access it by checking the initiating origin\r\n   [RFC6454].\r\n\r\n   Any transport protocol used MUST provide a way for a server endpoint\r\n   location to be described using a URI [RFC3986].  This enables\r\n   integration with various Web platform features that represent\r\n   resources as URIs, such as Content Security Policy [CSP].\r\n```\r\n",
      "createdAt": "2020-07-13T20:48:32Z",
      "updatedAt": "2021-10-25T22:08:18Z",
      "closedAt": "2021-10-25T22:08:18Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Completed prior to #26 ",
          "createdAt": "2021-10-25T22:08:16Z",
          "updatedAt": "2021-10-25T22:08:16Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "MDU6SXNzdWU2NTYxMjkzODk=",
      "title": "Explicilty support both unidirectional and bidirectional streams",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/5",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As in the [WebTransport Overview](https://tools.ietf.org/html/draft-vvv-webtransport-overview-01),\r\n```\r\n   All transport protocols MUST provide datagrams, unidirectional and\r\n   bidirectional streams in order to make the transport protocols easily\r\n   interchangeable.\r\n```\r\nWe should document how we provide a unidirectional stream, likely by adding that as a parameter to the Connect stream.\r\n\r\n",
      "createdAt": "2020-07-13T20:48:49Z",
      "updatedAt": "2020-11-15T21:29:13Z",
      "closedAt": "2020-11-15T21:29:13Z",
      "comments": []
    },
    {
      "number": 6,
      "id": "MDU6SXNzdWU2NTYxMjk0OTk=",
      "title": "Describe datagram usage",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/6",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The [Overview](https://tools.ietf.org/html/draft-vvv-webtransport-overview-01) places requirements on how WebTransport handles datagrams:\r\n\r\n```\r\n   The WebTransport sender is not expected to retransmit datagrams,\r\n   though it may if it is using a TCP-based protocol or some other\r\n   underlying protocol that requires reliable delivery.  WebTransport\r\n   datagrams are not expected to be flow controlled, meaning that the\r\n   receiver might drop datagrams if the application is not consuming\r\n   them fast enough.\r\n```\r\n\r\nWe should describe that Http2Transport is going to retransmit datagrams (being over TCP/TLS/HTTP2) and offer some text about how these interact with flow control.",
      "createdAt": "2020-07-13T20:49:04Z",
      "updatedAt": "2021-07-19T21:21:48Z",
      "closedAt": "2021-07-19T21:21:48Z",
      "comments": [
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the draft also needs to describe what frames will be used to transmit datagrams.  Will that be a new frame type, a single dedicated datagram stream, or a WTHEADERS stream per datagram, etc?",
          "createdAt": "2020-07-23T22:47:18Z",
          "updatedAt": "2020-07-23T22:47:18Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed, thinking through those three options, a new frame time vs. a dedicated datagram stream don't seem to provide significant differences in practical usage. A new WTHEADERS stream per datagram seems a bit heavyweight given that ordering is going to be enforced whether or not we want that. Are there other advantages to doing so which we'd lose if we didn't go that route?\r\n\r\nPutting it in a dedicated datagram stream gives you quite straightforward interactions with flow control and also makes it pretty clear that these are in-order, reliable datagrams regardless of what the application might wish. Haven't thought through all the implications here yet, but it seems like a reasonable approach.\r\n\r\nAre there differences in behavior that a new frame type would have beyond just a new datagram stream?",
          "createdAt": "2020-07-26T01:42:25Z",
          "updatedAt": "2020-07-26T01:42:25Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "> quite straightforward interactions with flow control\r\n\r\nAlthough notably, not necessarily what we want, if we want to exempt them from flow control. In theory, as long as we're draining the underlying TLS connection on the other end, that shouldn't be unreasonable since the other endpoint can throw them out if necessary.",
          "createdAt": "2020-07-26T02:33:21Z",
          "updatedAt": "2020-07-26T02:33:21Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "Here's a strawman for an H2 DATAGRAM frame using the routing stream ID in the frame header:\r\n\r\n```\r\nLength(24) | Type(8) = DATAGRAM | \r\nFlags(8) | \r\nR | Routing Stream ID (31) |\r\nPad Len? (8) | \r\nPayload* |\r\nPadding\r\n```\r\n\r\nQUIC DATAGRAM doesn't mention padding, but doesn't need to since padding is a separate frame, but I assume we'd want it here. \r\n\r\nSomewhat related: do we want to continue using routing stream IDs, or switch to using \"Session IDs\" like h3 webtransport?  I could ask the same question for h3 - since the session is established by a stream, why *not* just use the transport stream ID as the session id?  I have a feeling the answer is \"transport streams in session protocol bad\".  If we expect WebTransport to be easily gatewayed between h2 and h3, we'd probably want h2 to have a mechanism to convey the session ID (both in datagrams and streams)",
          "createdAt": "2020-11-06T23:18:01Z",
          "updatedAt": "2020-11-06T23:18:01Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "Regarding\r\n\r\n> do we want to continue using routing stream IDs, or switch to using \"Session IDs\" like h3 webtransport? \r\n\r\nLooks like H3 is replacing session ID with stream ID, so we should keep it as is ;)\r\n\r\nhttps://github.com/vasilvv/webtransport/pull/21",
          "createdAt": "2020-11-09T23:19:08Z",
          "updatedAt": "2020-11-09T23:19:08Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this can be closed.  The current draft describes how to send datagrams using the WT_DATAGRAM frame, that these frames will be retransmitted (because TCP) and that they are not subject to flow control.",
          "createdAt": "2021-07-19T21:21:48Z",
          "updatedAt": "2021-07-19T21:21:48Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "MDU6SXNzdWU2NTYxMjk2MjY=",
      "title": "Provide stream IDs",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/7",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From the [Overview](https://tools.ietf.org/html/draft-vvv-webtransport-overview-01):\r\n\r\n```\r\n   Every stream within a transport has a unique 64-bit number\r\n   identifying it.  Both unidirectional and bidirectional streams share\r\n   the number space.  The client and the server have to agree on the\r\n   numbering, so it can be referenced in the application payload.\r\n   WebTransport does not impose any other specific restrictions on the\r\n   structure of stream IDs, and they should be treated as opaque 64-bit\r\n   blobs.\r\n```\r\n\r\nWe had previously discussed that WebTransport should not be trying to reuse stream IDs that may already be present in the protocols that it's mapped over, since those may not all have the same semantics and we wanted it to be consistent for clients. Make sure that we include explicit stream IDs in our HTTP/2 Transport description as well.",
      "createdAt": "2020-07-13T20:49:20Z",
      "updatedAt": "2021-11-05T04:27:42Z",
      "closedAt": "2021-11-05T04:27:41Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "One interesting question here is whether or not we expect the Connect Stream to have a WebTransport Stream ID, since it's not really intended to be used to exchange significant data.",
          "createdAt": "2020-07-13T20:56:35Z",
          "updatedAt": "2020-07-13T20:56:35Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "#26 makes this obsolete, we now have Stream IDs within WT_STREAMs since we're multiplexing within a single HTTP/2 stream. Nice.",
          "createdAt": "2021-11-05T04:27:41Z",
          "updatedAt": "2021-11-05T04:27:41Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "MDU6SXNzdWU2NTYxMjk4Mjg=",
      "title": "Enumerate the transport properties provided by Http2Transport",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/8",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [],
      "body": "From the [Overview](https://tools.ietf.org/html/draft-vvv-webtransport-overview-01):\r\n```\r\n   In addition to common requirements, each transport can have multiple\r\n   optional properties associated with it.  Querying them allows the\r\n   client to ascertain the presence of features it can use without\r\n   requiring knowledge of all protocols.  This allows introducing new\r\n   transports as drop-in replacements for existing ones.\r\n\r\n   The following properties are defined in this specification:\r\n\r\n   o  Stream independence.  This indicates that there is no head of line\r\n      blocking between different streams.\r\n\r\n   o  Partial reliability.  This indicates that if a stream is reset,\r\n      none of the data sent on it will be retransmitted.  This also\r\n      indicates that datagrams will not be retransmitted.\r\n\r\n   o  Pooling support.  Indicates that multiple transports using this\r\n      transport protocol may end up sharing the same transport layer\r\n      connection, and thus share a congestion controller and other\r\n      contexts.\r\n\r\n   o  Connection mobility.  Indicates that the transport may continue\r\n      existing even if the network path between the client and the\r\n      server changes.\r\n```\r\n\r\nWe should enumerate the position that Http2Transport takes on each of these items.\r\n\r\nSpecifically: \r\n\r\n- No stream independence\r\n\r\n- No partial reliability\r\n\r\n- Yes pooling support\r\n\r\n- No connection mobility\r\n",
      "createdAt": "2020-07-13T20:49:45Z",
      "updatedAt": "2020-07-13T22:45:26Z",
      "closedAt": "2020-07-13T22:45:26Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "MDU6SXNzdWU2NjQ4MTE2MDc=",
      "title": "Possible CRIME-like attacks against arbitrary metadata",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/11",
      "state": "CLOSED",
      "author": "afrind",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "If the WebTransport stream API allows sending completely arbitrary metadata, which is then compressed using the same compression context as other streams, it may introduce a CRIME-like attack in any case where an attacker can control the metadata on the WT streams and observe the size of packets transmitted on the network.\r\n\r\nPerhaps this can be mitigated by specially name-spacing any arbitrary meta-data so it doesn't collide with Cookie and other sensitive HTTP headers that might be in the compression context.  Or at the very least, this deserves a mention in the Security Considerations.",
      "createdAt": "2020-07-23T22:50:47Z",
      "updatedAt": "2020-11-07T00:45:23Z",
      "closedAt": "2020-11-07T00:45:23Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Very good point! I suspect we should be on the lookout for other potential issues one could encounter when sharing an underlying HTTP/2 connection. That said, would you be allowed to share such a connection in situations where this would be an issue? (Not saying you wouldn't, just thinking the current discussion on the mailing list of how to select eligibility for sharing the underlying transport could be relevant here)",
          "createdAt": "2020-07-26T02:38:54Z",
          "updatedAt": "2020-07-26T02:38:54Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "I think it must have been too early in the morning at the last IETF.  For CRIME to work, the compression scheme needs to be incremental (eg: if I guess part of your cookie then there are fewer bytes on the wire).  h2 WT would still use HPACK, so the attacker needs to completely guess the cookie to see an observable difference.  Closing for now.",
          "createdAt": "2020-11-07T00:45:23Z",
          "updatedAt": "2020-11-07T00:45:23Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "MDU6SXNzdWU2NjQ4MTQxMjQ=",
      "title": "How to gracefully terminate a session, but not a connection",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/12",
      "state": "CLOSED",
      "author": "afrind",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It's possible that a WebTransport endpoint may wish to drain a session, such that the peer would know not to create new streams on that session, but existing sessions could complete before closing the session's stream.  We need something like GOAWAY, but scoped to a single session.\r\n\r\nThis is useful when there are multiple sessions (and possibly other HTTP traffic) multiplexed on a single connection, which are routed to different upstream servers.  If a single upstream server needs to restart (and gracefully drain), it would be nice to not have to drain all the sessions/traffic from the client's connection.",
      "createdAt": "2020-07-23T22:58:24Z",
      "updatedAt": "2021-11-05T04:28:20Z",
      "closedAt": "2021-11-05T04:28:20Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Could the Connect Stream be used for this (since it is 1:1 a session already and the lifetime is tied to that connect stream)? I guess we're already there a bit, but just resetting that stream loses the routing information you need to clean up, hence the need for something like GOAWAY, like you said. \ud83d\ude04 ",
          "createdAt": "2020-07-26T02:40:44Z",
          "updatedAt": "2020-07-26T02:40:55Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we should let the design happen for H3 (https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http3/issues/27) and then translate that here.",
          "createdAt": "2021-07-19T21:16:57Z",
          "updatedAt": "2021-07-19T21:16:57Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Done with #26, closing the CONNECT stream kills the session, but you can have other CONNECT streams (and other sessions within them) that are entirely unaffected.",
          "createdAt": "2021-11-05T04:28:20Z",
          "updatedAt": "2021-11-05T04:28:20Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "MDU6SXNzdWU5MDEwMzY0MTU=",
      "title": "Unidirectional stream reset",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/17",
      "state": "CLOSED",
      "author": "afrind",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "QUIC and HTTP/3 support resetting only half of a bidirectional stream.  If WebTransport requires this functionality, then this draft would need additional frames to convey those signals (WT_RESET_STREAM and WT_STOP_SENDING).",
      "createdAt": "2021-05-25T16:09:19Z",
      "updatedAt": "2021-07-19T19:25:55Z",
      "closedAt": "2021-07-19T19:25:55Z",
      "comments": [
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #18 ",
          "createdAt": "2021-07-19T19:25:55Z",
          "updatedAt": "2021-07-19T19:25:55Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "MDU6SXNzdWU5Mzk0NzUyMzA=",
      "title": "Coalescing effects on security",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/23",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The document claims that two sessions that share a connection as the result of coalescing might be mutually distrustful.  I don't think that this is correct.\r\n\r\nAt least from the client's perspective, the two origins can read the plaintext of the message sent to each other.  They are also able to exhaust the shared pool of available streams by making HTTP requests.   The degree to which WebTransport creates any additional risk here has to be minimal.  Yes, it becomes slightly easier to mount a resource exhaustion attack, but it is - at least from the perspective of the client - only self-inflicted.\r\n\r\nIt is also unclear here that any single scheme would be effective without clearer - and ideally deterministic - limits being set.  I'll open a separate issue on that.",
      "createdAt": "2021-07-08T05:09:17Z",
      "updatedAt": "2022-03-07T20:54:16Z",
      "closedAt": "2022-03-07T20:54:16Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Post #26 thoughts: \r\n\r\n- Still generally self-inflicted pain.\r\n- Everything being isolated to within a CONNECT stream means that you're not sharing a pool of available streams anymore.\r\n- You certainly can still read all of the plaintext because... well, you're the one holding the other end of the TLS connection. Given that coalescing requires the cert to be valid for both and otherwise is essentially claiming that they could have been the same \"server\" (for some value of the word), that seems okay.\r\n\r\n@martinthomson anything left to do here? Seems like the architecture change has cleaned up a lot of the potential shared resource concerns quite nicely.",
          "createdAt": "2021-11-05T04:31:03Z",
          "updatedAt": "2021-11-05T04:31:03Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, I think we're in pretty good shape now.  Happy to have this closed.\r\n\r\n(There are effects that might come from mutual distrust, but those are not any worse than anything else in that situation.)",
          "createdAt": "2021-11-05T10:54:42Z",
          "updatedAt": "2021-11-05T10:54:42Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "MDU6SXNzdWU5Mzk0Nzg2Nzc=",
      "title": "Stream limits",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/24",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is likely shared with the HTTP/3 mapping also, but I'm here first.\r\n\r\nWeb applications will want some degree of certainty about the streams they are able to access.  As they also operate servers, this is probably not so bad in the client-to-server direction.  The main concern for client-to-server is the potential for the connection to be used for HTTP requests that consume these limits.  In the server-to-client direction clients might need to provide some number of streams that it would guarantee that a server can use for a given session.\r\n\r\nAs multiple sessions are involved, this gets harder, because the web security model might prevent us from exposing information about what other origins are using a shared connection for.  That said, it's not clear that there is any value in withholding this information either (see #23) as the security boundary is essentially already gone once coalescing is involved.\r\n\r\n(I'm deliberately not considering isolation of state by top-level browsing context; I expect that no coalescing or connection sharing would occur for different top-level sites.)",
      "createdAt": "2021-07-08T05:15:41Z",
      "updatedAt": "2022-03-07T20:56:57Z",
      "closedAt": "2022-03-07T20:56:56Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "We may want to move this over to WT over HTTP/3 now, since post-#26 we're keeping everything within the CONNECT stream. It becomes an issue again if people \"break out\" WT streams onto native HTTP/2 streams, like WT over HTTP/3 does.",
          "createdAt": "2021-11-05T04:32:53Z",
          "updatedAt": "2021-11-05T04:32:53Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Sounds like a plan.",
          "createdAt": "2021-11-05T10:55:06Z",
          "updatedAt": "2021-11-05T10:55:06Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Moved to H3, closing here",
          "createdAt": "2022-03-07T20:56:56Z",
          "updatedAt": "2022-03-07T20:56:56Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "MDU6SXNzdWU5NTExMzg2Nzg=",
      "title": "Use datagram CAPSULE?",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/25",
      "state": "CLOSED",
      "author": "afrind",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ietf-112",
        "ietf-113",
        "capsule-dt",
        "ietf-114",
        "ietf-115"
      ],
      "body": "If the CAPSULE frame defined in the HTTP/3 DATAGRAM draft is extended to HTTP/2, then it probably makes more sense to use that, rather than a new WT_DATAGRAM frame.",
      "createdAt": "2021-07-22T23:44:22Z",
      "updatedAt": "2022-12-16T19:10:19Z",
      "closedAt": "2022-12-16T19:10:19Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed, if this comes to HTTP/2 then reusing it seems better than minting yet-another-of-the-same thing.",
          "createdAt": "2021-07-30T17:50:25Z",
          "updatedAt": "2021-07-30T17:50:25Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "We need to decide whether or not we're using capsules, and if so, how do we shape it.",
          "createdAt": "2021-11-05T04:25:01Z",
          "updatedAt": "2021-11-05T04:25:01Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair notes from IETF 112 meeting: this is on hold pending output of MASQUE HTTP Datagrams design team",
          "createdAt": "2021-11-09T13:23:58Z",
          "updatedAt": "2021-11-09T13:23:58Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed at 113, design team will be formed to discuss this issue, led by @ekinnear. The chairs will email a call for volunteers on the mailing list",
          "createdAt": "2022-03-24T15:12:11Z",
          "updatedAt": "2022-03-24T15:12:11Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Design team output presented at IETF 114, further updates coming for 115.",
          "createdAt": "2022-10-24T18:29:43Z",
          "updatedAt": "2022-10-24T18:29:43Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDODnOl8849um-C",
      "title": "Document how MAX_DATA interacts with the enclosing HTTP/2 flow control scheme?",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/27",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ietf-112",
        "editorial",
        "has pull request"
      ],
      "body": "Document how MAX_DATA interacts with the enclosing HTTP/2 flow control scheme\r\n\r\n_Originally posted by @afrind in https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/26#discussion_r736000396_",
      "createdAt": "2021-10-25T22:25:42Z",
      "updatedAt": "2023-03-13T20:32:06Z",
      "closedAt": "2023-03-13T20:32:06Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "I tend to think we might want to have a section entirely on flow control since we've now got several layers: \r\n\r\n- HTTP/2 connection level\r\n- HTTP/2 stream for the CONNECT stream\r\n- WT_MAX_DATA for the WT session\r\n    - Noting that this is different than the HTTP/2 layer's CONNECT stream, since we want to be able to indicate the sum of stream data separately from other control frames\r\n- WT_MAX_STREAM_DATA for each WT stream\r\n\r\nAnd stream-count flow control\r\n- HTTP/2 stream limits don't really apply once you've got the WT session up\r\n- WT_MAX_STREAMS limits stream counts within a WT session\r\n\r\nJust indicating the intended usage of each of these knobs would be helpful.",
          "createdAt": "2021-11-05T04:37:23Z",
          "updatedAt": "2021-11-05T04:37:23Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "(From #30: Since QUIC's flow control credits work differently from H2, it may be worth explicitly stating how this works here.)",
          "createdAt": "2021-11-05T04:41:00Z",
          "updatedAt": "2021-11-05T04:41:00Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair notes from IETF 112 meeting: no one objected to proposal of resolving this by documenting how flow control works and pitfalls",
          "createdAt": "2021-11-09T13:30:56Z",
          "updatedAt": "2021-11-09T13:30:56Z"
        },
        {
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "body": "Why do we need WT_MAX_DATA in first place?  I thought that since we have flow control from the HTTP/2 side, we don't need it.",
          "createdAt": "2023-01-17T22:36:54Z",
          "updatedAt": "2023-01-17T22:36:54Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "> Why do we need WT_MAX_DATA in first place\r\n\r\nWe want to be able to say \"don't send me any more data on this stream\" while still allowing control frames on that stream",
          "createdAt": "2023-02-07T23:46:12Z",
          "updatedAt": "2023-02-07T23:46:12Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "I_kwDODnOl8849unhX",
      "title": "Describe the stream ID numbering space",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/28",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Do we talk about the stream ID numbering space here?  It could be completely scoped to the WebTransport session, which is different than H3.\r\n\r\n_Originally posted by @afrind in https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/26#discussion_r736003864_",
      "createdAt": "2021-10-25T22:30:03Z",
      "updatedAt": "2022-03-11T21:47:13Z",
      "closedAt": "2022-03-11T21:47:13Z",
      "comments": []
    },
    {
      "number": 29,
      "id": "I_kwDODnOl8849unvr",
      "title": "Potentially remove Final Size",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/29",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ietf-112"
      ],
      "body": "This field isn't necessary because of the in-order, reliable delivery of the underlying transport.  That said, I'm not opposed to leaving it here for symmetry with QUIC.  We could also say - it's unused, or what to do if this value is different from the value computed as the size of sent data on this stream?\r\n\r\n_Originally posted by @afrind in https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/26#discussion_r736004658_",
      "createdAt": "2021-10-25T22:31:07Z",
      "updatedAt": "2021-11-16T19:57:39Z",
      "closedAt": "2021-11-16T19:57:39Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "I think that we should remove it.\r\n\r\nThe frame format is not identical to QUIC as you have added lengths to all of the frames.  This is a *good* choice, I think, but it means that you don't have an identical parser.  As we have QUIC rules for RESET_STREAM and we have in-order delivery, we can guarantee that there is no ambiguity about how much data was consumed from the \"session\" flow control limit, so the added field is just another thing to check.",
          "createdAt": "2021-10-29T01:02:23Z",
          "updatedAt": "2021-10-29T01:02:23Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "> The frame format is not identical to QUIC as you have added lengths to all of the frames. This is a good choice, I think, but it means that you don't have an identical parser. \r\n\r\nShould we make the length be first in every frame so we can strip it and use the same parser?",
          "createdAt": "2021-10-29T19:14:48Z",
          "updatedAt": "2021-10-29T19:14:48Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "That is an interesting suggestion. It is even ... Sort of ... Consistent with HTTP/2.",
          "createdAt": "2021-10-29T22:21:45Z",
          "updatedAt": "2021-10-29T22:21:45Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "I guess WebTransport frames are explicitly not capsules, but they are the same as capsules, I think?  Capsules are explicitly \"TLV\".",
          "createdAt": "2021-10-30T19:46:07Z",
          "updatedAt": "2021-10-30T19:46:07Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, I'm expecting we'll have a slide at 112 about the lengths. QUIC has them for the frames where you have something that varies in length, and I put it in every frame here. Seems like the best choices are either (a) decide that was unnecessary and take them out or (b) move them to the front to make it easier. We also need to see if it would be a capsule or not.\r\n\r\nSeems like for this issue, we need to decide whether or not we're okay keeping \"useless\" fields solely for the sake of looking like QUIC. If so, moving length to the front and then keeping the rest of the frame identical seems great. If not, then out with the extra and the position of length doesn't matter nearly as much.\r\n\r\nWill raise at 112 so we can settle on \"useless\" fields.",
          "createdAt": "2021-11-01T17:08:54Z",
          "updatedAt": "2021-11-01T17:08:54Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "Do we think that WT over H2 should be using Capsules?  In particular it might seem silly to have two different ways to send a DATAGRAM.  If we think that all WT Frames should be capsules, and we want length up front, we need to take that up in MASQUE.\r\n\r\nBesides Final Offset, are there any other \"useless\" fields?",
          "createdAt": "2021-11-01T17:56:45Z",
          "updatedAt": "2021-11-01T17:56:45Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair notes from IETF 112 meeting: this is on hold pending #25 which is itself on hold pending output of MASQUE HTTP Datagrams design team",
          "createdAt": "2021-11-09T13:24:35Z",
          "updatedAt": "2021-11-09T13:24:35Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Also from 112: No strong desire to keep things exactly aligned with QUIC frames, so fine to have length in any position and to remove final length.",
          "createdAt": "2021-11-16T19:54:42Z",
          "updatedAt": "2021-11-16T19:54:42Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDODnOl8849un68",
      "title": "Clarify flow control model and differences from H2",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/30",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "duplicate"
      ],
      "body": "Since QUIC's flow control credits work differently from H2, it may be worth explicitly stating how this works here.\r\n\r\n_Originally posted by @afrind in https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/26#discussion_r736006161_",
      "createdAt": "2021-10-25T22:32:32Z",
      "updatedAt": "2021-11-05T04:40:50Z",
      "closedAt": "2021-11-05T04:40:50Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed this needs some text, #27 has more details for flow control, closing in favor of that.",
          "createdAt": "2021-11-05T04:40:50Z",
          "updatedAt": "2021-11-05T04:40:50Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "I_kwDODnOl8849uogw",
      "title": "Document how WT_DATAGRAM compares to the H3 Datagram capsules?",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/31",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "How does WT_DATAGRAM compare to the Datagram capsule from masque?\r\n\r\n_Originally posted by @afrind in https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/26#discussion_r736007719_",
      "createdAt": "2021-10-25T22:37:23Z",
      "updatedAt": "2021-11-05T04:24:14Z",
      "closedAt": "2021-11-05T04:24:14Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Also \r\n> We might want to say more here because there's no reason I can't send a WT_DATAGRAM of 1MB.",
          "createdAt": "2021-10-25T22:37:55Z",
          "updatedAt": "2021-10-25T22:37:55Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "We should decide whether or not we want to use capsules in general, I think. If so, then we can use a datagram capsule and get rid of WT_DATAGRAM. (See #29 for more discussion)",
          "createdAt": "2021-11-05T04:22:02Z",
          "updatedAt": "2021-11-05T04:22:02Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Ah, this is already covered by #25.",
          "createdAt": "2021-11-05T04:24:14Z",
          "updatedAt": "2021-11-05T04:24:14Z"
        }
      ]
    },
    {
      "number": 32,
      "id": "I_kwDODnOl8849uo1x",
      "title": "Redo the examples with a different stream ID space.",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/32",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "afrind"
      ],
      "labels": [
        "editorial",
        "ready for PR"
      ],
      "body": "We should redo the examples with a different stream ID space.\r\n\r\n_Originally posted by @afrind in https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/26#discussion_r736008436_",
      "createdAt": "2021-10-25T22:40:12Z",
      "updatedAt": "2023-07-10T21:23:55Z",
      "closedAt": "2023-07-10T21:23:55Z",
      "comments": []
    },
    {
      "number": 38,
      "id": "I_kwDODnOl88497qyK",
      "title": "Why forbid frames before the session is accepted?",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/38",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "has pull request",
        "ietf-113",
        "ready for PR"
      ],
      "body": ">  From the client's perspective, a WebTransport session is established when the client receives a 200 response. From the server's perspective, a session is established once it sends a 200 response. Both endpoints MUST NOT send any WebTransport frames on a given session before that session is established.\r\n\r\nI don't think that this is necessary, or helpful.  And I don't think that you can police it either.\r\n\r\nIt is true that a client cannot initiate any streams before the session is created (because the stream limits start at zero), but I see no reason not to pipeline WT_DATAGRAM or MAX_* frames if the h2-level flow control permits it.  The MAX_* frames are particularly useful in that they allow the server to send real data immediately, cutting a round trip off.",
      "createdAt": "2021-10-29T00:19:31Z",
      "updatedAt": "2023-02-21T23:17:08Z",
      "closedAt": "2023-02-21T23:17:08Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Given that the limits start at zero (do we state that explicitly anywhere?), and we're not including any sort of SETTINGS/default settings, it definitely seems like we ought to be able to just start spewing frames into the CONNECT stream, which are discarded if the CONNECT request is rejected.",
          "createdAt": "2021-11-05T04:42:59Z",
          "updatedAt": "2021-11-05T04:42:59Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed at 113, consensus in room to allow sending any frames allowed by flow control",
          "createdAt": "2022-03-24T14:38:52Z",
          "updatedAt": "2022-03-24T14:38:52Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Text in H3 here: https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http3/pull/80, can probably make it look similar for H2.",
          "createdAt": "2022-10-28T17:48:05Z",
          "updatedAt": "2022-10-28T17:48:05Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "I_kwDODnOl88497reW",
      "title": "WT_PADDING is redundant with h2 padding",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/40",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "editorial",
        "has pull request"
      ],
      "body": "This is not a bad thing.  In fact it's a deliberate choice.  It might be worth noting the redundancy so people don't think we're a bit dim.  We might also add that this padding is less tunable than h2 padding.",
      "createdAt": "2021-10-29T00:26:33Z",
      "updatedAt": "2023-02-21T23:19:55Z",
      "closedAt": "2023-02-21T23:19:55Z",
      "comments": [
        {
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "body": "Do we actually need WT_PADDING, and if so, does it need to be in this document?",
          "createdAt": "2023-02-07T03:22:41Z",
          "updatedAt": "2023-02-07T03:22:41Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson do you remember why we deliberately chose to have this separate padding instead of just relying on the h2 padding?",
          "createdAt": "2023-02-07T23:48:38Z",
          "updatedAt": "2023-02-07T23:48:38Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't recall the specifics 18 months on.  However, the basic problems are invariant.  The different padding schemes offer different capabilities due to a bunch of different design trade-offs and inherent properties of each approach.\r\n\r\nh2 padding only applies to one hop, but WT_PADDING would traverse intermediaries (because it is application data as far as they are concerned).  Consequently, you might want to use WT_PADDING if your goal is to protect against leaks on remote hops.  This is because each operates on a different scope.\r\n\r\nWT_PADDING doesn't get to be smaller than the minimum capsule size, but h2 padding can be any size.  That means that a padding strategy is potentially more efficient in h2 as you need to include WT_PADDING and its overheads.  This is because the more padding integration in h2 is more complete, but also more complex.\r\n\r\nFinally, there are all the usual software engineering constraints.  Maybe you have access to padding functions in your WT stack, but not the h2 stack.",
          "createdAt": "2023-02-13T06:04:41Z",
          "updatedAt": "2023-02-13T06:04:41Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Many thanks @martinthomson! Added a version of that to the padding section (noting that padding is a generic capsule being defined here, so others can use it even if not over HTTP/2).",
          "createdAt": "2023-02-21T05:54:53Z",
          "updatedAt": "2023-02-21T05:54:53Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "I_kwDODnOl88497wpu",
      "title": "Error handling",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/44",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "vasilvv"
      ],
      "labels": [
        "ietf-112",
        "ietf-113",
        "http3",
        "ready for PR",
        "ietf-114"
      ],
      "body": "There is no error handling capability in the protocol at all.\r\n\r\nWe need a framework for describing how errors are handled.  That might reuse HTTP/2 signaling (which might not be the best idea if we are serious about this being mostly generic) or they might use a new frame type for signaling session-level errors.\r\n\r\nThe HTTP/3 draft has a termination signal; that might be the best option.",
      "createdAt": "2021-10-29T01:17:03Z",
      "updatedAt": "2024-05-14T22:44:22Z",
      "closedAt": "2024-05-14T22:44:21Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed, there's basically a paragraph for every frame type/mechanism about what to do when the peer violates behavioral requirements that we've left out until we've got this.\r\n\r\nIt seems like having a non-HTTP/2 dependent mechanism would be useful, and I don't think we need much more than \"we're done here because X reason\" like the H3 doc has.",
          "createdAt": "2021-11-05T04:45:18Z",
          "updatedAt": "2021-11-05T04:45:18Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair notes from IETF 112 meeting: plan to align with WebTransport over HTTP/3 as much as possible, wait for progress there",
          "createdAt": "2021-11-09T13:36:48Z",
          "updatedAt": "2021-11-09T13:36:48Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussed in editors' call - looks like this can be solved by saying that a receiver that detects a violation or other fatal error needs to reset the h2 stream.",
          "createdAt": "2023-02-07T23:51:08Z",
          "updatedAt": "2023-02-07T23:51:08Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed at IETF 116. Consensus in room was that the receiver that detects a violation or other fatal error needs to reset the h2 stream.",
          "createdAt": "2023-03-29T05:51:51Z",
          "updatedAt": "2023-03-29T05:51:51Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed at IETF 117. Consensus in room was that the receiver that detects a violation or other fatal error needs to reset the h2 stream.\r\n\r\n(Yes, this is copy-pasted from the last one... we just need a PR)",
          "createdAt": "2023-07-27T20:44:31Z",
          "updatedAt": "2023-07-27T20:44:31Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in editor's meeting. This does not need discussion time at IETF 118, see previous comments for planned resolution.",
          "createdAt": "2023-10-31T22:30:26Z",
          "updatedAt": "2023-10-31T22:30:26Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: as part of resolving this, recommend resolving #101 in the same PR",
          "createdAt": "2024-01-23T23:19:40Z",
          "updatedAt": "2024-01-23T23:19:40Z"
        }
      ]
    },
    {
      "number": 48,
      "id": "I_kwDODnOl88497yJ_",
      "title": "Transport Properties (currently Section 8)",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/48",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "editorial",
        "has pull request",
        "ready for PR"
      ],
      "body": "When I did #39, I hadn't read Section 8.  My suggestion is that this be merged into the material from the (current) Sections 4 and 5.\r\n\r\nAlso, this is the first use of Http2Transport. I think that we should remove that.  It's a fine class name for a C++ implementation, but we don't use it elsewhere.",
      "createdAt": "2021-10-29T01:33:24Z",
      "updatedAt": "2023-02-21T23:21:36Z",
      "closedAt": "2023-02-21T23:21:36Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Just to make sure I understand, the idea is for this \"what properties do we provide and how do they satisfy the WT requirements\" part to be up front with 4/5? Seems good to me.\r\n\r\n> Also, this is the first use of Http2Transport.\r\n\r\nYeah, that's mostly leftover from previous versions where we had a more defined name. Can clean up and not lose anything of value, I think.\r\n",
          "createdAt": "2021-11-05T04:47:54Z",
          "updatedAt": "2021-11-05T04:47:54Z"
        }
      ]
    },
    {
      "number": 51,
      "id": "I_kwDODnOl884-fQIw",
      "title": "Should SETTINGS_ENABLE_CONNECT_PROTOCOL be sent?",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/51",
      "state": "CLOSED",
      "author": "ddragana",
      "authorAssociation": "NONE",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ietf-112",
        "ietf-113",
        "ready for PR",
        "capsule-dt",
        "ietf-114"
      ],
      "body": "I am afraid that some implementations will oversee the fact that SETTINGS_ENABLE_WEBTRANSPORT actually enables SETTINGS_ENABLE_CONNECT_PROTOCOL and thereby other functionalities, e.g. WebSockets. Therefore it may be better to explicitly send the setting.\r\nThis section should also link to https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-h3-websockets-00 and hopefully that draft should have some text about handling the case when a particular extended-connect protocol is not supported.\r\n\r\n ",
      "createdAt": "2021-11-09T09:30:41Z",
      "updatedAt": "2022-12-16T19:10:19Z",
      "closedAt": "2022-12-16T19:10:19Z",
      "comments": [
        {
          "author": "ddragana",
          "authorAssociation": "NONE",
          "body": "WebTransport over HTTP/3 has the similar issue.",
          "createdAt": "2021-11-09T09:31:54Z",
          "updatedAt": "2021-11-09T09:31:54Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "Or perhaps, WebTransport is evolving into something different enough that we don't want to imply support for H2 extended CONNECT for websockets by virtue of supporting webtransport.",
          "createdAt": "2021-11-09T11:55:31Z",
          "updatedAt": "2021-11-09T11:55:31Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, I think that - based on discussion about what the setting means - we could reasonably say that supporting extended CONNECT is enough for h2.  For h3, we definitely need the intermediary to signal support.\r\n\r\nHOWEVER, an intermediary that fowards HTTP/2 on to HTTP/3 without understanding the protocol contents (which might be possible for *some* extended CONNECT usages, like websockets) will fail fairly spectacularly when it comes to forwarding WebTransport from h2 to h3.  Because we decided that streams and datagrams need to use *real* streams and datagrams in h3.  That comes back to needing a clear signal of support..\r\n\r\nUNLESS, if we assume that a server should not ever be in a position to expose an endpoint that speaks WebTransport without ensuring that the resource supports it.  In which case, the error that arises from the h2->h3 forwarding is perfectly OK.\r\n\r\nI think that I could live with any outcome here as long as these little wrinkles were properly acknowledged.  I might prefer the minimal approach (no setting for this protocol) if I had to choose.  Adding stuff later is much easier than taking them away.",
          "createdAt": "2021-11-09T15:39:01Z",
          "updatedAt": "2021-11-09T15:39:01Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Clarifying question about this part, too: \r\n> This section should also link to https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-h3-websockets-00 and hopefully that draft should have some text about handling the case when a particular extended-connect protocol is not supported.\r\n\r\nWouldn't we have HTTP/3 point to WebSockets over H3, whereas here we'd point to WebSockets over H2?",
          "createdAt": "2022-03-23T02:19:44Z",
          "updatedAt": "2022-03-23T02:19:44Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Now that we have SETTINGS_MAX_WEBTRANSPORT_SESSIONS in the [DT output](https://github.com/ekinnear/draft-ietf-webtrans-http2/pull/1/files), that should suffice. Keeping this pending that outcome and any updates we want to make for clarity.",
          "createdAt": "2022-07-20T21:42:21Z",
          "updatedAt": "2022-07-20T21:42:21Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "After further discussion, it seems like teaching every layer about every other layer's enablement signals is more painful than originally assumed. Let's keep all the signals.",
          "createdAt": "2022-10-28T17:29:07Z",
          "updatedAt": "2022-10-28T17:29:07Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussed at IETF 115, consensus in room to require all the relevant settings and transport parameters to be sent individually - for this issue means: require that SETTINGS_ENABLE_CONNECT_PROTOCOL be sent",
          "createdAt": "2022-11-10T14:02:50Z",
          "updatedAt": "2022-11-10T14:02:50Z"
        }
      ]
    },
    {
      "number": 52,
      "id": "I_kwDODnOl884-fcNE",
      "title": "The length field in the generic deffinition of frame",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/52",
      "state": "CLOSED",
      "author": "ddragana",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The generic frame definition has a length field, but that field is set to 0 for some frames, I think that field should be frame specific and not defined for all frame.",
      "createdAt": "2021-11-09T10:20:20Z",
      "updatedAt": "2021-11-09T22:04:32Z",
      "closedAt": "2021-11-09T22:04:32Z",
      "comments": [
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "This is somewhat tied to the discussion in #29.  Should we exactly mirror QUIC, making it possible to re-use the parser bits?  Do we need to handle unknown frame types?  Should we be using CAPSULE protocol?",
          "createdAt": "2021-11-09T11:57:01Z",
          "updatedAt": "2021-11-09T11:57:01Z"
        },
        {
          "author": "ddragana",
          "authorAssociation": "NONE",
          "body": "I have missed previous discussions. From the today's discussion on the meeting, we can close this issue.",
          "createdAt": "2021-11-09T22:04:32Z",
          "updatedAt": "2021-11-09T22:04:32Z"
        }
      ]
    },
    {
      "number": 53,
      "id": "I_kwDODnOl884-fcsd",
      "title": "Section WT_RESET_STREAM frame",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/53",
      "state": "CLOSED",
      "author": "ddragana",
      "authorAssociation": "NONE",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "editorial",
        "has pull request"
      ],
      "body": "> After sending a WT_RESET_STREAM, an endpoint ceases transmission and\r\n   retransmission of WT_STREAM frames on the identified stream.  A\r\n   receiver of WT_RESET_STREAM can discard any data that it already\r\n   received on that stream.\"\r\n\r\n\r\nThis is using TCP and should not talk about ceasing  retransmissions. \r\n",
      "createdAt": "2021-11-09T10:22:12Z",
      "updatedAt": "2022-03-23T09:34:33Z",
      "closedAt": "2022-03-23T09:34:33Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Very good point! Will clean up",
          "createdAt": "2022-03-23T02:15:18Z",
          "updatedAt": "2022-03-23T02:15:18Z"
        }
      ]
    },
    {
      "number": 59,
      "id": "I_kwDODnOl885VkV6f",
      "title": "Title: \"using\" or \"over\"?",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/59",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "vasilvv"
      ],
      "labels": [
        "editorial"
      ],
      "body": "The HTTP/2 draft uses \"using\".  This one uses \"over\".  This looks bad in my (sidebar) browser tabs.",
      "createdAt": "2021-11-09T12:24:47Z",
      "updatedAt": "2022-11-05T10:13:01Z",
      "closedAt": "2022-11-05T10:13:01Z",
      "comments": [
        {
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "body": "HTTP/3 draft describes itself as \"a mapping of HTTP semantics over QUIC\", so I moderately prefer \"over\" based on that precedent (and well, the fact that all drafts that I wrote use \"over\").",
          "createdAt": "2022-03-21T20:48:38Z",
          "updatedAt": "2022-03-21T20:48:38Z"
        }
      ]
    },
    {
      "number": 61,
      "id": "I_kwDODnOl885VrWz-",
      "title": "Choose a status code for when a resource does not support WebTransport",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/61",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ready for PR"
      ],
      "body": "Current text:\r\n>Upon receiving an extended CONNECT request with a `:protocol` field set to\r\n`webtransport`, the HTTP server checks if the identified resource supports\r\nWebTransport sessions. If the resource does not, the server SHOULD reply with\r\nstatus code 404 ({{Section 6.5.4 of !RFC7231}}). If it does, it MAY accept the\r\nsession by replying with a 2xx series status code, as defined in Section 15.3\r\nof {{!SEMANTICS=I-D.ietf-httpbis-semantics}}. The WebTransport server MUST\r\nverify the `Origin` header to ensure that the specified origin is allowed to\r\naccess the server in question.\r\n\r\n----\r\n> We probably already talked about this, but 404 is not right. 406, maybe. 400, sure. But 404 indicates that the resource doesn\u2019t exist and the text here implies that it does.\r\n\r\n_Originally posted by @martinthomson in https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/58#discussion_r1008899128_\r\n\r\n\r\n      ",
      "createdAt": "2022-11-06T14:46:01Z",
      "updatedAt": "2023-02-08T02:03:59Z",
      "closedAt": "2023-02-08T02:03:59Z",
      "comments": [
        {
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "body": "The corresponding text in HTTP/3 appears to be:\r\n> Upon receiving an extended CONNECT request with a :protocol field set to webtransport, the HTTP/3 server can check if it has a WebTransport server associated with the specified :authority and :path values. If it does not, it SHOULD reply with status code 404 (Section 15.5.4, [[HTTP](https://www.ietf.org/archive/id/draft-ietf-webtrans-http3-03.html#HTTP)]).\r\n\r\nThis is correct, though I am not sure how necessary it is.",
          "createdAt": "2022-11-08T11:36:42Z",
          "updatedAt": "2022-11-08T11:36:42Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussed in editor's call: 406 sounds good",
          "createdAt": "2023-02-07T23:54:19Z",
          "updatedAt": "2023-02-07T23:54:19Z"
        }
      ]
    },
    {
      "number": 62,
      "id": "I_kwDODnOl885VrXC8",
      "title": "Can a client send a request body without awaiting a response?",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/62",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "has pull request"
      ],
      "body": "        I don\u2019t agree with this. A client can send a request body without awaiting a response. Always.\r\n\r\n_Originally posted by @martinthomson in https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/58#discussion_r1008899457_\r\n      ",
      "createdAt": "2022-11-06T14:49:04Z",
      "updatedAt": "2023-02-21T23:17:09Z",
      "closedAt": "2023-02-21T23:17:09Z",
      "comments": [
        {
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "body": "Are those concerns orthogonal?  I don't believe there is anything in the text that says you cannot send data before the session is established.",
          "createdAt": "2022-11-08T11:39:00Z",
          "updatedAt": "2022-11-08T11:39:00Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "I_kwDODnOl885dy3gt",
      "title": "Initial flow control windows",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/63",
      "state": "CLOSED",
      "author": "vasilvv",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "vasilvv"
      ],
      "labels": [
        "has pull request",
        "ready for PR"
      ],
      "body": "The document currently does not specify what the initial flow control windows are, nor how to change those.\r\n\r\nWe have two options:\r\n* Add WT_SETTINGS capsule\r\n* Put those into headers",
      "createdAt": "2023-02-07T03:24:58Z",
      "updatedAt": "2023-03-07T23:07:17Z",
      "closedAt": "2023-03-07T23:07:17Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Discussed in editor's meeting, initial thinking is to put these values into the headers on the CONNECT message, rather than defining a new capsule or otherwise polluting HTTP/2's settings",
          "createdAt": "2023-02-07T23:26:07Z",
          "updatedAt": "2023-02-07T23:26:07Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Is there any reason that you want to avoid settings?\r\n\r\nThe main thing that using settings would do is to provide the client with non-zero initial flow control limits on WT streams, so that it can send application data with zero latency.  You can't get that without using settings.\r\n\r\nFunctionally speaking, there is no real difference between a new capsule and a field, except that you can be a little more efficient with a capsule, modulo some issues regarding sequencing (do you allow it to appear anywhere? how do you manage changing values? etc...)",
          "createdAt": "2023-02-13T05:55:53Z",
          "updatedAt": "2023-02-13T05:55:53Z"
        },
        {
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is there any reason that you want to avoid settings?\r\n\r\nIf we're talking about H2-connection level settings, then those are scoped to the entire connection.  Using those would bring us closer to how H3 behaves (where connection-level stream configuration applies to WebTransport stream due to WT streams also being QUIC streams).  On the other hand, we have designed WebTransport over HTTP/2 so that everything that happens within the CONNECT stream, so using headers/capsule instead of settings would be consistent with that.  It would also mean you can transparently proxy WT-H2 to WT-H2 without parsing it (I do realize we currently say that you're not supposed to do that).\r\n\r\n> Functionally speaking, there is no real difference between a new capsule and a field, except that you can be a little more efficient with a capsule, modulo some issues regarding sequencing (do you allow it to appear anywhere? how do you manage changing values? etc...)\r\n\r\nAgreed.  I have a mild preference for header fields since those are guaranteed to always arrive before any payload, making reasoning about their properties slightly easier.",
          "createdAt": "2023-02-13T14:32:35Z",
          "updatedAt": "2023-02-13T14:32:35Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "The problem, as I see it, is that fields or capsules both lead to a situation where the client is unable to send any application data in its first flight (that is, along with the CONNECT-wossname request).  \r\n\r\nWhat I want to avoid is the case where clients decide to improve performance by remembering initial values.  I'm very much inclined to implement that caching, if only because it means that we can start using a session more quickly (for anything other than 0-RTT).\r\n\r\nPerhaps the right answer is that we need some sort of way to encapsulate origin-wide per-resource configuration (that is, a baseline configuration that applies to all resources on the origin) and - until then - we stick with populating each resource with fields.",
          "createdAt": "2023-02-20T01:59:11Z",
          "updatedAt": "2023-02-20T01:59:11Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed during editors' call, see https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/66#issuecomment-1439244278",
          "createdAt": "2023-02-21T23:59:39Z",
          "updatedAt": "2023-02-21T23:59:39Z"
        }
      ]
    },
    {
      "number": 69,
      "id": "I_kwDODnOl885fBeIU",
      "title": "Use HTTP status code 2xx instead of 200",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/69",
      "state": "CLOSED",
      "author": "DavidSchinazi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "editorial",
        "ready for PR"
      ],
      "body": "The document currently mentions HTTP status code 200 explicitly, instead of following the usual convention of saying \"any 2xx\" status code. We already made this change in WebTransport over HTTP/3, we should do the same in this doc.",
      "createdAt": "2023-02-21T23:18:52Z",
      "updatedAt": "2023-02-21T23:26:26Z",
      "closedAt": "2023-02-21T23:26:26Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Ack, we're a bit mixed in the HTTP/2 document right now, will update so we're consistent everywhere.",
          "createdAt": "2023-02-21T23:19:33Z",
          "updatedAt": "2023-02-21T23:19:33Z"
        }
      ]
    },
    {
      "number": 71,
      "id": "I_kwDODnOl885fBnQ9",
      "title": "Defaults for newly created sessions",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/71",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "has pull request",
        "ready for PR",
        "ietf-116"
      ],
      "body": "A newly created session can be used for control data (WT_MAX_STREAMS, etc...) and datagrams, but it can't be used for reliable application data.  This is because the initial limits for streams is zero and the initial limits for stream data (both session-level and stream-level limits) is also zero.\r\n\r\nWe might consider setting baseline defaults for sessions.  These would likely need to be small because there would be no way to retract any value that was set in a default.  That is, if we set a stream limit of 10 (for any type of stream), then all implementations would be required to accept 10 streams.\r\n\r\nIf we go this way, we might use HTTP/2 stream limit defaults as a guide.  For stream data limits at least, we might allow 64k of data (the HTTP/2 default for [SETTINGS_INITIAL_WINDOW_SIZE](https://datatracker.ietf.org/doc/html/rfc9113#section-6.5.2-2.8.1)) relying on the same reasoning as HTTP/2 (which wasn't that thoroughly reasoned, to be honest, but whatever).  We cannot use that approach for stream limits as HTTP/2 sets an unlimited default, which doesn't work with the style of limiting we use.  Also, stream limits are independent of any HTTP/2 resources needed for tracking streams, so that would not apply.\r\n\r\nAlternatively, we might use the current value of the HTTP/2 stream limits.  That is, the value of [SETTINGS_INITIAL_WINDOW_SIZE](https://datatracker.ietf.org/doc/html/rfc9113#section-6.5.2-2.8.1) might be input to a function that determines session- and stream-level limits.  This might also work if [SETTINGS_MAX_CONCURRENT_STREAMS](https://datatracker.ietf.org/doc/html/rfc9113#section-6.5.2-2.6.1) is set, but we might need a cap otherwise.",
      "createdAt": "2023-02-22T00:13:28Z",
      "updatedAt": "2023-05-16T22:46:54Z",
      "closedAt": "2023-05-16T22:46:54Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in editor's meeting, this will need WG discussion at IETF 116",
          "createdAt": "2023-03-07T23:27:55Z",
          "updatedAt": "2023-03-07T23:27:55Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed at IETF 116, consensus in room was to not use default values and instead communicate numbers. We'll discuss how to communicate this (settings, headers, both, etc.) at a future time.",
          "createdAt": "2023-03-29T04:53:04Z",
          "updatedAt": "2023-03-29T04:53:04Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed again at IETF 116 at the end of the session. Consensus in room was to not use default values and instead communicate numbers with settings. The setting default value is zero. If an intermediary doesn't know what limits backends accept, it can not send the setting.",
          "createdAt": "2023-03-29T06:05:00Z",
          "updatedAt": "2023-03-29T06:05:00Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in editor's meeting, see discussion on PR #78 ",
          "createdAt": "2023-04-18T22:51:41Z",
          "updatedAt": "2023-04-18T22:51:41Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "I_kwDODnOl885fBomS",
      "title": "Settings for newly created sessions",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/72",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "has pull request",
        "ready for PR",
        "ietf-116"
      ],
      "body": "As an extension or alternative to #71, we might consider HTTP/2 settings that include initial values for WebTransport sessions.  Having non-zero initial values for stream and data limits would improve performance by allowing clients and servers to start sending reliable application data at the same time that they create a session.\r\n\r\nThe obvious drawback of this approach is that settings apply to connections, whereas the limits in question are resource-based.  That has two aspects: there might be multiple WebTransport resources on the same origin that have different applications and therefore different constraints; and, in deployments where there are intermediaries involved, this requires coordination across multiple connections in order to work effectively, especially if an intermediary serves multiple clients or servers and coalesces requests from more than one peer onto a single connection.  It is possible to present the lowest acceptable value across those supported by resources or remote peers, but establishing what that value is might be operationally challenging.",
      "createdAt": "2023-02-22T00:20:27Z",
      "updatedAt": "2023-05-16T22:46:54Z",
      "closedAt": "2023-05-16T22:46:54Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in editor's meeting, this will need WG discussion at IETF 116",
          "createdAt": "2023-03-07T23:27:43Z",
          "updatedAt": "2023-03-07T23:27:43Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed at IETF 116, consensus in room was to not use default values and instead communicate numbers. We'll discuss how to communicate this (settings, headers, both, etc.) at a future time.",
          "createdAt": "2023-03-29T04:53:11Z",
          "updatedAt": "2023-03-29T04:53:11Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed again at IETF 116 at the end of the session. Consensus in room was to not use default values and instead communicate numbers with settings. The setting default value is zero. If an intermediary doesn't know what limits backends accept, it can not send the setting.",
          "createdAt": "2023-03-29T06:05:04Z",
          "updatedAt": "2023-03-29T06:05:04Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in editor's meeting, see discussion on PR https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/78",
          "createdAt": "2023-04-18T22:52:46Z",
          "updatedAt": "2023-04-18T22:52:46Z"
        }
      ]
    },
    {
      "number": 73,
      "id": "I_kwDODnOl885feewM",
      "title": "What is the purpose of SETTINGS_ENABLE_WEBTRANSPORT in h2?",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/73",
      "state": "CLOSED",
      "author": "DavidSchinazi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ready for PR"
      ],
      "body": "I can't seem to remember or work out what the purpose of SETTINGS_ENABLE_WEBTRANSPORT is now that we have SETTINGS_WEBTRANSPORT_MAX_SESSIONS. This leads to the following questions:\r\n* If the server sends SETTINGS_WEBTRANSPORT_MAX_SESSIONS>0 but SETTINGS_ENABLE_WEBTRANSPORT=0, what does that mean?\r\n* If the client sends SETTINGS_ENABLE_WEBTRANSPORT=0 but sends a WebTransport request, what is the purpose of having the server fail the request?",
      "createdAt": "2023-02-27T19:38:30Z",
      "updatedAt": "2023-03-13T22:47:40Z",
      "closedAt": "2023-03-13T22:47:40Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, I thought that we would remove SETTINGS_ENABLE_WEBTRANSPORT when the session limit was added.  If nothing else, it removes those awkward interactions.",
          "createdAt": "2023-02-27T20:58:15Z",
          "updatedAt": "2023-02-27T20:58:15Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in editor's meeting, sounds like we should remove SETTINGS_ENABLE_WEBTRANSPORT. We might add another setting to be removed by the RFC editor for versioning between drafts",
          "createdAt": "2023-03-07T23:26:33Z",
          "updatedAt": "2023-03-07T23:26:33Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "> When an HTTP/2 connection is established, both the client and server have to send a SETTINGS_ENABLE_WEBTRANSPORT setting to indicate that they both support WebTransport over HTTP/2.[\u00b6](https://ietf-wg-webtrans.github.io/draft-webtransport-http2/draft-ietf-webtrans-http2.html#section-2-2)\r\n\r\n> The server also needs to send a SETTINGS_WEBTRANSPORT_MAX_SESSIONS setting with a value greater than \"0\" to indicate the number of concurrent sessions it is willing to receive.[\u00b6](https://ietf-wg-webtrans.github.io/draft-webtransport-http2/draft-ietf-webtrans-http2.html#section-2-3)\r\n\r\nIIRC, we discussed at IETF 115 and only the server needed to send MAX_SESSIONS, so we kept both. Can spell that either way though.",
          "createdAt": "2023-03-07T23:29:54Z",
          "updatedAt": "2023-03-07T23:29:54Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "If we're doing this for H2, should we also do it for H3, since we have SETTINGS_MAX_WEBTRANSPORT_SESSIONS there, too?",
          "createdAt": "2023-03-11T00:13:35Z",
          "updatedAt": "2023-03-11T00:13:35Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "* h3 requires SETTINGS_ENABLE_WEBTRANSPORT because it changes the format of server-initiated bidi streams\r\n* h2 has no such requirement for a setting",
          "createdAt": "2023-03-11T00:29:20Z",
          "updatedAt": "2023-03-11T00:29:20Z"
        }
      ]
    },
    {
      "number": 74,
      "id": "I_kwDODnOl885gOVtw",
      "title": "Rename this repo",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/74",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "DavidSchinazi"
      ],
      "labels": [],
      "body": "So that it matches the h3 one.",
      "createdAt": "2023-03-07T23:29:01Z",
      "updatedAt": "2023-03-07T23:29:58Z",
      "closedAt": "2023-03-07T23:29:58Z",
      "comments": []
    },
    {
      "number": 80,
      "id": "I_kwDODnOl885jwrAz",
      "title": "Discuss use outside of the context of HTTP/2",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/80",
      "state": "OPEN",
      "author": "vasilvv",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "vasilvv"
      ],
      "labels": [
        "editorial",
        "ready for PR"
      ],
      "body": "WebTransport over HTTP/2, as it's currently defined, is, at its core, a protocol that is semantically compatible with QUIC, but works over capsules (i.e. TLV over TCP).  This means that it might be useful outside of HTTP/2 context.\r\n\r\nThe main gotcha is, of course, that we do use settings and headers.  The way we use settings is an optimization that only makes sense for pooling; on the other hand, I don't think we can function without the headers.\r\n\r\nSome possible applications we may to consider / discuss:\r\n\r\n1. HTTP/1.1 should just work, since capsules were designed with H/1 support in mind.\r\n2. Using it via WebSockets is possible, but you'd have to figure out how to exchange headers.",
      "createdAt": "2023-04-18T19:20:28Z",
      "updatedAt": "2023-10-31T22:30:58Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "I thought we'd previously decided that to be out of scope and something that we could pick up in the future as a use case became clear, but purely philosophically it is interesting to think about. If there are (minor) changes that we could make which would help enable that kind of reuse elsewhere, that could be worth considering.",
          "createdAt": "2023-04-18T19:32:56Z",
          "updatedAt": "2023-04-18T19:32:56Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in editor's meeting, this can be resolved by adding a short appendix",
          "createdAt": "2023-04-18T22:54:09Z",
          "updatedAt": "2023-04-18T22:54:09Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Fundamentally, you can use this over any bidirectional, ordered byte stream.\r\n\r\nSeparately, the way that you use this with HTTP/2 is the same as you do with HTTP/1.1, but that's not true if you don't have HTTP.",
          "createdAt": "2023-06-27T22:57:19Z",
          "updatedAt": "2023-06-27T22:57:19Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "But we should say HTTP/1.1 and NOT HTTP versions other than 2.  Because you clearly can't do this with HTTP/3.  The key reason why HTTP/1.1 *doesn't* work is that we have settings.  Usage there would depend on the use of CONNECT proper, I guess, ...  Not sure about that, though.  Thankfully, the ..._MAX_SESSIONS setting makes no sense in HTTP/1.1.",
          "createdAt": "2023-06-27T23:00:23Z",
          "updatedAt": "2023-06-27T23:00:23Z"
        }
      ]
    },
    {
      "number": 81,
      "id": "I_kwDODnOl885jxcB-",
      "title": "Pick where to define Upgrade token",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/81",
      "state": "CLOSED",
      "author": "DavidSchinazi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "vasilvv"
      ],
      "labels": [
        "ready for PR"
      ],
      "body": "Currently both draft-ietf-webtrans-http2 and draft-ietf-webtrans-http3 use the \"webtransport\" Upgrade Token but we need to bolt down which draft registers it with IANA",
      "createdAt": "2023-03-07T23:59:46Z",
      "updatedAt": "2023-04-18T22:22:13Z",
      "closedAt": "2023-04-18T22:22:13Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussed in editor's meeting: proposal is to define it in draft-ietf-webtrans-http3 but set reference to both draft-ietf-webtrans-http2 and draft-ietf-webtrans-http3",
          "createdAt": "2023-03-08T00:00:16Z",
          "updatedAt": "2023-03-08T00:00:16Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "NONE",
          "body": "That sounds reasonable",
          "createdAt": "2023-03-08T02:34:56Z",
          "updatedAt": "2023-03-08T02:34:56Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in editor's meeting. Looks like this is already done in both h2 and h3. Closing",
          "createdAt": "2023-04-18T22:22:13Z",
          "updatedAt": "2023-04-18T22:22:13Z"
        }
      ]
    },
    {
      "number": 82,
      "id": "I_kwDODnOl885mssyF",
      "title": "H3 typo",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/82",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [
        "ekinnear"
      ],
      "labels": [],
      "body": "> This document defines a SETTINGS_WEBTRANSPORT_MAX_SESSIONS parameter that allows the server to limit the maximum number of concurrent WebTransport sessions on a single HTTP/3 connection.\r\n\r\n",
      "createdAt": "2023-05-24T00:51:42Z",
      "updatedAt": "2023-06-13T22:39:36Z",
      "closedAt": "2023-06-13T22:39:36Z",
      "comments": []
    },
    {
      "number": 83,
      "id": "I_kwDODnOl885msuJS",
      "title": "\"MUST reply to the CONNECT request with a status code 426\" is inconsistent with HTTP/3",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/83",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ready for PR"
      ],
      "body": "I don't think the answer matters much but the inconsistency sticks out. Or perhaps its intentional?\r\n\r\nIn H3 we say \"MUST reset all of the CONNECT streams it is not willing to process with the HTTP_REQUEST_REJECTED status \" and later on that actually a server could use \"HTTP status code 429\".\r\n\r\nIn H2 we say only \"MUST reply to the CONNECT request with a status code 426, indicating that the client attempted to open too many sessions.\". HTTP/2's REFUSED_STREAM is pretty close to H3's HTTP_REQUEST_REJECTED if we wanted to recommend that.",
      "createdAt": "2023-05-24T00:59:19Z",
      "updatedAt": "2023-10-23T22:15:52Z",
      "closedAt": "2023-10-23T22:15:52Z",
      "comments": [
        {
          "author": "LPardue",
          "authorAssociation": "NONE",
          "body": "Also a 426 is [Upgrade Required](https://www.rfc-editor.org/rfc/rfc9110.html#name-426-upgrade-required), so I'm not sure if that's a typo, Seems odd if intentional.",
          "createdAt": "2023-05-24T01:01:09Z",
          "updatedAt": "2023-05-24T01:01:09Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "426 -> 429, whoops\r\n\r\nThat said, we may also want to make it consistent with HTTP/3",
          "createdAt": "2023-06-27T22:59:11Z",
          "updatedAt": "2023-06-27T22:59:11Z"
        }
      ]
    },
    {
      "number": 87,
      "id": "I_kwDODnOl885rJzBm",
      "title": "Can we really leave out final size from reset stream?",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/87",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ready for PR",
        "ietf-117"
      ],
      "body": "A question was raised about the following sentence: \r\n\r\n> Unlike the equivalent QUIC frame, this capsule does not include a Final Size field. In-order delivery of [WT_STREAM](https://www.ietf.org/archive/id/draft-ietf-webtrans-http2-06.html#WT_STREAM) capsules ensures that the amount of session-level flow control consumed by a stream is always known by both endpoints.\r\n\r\nWhile in order delivery does help, does it really cover all of the cases for data that may already have been in flight?",
      "createdAt": "2023-07-10T22:58:24Z",
      "updatedAt": "2023-09-19T22:42:59Z",
      "closedAt": "2023-09-19T22:42:59Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussed at editor's meeting: plan is to discuss at 117. @ekinnear can you make slides please?",
          "createdAt": "2023-07-18T22:17:24Z",
          "updatedAt": "2023-07-18T22:17:24Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed at 117. Consensus in room to keep the capsule as-is without Final Size",
          "createdAt": "2023-07-27T20:48:01Z",
          "updatedAt": "2023-07-27T20:48:01Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in editor's meeting. Closing without action as no one has objected since 117.",
          "createdAt": "2023-09-19T22:42:59Z",
          "updatedAt": "2023-09-19T22:42:59Z"
        }
      ]
    },
    {
      "number": 88,
      "id": "I_kwDODnOl885sLWhu",
      "title": "Flow control terminology updates",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/88",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "editorial",
        "ready for PR"
      ],
      "body": "We should clarify: \r\n\r\n- You cannot lower the max number of sessions after the fact\r\n- Stream limits are cumulative, perhaps with an example, saying that you need to keep updating with a higher value if you want more streams (i.e. they are not about the concurrent number of streams)",
      "createdAt": "2023-07-20T23:03:56Z",
      "updatedAt": "2023-10-23T23:32:49Z",
      "closedAt": "2023-10-23T23:32:49Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed at 117. Consensus in room that this editorial clarification is a good idea",
          "createdAt": "2023-07-27T20:50:19Z",
          "updatedAt": "2023-07-27T20:50:19Z"
        }
      ]
    },
    {
      "number": 89,
      "id": "I_kwDODnOl885sLdR7",
      "title": "Renumber setting identifiers",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/89",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ready for PR"
      ],
      "body": "Are setting values 32 bits or 16 bits? ",
      "createdAt": "2023-07-20T23:34:54Z",
      "updatedAt": "2023-10-23T21:03:03Z",
      "closedAt": "2023-10-23T21:03:03Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Identifiers are 16, values are 32.  Issue or question?",
          "createdAt": "2023-09-19T22:07:50Z",
          "updatedAt": "2023-09-19T22:07:50Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Which leads me to realize that all the settings in the draft are impossible: 0x2b603743 is not something that fits in a 16 bit field.",
          "createdAt": "2023-09-19T22:09:51Z",
          "updatedAt": "2023-09-19T22:09:51Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Sorry, yes, that was the gist of the issue -- typed on a phone during a face-to-face conversation.\r\n\r\nWe can just renumber items so that they fit.",
          "createdAt": "2023-10-17T22:08:53Z",
          "updatedAt": "2023-10-17T22:08:53Z"
        }
      ]
    },
    {
      "number": 90,
      "id": "I_kwDODnOl885ua_Ut",
      "title": "Define capsule protocol over WebSocket to enable use where HTTP/2 is not supported",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/90",
      "state": "CLOSED",
      "author": "martenrichter",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "out of scope"
      ],
      "body": "That is kind of a cross posting of the issue from the other webtransport working group (ekinnear suggested posting it here):\r\nhttps://github.com/w3c/webtransport/issues/518\r\nMain idea is to add to the capsule protocol a specification for capsule over websocket, in order to support it in browser, that not yet support the http/2 protocol.\r\n\r\nThe benefits are as follows:\r\n\r\nThe protocol's way of working would be very similar to the actual http/2, so one could easily test ideas without waiting for the browser implementation.\r\n\r\n1. It will not be hard to implement it in a shim/polyfill (or I think it comes naturally out from my node webtransport plugins work)\r\n2. Having it specified ensures, that one shim/polyfill is enough for all future servers deployed that comply to the spec.\r\n3. And it will automatically address points older browsers, that do not support http2 over webtransport (or even webtransport) and one can even with the newer browser work in environments, where UDP is blocked.\r\n\r\nMy proposal would be as follows, the normal capsule protoco isl:\r\n\r\n```\r\nCapsule {\r\n     Capsule Type (i),\r\n     Capsule Length (i),\r\n     Capsule Value (..),\r\n   }\r\n```\r\nThe idea would be to transport it as binary frame/payload of length `Length + 4 `, and the payload will start with capsule type and continue with capsule value. Maybe an initial text frame indicates, that it is a capsule over websocket connection.\r\nThe rest of the http/2 capsule protocol will remain unchanged. So besides a little bit extra overload, the mechanics of most of the protocol will remain unchanged.\r\n",
      "createdAt": "2023-08-16T06:03:13Z",
      "updatedAt": "2024-01-03T08:46:23Z",
      "closedAt": "2023-10-17T22:35:15Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @martenrichter! \r\n\r\nAlso linking #80, where there was a little bit of discussion about both HTTP/1 and WebSockets.",
          "createdAt": "2023-08-16T06:05:18Z",
          "updatedAt": "2023-08-16T06:05:18Z"
        },
        {
          "author": "martenrichter",
          "authorAssociation": "NONE",
          "body": "Also another comment. For example the node.js or the underlying lib implementation has hardcoded http2 settings, so that actually the settings in the http2 webtransport proposal are kind of  a blocker:\r\nhttps://github.com/nodejs/node/pull/49025\r\nhttps://github.com/nodejs/node/issues/48962\r\nSo that initial implementation probably will ignore them.....\r\n",
          "createdAt": "2023-08-16T06:15:16Z",
          "updatedAt": "2023-08-16T06:15:16Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in editor's meeting. We might provide guidance on this in the PR that resolves #80, but we're not going to take on this additional scope unless there's demonstrated interest in this new feature.",
          "createdAt": "2023-09-19T22:53:16Z",
          "updatedAt": "2023-09-19T22:53:16Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "That would fit, thanks @martenrichter. I think when this came up previously, we were much in the same place as we are now: this seems reasonably additive, to the point that if we had clear interest and use cases, it would be possible to write up a spec that would enable some of these uses. Until that happens, we can mention it editorially in the PR mentioned above.",
          "createdAt": "2023-10-17T22:12:25Z",
          "updatedAt": "2023-10-17T22:12:25Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: as discussed in https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/90#issuecomment-1726646433 , this sounds like a good topic for a separate spec. We'll mention that it's possible in the PR that closes #80. If the proponents write up a draft that describes this, we'll happily discuss it in the WebTransport WG - though this might only happen after we're done with the h2 and h3 versions. Closing.",
          "createdAt": "2023-10-17T22:35:15Z",
          "updatedAt": "2023-10-17T22:35:15Z"
        },
        {
          "author": "martenrichter",
          "authorAssociation": "NONE",
          "body": "Thanks, for the feedback. The interest in the feature will really depend, on how fast webtransport over http/2 (and webtransport in general) is implemented in major browsers, and interest in webtransport in general.\r\nI have now implemented a working base http2 implementation of the capsule protocol and webtransport. (Not all of the spec as settings are missing in node)\r\nNext would be to try to do the WebSocket wrapper, after this one can see if it makes sense to write it down.",
          "createdAt": "2023-10-18T09:00:52Z",
          "updatedAt": "2023-10-18T09:00:52Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That's a solid plan, thanks Marten!",
          "createdAt": "2023-10-18T16:50:37Z",
          "updatedAt": "2023-10-18T16:50:37Z"
        },
        {
          "author": "martenrichter",
          "authorAssociation": "NONE",
          "body": "Ok, my implementation is ready:\r\nhttps://github.com/fails-components/webtransport\r\nand tested using the unit tests  against also three major engines (and my app for the two major engines available in Windows) \r\nand I spent a couple hours of writing it down:\r\n\r\nhttps://martenrichter.github.io/draft-ietf-webtransport-websocket/draft-richter-webtransport-websocket.html\r\nhttps://github.com/martenrichter/draft-ietf-webtransport-websocket\r\n\r\nI hope I hit the tone and style correctly, especially as it is different from the publications in latex I usually write.\r\n\r\nI have also submitted a patch to node, to get full support of http settings, which is crucial for the http/2 implementation.\r\n",
          "createdAt": "2024-01-02T14:37:50Z",
          "updatedAt": "2024-01-02T14:37:50Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "@martenrichter, I'd encourage you to [submit that draft](https://github.com/martinthomson/i-d-template/blob/main/doc/SUBMITTING.md), even though it might not be ready for discussion.  Sometimes, publishing a draft is a good way to start some discussion.",
          "createdAt": "2024-01-03T05:12:39Z",
          "updatedAt": "2024-01-03T05:12:39Z"
        },
        {
          "author": "martenrichter",
          "authorAssociation": "NONE",
          "body": "Thanks for the feedback, I just followed your suggestion:\r\nhttps://datatracker.ietf.org/doc/draft-richter-webtransport-websocket/\r\n.",
          "createdAt": "2024-01-03T08:46:22Z",
          "updatedAt": "2024-01-03T08:46:22Z"
        }
      ]
    },
    {
      "number": 94,
      "id": "I_kwDODnOl8850tSbm",
      "title": "Should H2 be permissive about flow control violations",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/94",
      "state": "OPEN",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ready for PR",
        "ietf-118"
      ],
      "body": "H2 matches H3 in being permissive about flow control violations around the stream limit.\r\n\r\n> the asynchronous nature of the protocol\r\n\r\n> A server will only be unsure if it reduces the limit and the SETTINGS frame hasn't been acknowledged yet.  But then it is sure, because everything opened before the SETTINGS+ACK uses the larger limit and everything after uses the reduced limit...  So maybe we can completely rewrite this little bit.\r\n\r\n> _Originally posted by @martinthomson in https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/91#discussion_r1368470323_\r\n            ",
      "createdAt": "2023-10-23T21:10:08Z",
      "updatedAt": "2024-07-25T01:56:42Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Discussed in editor's meeting: \r\n\r\nIf you're above the limit, you lower that limit, and the peer ACKs that lowering, you only enforce the \"don't go above the limit\" when a new session is opened, so it doesn't matter how long the peer takes to close everything down, they have to get below the limit if they want a new session.",
          "createdAt": "2023-10-31T22:32:46Z",
          "updatedAt": "2023-10-31T22:32:46Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in the WG session at IETF 118. No objections raised.\r\n\r\n@achernya also pointed out that there might be some interesting interactions between SETTINGS_WEBTRANSPORT_MAX_SESSIONS and DRAIN_WEBTRANSPORT_SESSION that could lead to suboptimal incentives around keeping draining sessions around for longer than needed. @ekinnear took an action item to look into this.",
          "createdAt": "2023-11-06T15:24:25Z",
          "updatedAt": "2023-11-06T15:24:25Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "(Pinged to discuss in more detail)",
          "createdAt": "2024-07-25T01:56:41Z",
          "updatedAt": "2024-07-25T01:56:41Z"
        }
      ]
    },
    {
      "number": 95,
      "id": "I_kwDODnOl8850_wLe",
      "title": "Draining a WebTransport session in H2",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/95",
      "state": "CLOSED",
      "author": "nidhijaju",
      "authorAssociation": "NONE",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ready for PR",
        "ietf-118"
      ],
      "body": "For WebTransport over HTTP/3, there's a [DRAIN_WEBTRANSPORT_SESSION](https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3#section-4.6-3) capsule for draining the session.\r\n\r\nHowever, for HTTP/2, there is only a WT_STOP_SENDING capsule that would request the recipient to stop sending data, but does not require the sender of the capsule to stop sending data themselves. It would be good to have a similar concept to DRAIN_WEBTRANSPORT_SESSION for HTTP/2 to allow WebTransport to be more transport-agnostic.",
      "createdAt": "2023-10-26T07:17:08Z",
      "updatedAt": "2024-03-04T23:54:17Z",
      "closedAt": "2024-03-04T23:54:16Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Since we're trying to have WebTransport provide a common interface, regardless of underlying transport, it seems like we should be able to map each of these to a function in the overview. \n\nWebTransport over H2 is designed to look very similar to H3/QUIC, rather than follow H2 patterns, which should help in this area. \n\nThings like GOAWAY are still provided by H2 itself and are similar enough that that's probably fine. \n\nIt should be straightforward to pull over the same DRAIN_WEBTRANSPORT_SESSION capsule from WebTransport over H3 and maintain consistency with H3.",
          "createdAt": "2023-10-26T22:20:04Z",
          "updatedAt": "2023-10-26T22:20:04Z"
        },
        {
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "body": "I thought we already had similar text for using CLOSE_WEBTRANSPORT_SESSION, but I can't find it in the draft.",
          "createdAt": "2023-10-27T00:48:19Z",
          "updatedAt": "2023-10-27T00:48:19Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in the WG session at IETF 118. Some thumbs up seen in the room, no objections raised.",
          "createdAt": "2023-11-06T15:16:57Z",
          "updatedAt": "2023-11-06T15:16:57Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In #98, @martenrichter rightfully points out that we need CLOSE_WEBTRANSPORT_SESSION in h2 to communicate the Application Error Code and Application Error Message.",
          "createdAt": "2024-01-10T16:23:24Z",
          "updatedAt": "2024-01-10T16:23:38Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "I_kwDODnOl8851lt2M",
      "title": "Feedback from IANA",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/96",
      "state": "CLOSED",
      "author": "DavidSchinazi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [],
      "body": "IANA has sent in the following feedback:\r\n\r\n> Any values that have yet to be allocated (either permanently or via the RFC 7120 early allocation policy), like the values named in sections 9.1 and 9.2, should be described as \u201c1 (suggested)\u201d and \u201c2 (suggested)\u201d (or similar).\r\n>\r\n> If you have any questions, just let us know. If you'd like to talk in person, you can find us next to the RFC Editor's table from Monday through Thursday. You can also request another review at any time by contacting us at [iana@iana.org](mailto:iana@iana.org).\r\n>\r\n> For more information about IANA Considerations section requirements, please see https://www.iana.org/help/protocol-registration",
      "createdAt": "2023-11-01T17:45:55Z",
      "updatedAt": "2023-11-28T23:21:25Z",
      "closedAt": "2023-11-28T23:21:25Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Discussed in editor's meeting: Tracked by #99. ",
          "createdAt": "2023-11-28T23:21:25Z",
          "updatedAt": "2023-11-28T23:21:25Z"
        }
      ]
    },
    {
      "number": 98,
      "id": "I_kwDODnOl8852nZsu",
      "title": "Missing CLOSE_WEBTRANSPORT_SESSION equivalent",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/98",
      "state": "CLOSED",
      "author": "martenrichter",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "While implementing the protocol, I ran into the issue, that it misses and equivalent of  CLOSE_WEBTRANSPORT_SESSION.\r\nAnd therefore it is not possible to pass `code` and `reason` in the case the stream is closed. \r\n`code` is possible using goaway frames, even though this probably has a different counterpart.\r\n\r\nAlso, I may be missing something, as I am restricted to the http2 api exposed by node.js. But currently, the http/2 implementation behaves differently.",
      "createdAt": "2023-11-13T07:31:52Z",
      "updatedAt": "2024-01-10T16:24:14Z",
      "closedAt": "2024-01-09T23:20:26Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks like this is covered by #95.",
          "createdAt": "2024-01-09T23:20:27Z",
          "updatedAt": "2024-01-09T23:20:27Z"
        },
        {
          "author": "martenrichter",
          "authorAssociation": "NONE",
          "body": "But I was more referring, that I can not transport the reason string over http/2. That is, what I realized while implementing and seeing my unit tests fail, that I looked for the reason.",
          "createdAt": "2024-01-10T06:29:00Z",
          "updatedAt": "2024-01-10T06:29:00Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Good point, I've added this in https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/95#issuecomment-1885177641",
          "createdAt": "2024-01-10T16:24:13Z",
          "updatedAt": "2024-01-10T16:24:13Z"
        }
      ]
    },
    {
      "number": 99,
      "id": "I_kwDODnOl8854IdlI",
      "title": "[hold for WGLC] Renumber codepoints",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/99",
      "state": "OPEN",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "held for wglc"
      ],
      "body": "Our current codepoints are often two-bytes or four-bytes where they could be smaller. This matters, especially for prefixes we use for user data. We should renumber them after WGLC, this is a bug to not forget this.\r\n\r\nSee https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http3/issues/136.",
      "createdAt": "2023-11-28T23:20:42Z",
      "updatedAt": "2023-11-29T00:02:17Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 100,
      "id": "I_kwDODnOl88566kjF",
      "title": "Masking required?",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/100",
      "state": "CLOSED",
      "author": "martenrichter",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "out of scope"
      ],
      "body": "I have read recently a lot about the WebSocket protocol intrinsics.\r\nIt includes a MASKING mechanism to prevent malicious webpages from smuggling HTTP syntax into the WebSocket frames, which can exploit suboptimal proxies.\r\nI am wondering if such an attack is also possible with the capsule protocol.\r\nIs it safe since it runs over http/2 (enforced with the SETTINGS)?\r\nBut on the other hand, RFC 8441Section 10 leaves RFC 6455 Section 10.3 untouched.\r\nMaybe this was discussed before, and I did not find it in the issues.",
      "createdAt": "2024-01-02T09:50:43Z",
      "updatedAt": "2024-01-10T16:04:17Z",
      "closedAt": "2024-01-09T23:26:53Z",
      "comments": [
        {
          "author": "martenrichter",
          "authorAssociation": "NONE",
          "body": "Ok I found \r\n```\r\nWebTransport over HTTP/2 requires explicit opt-in through the use of\r\n   HTTP SETTINGS; this avoids potential protocol confusion attacks by\r\n   ensuring the HTTP/2 server explicitly supports it.  It also requires\r\n   the use of the Origin header, providing the server with the ability\r\n   to deny access to Web-based clients that do not originate from a\r\n   trusted origin.\r\n```\r\nthat means, a HTTP/1 variant would be vulnerabale. However than I wonder why it was left in force in RFC 8841.",
          "createdAt": "2024-01-02T10:06:52Z",
          "updatedAt": "2024-01-02T10:06:52Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Editor's meeting: We're not currently defining WebTransport over HTTP/1, although when we do so, we could require HTTPS for use with WebTransport.\r\n\r\nHTTP/2 and HTTP/3 are only able to run via encrypted transports, which is sufficient for POST requests, and we think that means it's also sufficient for the Extended CONNECT request here.\r\n\r\nThat said, this is certainly something that, if we advance the effort for H1, we'll want to keep in mind.",
          "createdAt": "2024-01-09T23:26:53Z",
          "updatedAt": "2024-01-09T23:26:53Z"
        },
        {
          "author": "martenrichter",
          "authorAssociation": "NONE",
          "body": "Thanks, that is what I expected. I was just puzzled that RFC 8441 did not remove the masking requirement for http/2.",
          "createdAt": "2024-01-10T06:33:18Z",
          "updatedAt": "2024-01-10T06:33:18Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the history there is that RFC 8441 was intended to be the smallest possible change to make WebSocket work over h2. Removing masking would have been a good feature, but they decided it wasn't critical.",
          "createdAt": "2024-01-10T16:04:17Z",
          "updatedAt": "2024-01-10T16:04:17Z"
        }
      ]
    },
    {
      "number": 101,
      "id": "I_kwDODnOl8857CZsY",
      "title": "Stream operations after RESET has been sent",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/101",
      "state": "CLOSED",
      "author": "vasilvv",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "vasilvv"
      ],
      "labels": [
        "ready for PR"
      ],
      "body": "- Is it valid to send WT_STREAM for streams that already had a WT_RESET_STREAM sent?\r\n- Is it valid to send WT_RESET_STREAM for a stream that already had a WT_RESET_STREAM sent?\r\n- Is it valid to send WT_STOP_SENDING for a stream that already had a WT_STOP_SENDING sent?\r\n- Is it valid to send WT_MAX_STREAM_DATA for a stream that already had a WT_STOP_SENDING sent?\r\n\r\nIn QUIC, I believe we answered \"yes\" to all of the above since the protocol is inherently unordered. As far as I can tell, this does not apply to WT over HTTP/2, since it's strictly ordered, at least for an individual peer.",
      "createdAt": "2024-01-03T15:30:22Z",
      "updatedAt": "2024-05-14T22:44:22Z",
      "closedAt": "2024-05-14T22:44:22Z",
      "comments": [
        {
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "body": "Oh, forgot to add: we should decide the same for FIN, too.",
          "createdAt": "2024-01-03T15:30:51Z",
          "updatedAt": "2024-01-03T15:30:51Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "It should be possible to do this, if you consider HTTP/2 uses in isolation, but are there cases where there could be a hop that is HTTP/3 and it would be easier to intermediate if the ordering could be loose?",
          "createdAt": "2024-01-04T01:13:17Z",
          "updatedAt": "2024-01-04T01:13:17Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Seems like we have two options: \r\n\r\n- Most of these operations are inherently observable, for example if you go to forward a WT_STREAM frame and you think that the stream is already closed because you already had a WT_RESET_STREAM come through, you could see an error and drop that WT_STREAM frame.\r\n\r\n- Allow being a direct passthrough, so HTTP/2 is just preserving the inherent reordering that happened on the HTTP/3 side.\r\n\r\nIt's a little bit annoying that we'd need someone running pure HTTP/2 to accept obviously wrong things, just in case somewhere someone had HTTP/3 in existence. \r\n\r\nHowever, it also seems nice to not make the intermediary keep track of the state of streams if possible -- but you have to have a mapping already because the stream IDs don't match across HTTP/2 and HTTP/3.",
          "createdAt": "2024-01-09T23:32:33Z",
          "updatedAt": "2024-01-09T23:32:33Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Discussed in editor's meeting: \r\n\r\n- Prohibit and error because you already have to write code that handles this case where you cannot find the mapping in your table. Preference towards it being cleaner.",
          "createdAt": "2024-01-23T23:17:49Z",
          "updatedAt": "2024-01-23T23:17:49Z"
        }
      ]
    },
    {
      "number": 103,
      "id": "I_kwDODnOl8858uhwD",
      "title": "Missing acknowledgement mechanism leads to problems in the case of stream closure",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/103",
      "state": "CLOSED",
      "author": "martenrichter",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I am currently writing unit tests for my node lib for the stream number control.\r\nNow, I ran into an issue, which is not a bug on my side, but a problem in the http/2, and it's missing an acknowledgment mechanism.\r\n\r\nI have the following unit test:\r\n```\r\n    client = new WebTransport(\r\n      `${process.env.SERVER_URL}/streamlimits_getunidis`,\r\n      { ...wtOptions }\r\n    )\r\n    await client.ready\r\n    const unidistreams = []\r\n    let numunidi = 0\r\n    let numfailed = 0\r\n    for (let i = 0; i < 150; i++) {\r\n      const curstream = client.createUnidirectionalStream()\r\n      unidistreams.push(curstream)\r\n      curstream\r\n        .then(() => {\r\n          numunidi++\r\n        })\r\n        .catch(() => {\r\n          numfailed++\r\n        })\r\n    }\r\n    await Promise.allSettled(unidistreams)\r\n    expect(numunidi).to.equal(100)\r\n    expect(numfailed).to.equal(50)\r\n    numfailed = 0\r\n    for (let i = 0; i < 50 + adjustlimit; i++) {\r\n      const curstream = await unidistreams.shift()\r\n      await curstream.close()  <=== crucial point\r\n    }\r\n    for (let i = 0; i < 50; i++) {\r\n      const curstream = client.createUnidirectionalStream()\r\n      unidistreams.push(curstream)\r\n      curstream\r\n        .then(() => {\r\n          numunidi++\r\n        })\r\n        .catch(() => {\r\n          numfailed++\r\n        })\r\n    }\r\n    await Promise.allSettled(unidistreams)\r\n    expect(numunidi).to.equal(150)\r\n    expect(numfailed).to.equal(0)\r\n\r\n    const result = await client.closed\r\n    expect(result).to.have.property('closeCode', 0)\r\n    expect(result).to.have.property('reason', '')\r\n```\r\nThe server side is as follows:\r\n```\r\n      async () => {\r\n            for await (const session of getReaderStream(\r\n              server.sessionStream('/streamlimits_getunidis')\r\n            )) {\r\n              try {\r\n                await session.ready\r\n                const unidistreams = []\r\n                while (unidistreams.length < 150) {\r\n                  unidistreams.push(\r\n                    await getReaderValue(session.incomingUnidirectionalStreams)\r\n                  )\r\n                }\r\n                await session.close()\r\n              } catch (error) {\r\n                // do not crash server, if a problem occurs...\r\n              }\r\n            }\r\n          },\r\n```\r\nBasically, what the test does is try to open 150 streams and get only 50 streams as it hits the limit of 100 streams.\r\nThen it closes 50 streams and can open again 50 streams.\r\n\r\nWith http/3, it works perfectly, as my implementation waits for all pending writes and quiche lib from Google signals me a `Data Recvd` (see also the web transport W3C \u00a7 6.4 close 5.2. `Wait for stream.[[[InternalStream]]](https://www.w3.org/TR/webtransport/#dom-webtransportsendstream-internalstream-slot) to enter the \"Data Recvd\" state`, see line with crucial point) that the data has been received so that I can close the stream safely and use it as a trigger for the next 50 streams.\r\nFor my http/2, I do not have an acknowledge mechanism on the capsule level, so I resolve the promise immediately, and the 50 remaining streams fail as it is too quick. Of course, I can delay it, but this would be unreliable.\r\nTherefore, I think that for this particular scenario, an acknowledgment mechanism is necessary if one can not map something from the underlying http/2. But this should be specified.\r\n\r\nAny advice on how to proceed with the implementation is appreciated, and sorry for spamming your issues.\r\n\r\n",
      "createdAt": "2024-01-21T12:48:48Z",
      "updatedAt": "2024-01-23T23:38:02Z",
      "closedAt": "2024-01-23T23:38:02Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "This is an example of using acknowledgments to drive application state.  In this case, the acknowledgments are being used to drive the close state.\r\n\r\nIn my view, we should not have specified that close awaits the \"Data Recvd\" state.  Because while you are doing something completely reasonable here, this does not work in the presence of intermediaries.  Or rather, this might, but similar patterns do not.  Closing instead should resolve when the stack accepts the request to close, not when the peer acknowledges it.\r\n\r\nThe effect of that change would be that a request close would probably just bounce across threads or processes, but it would resolve virtually immediately.  There are potentially cases where there is local buffering of writes beyond what flow control would allow (a bad idea in my view, but I keep hearing of it), in which case the close would be answered (almost) immediately by whatever manages that additional buffer, but it would not reach the stack until flow control opened up[^1].\r\n\r\n[^1]: That extra buffering is likely to result in further weirdness in that the provision of more credit for streams could be delayed.  It's the very definition of deadlock really.  If the sending end can't send a close because it doesn't have enough flow control credit and the other side is waiting on a close on a stream before it can release more flow control credit, things get stuck.\r\n\r\nOur JavaScript brethren have a rule that says that garbage collection must not be observable.  We might reasonably use a similar rule for acknowledgments.",
          "createdAt": "2024-01-22T03:02:11Z",
          "updatedAt": "2024-01-22T03:02:11Z"
        },
        {
          "author": "martenrichter",
          "authorAssociation": "NONE",
          "body": "> In my view, we should not have specified that close awaits the \"Data Recvd\" state. Because while you are doing something completely reasonable here, this does not work in the presence of intermediaries. Or rather, this might, but similar patterns do not. Closing instead should resolve when the stack accepts the request to close, not when the peer acknowledges it.\r\n\r\nOk, then I should not make a test that uses this pattern. Rather, should I use something else to signal that enough streams are available (maybe I should just use the variant that waits until more streams are available)? And, of course, then a change of the W3C spec may be a good idea. \r\n> It's the very definition of deadlock really. \r\nWell, all my tests so far have been very good in pointing out race conditions or problems in my code or the browser side (at least two bugs in Chromium and potentially one bug in Firefox, but this is under investigation).",
          "createdAt": "2024-01-22T07:06:53Z",
          "updatedAt": "2024-01-22T07:06:53Z"
        },
        {
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think that the example in question is guaranteed to work all of the time, since receiving an ACK for the FIN and receiving a new MAX_STREAMS are two independent operations (and besides, the specification does not require the server to send MAX_STREAMS at any specific point); the fact that it works consistently with Chromium library is mostly an implementation detail.",
          "createdAt": "2024-01-22T21:30:56Z",
          "updatedAt": "2024-01-22T21:30:56Z"
        },
        {
          "author": "martenrichter",
          "authorAssociation": "NONE",
          "body": "> I don't think that the example in question is guaranteed to work all of the time since receiving an ACK for the FIN and receiving a new MAX_STREAMS are two independent operations (and besides, the specification does not require the server to send MAX_STREAMS at any specific point); the fact that it works consistently with Chromium library is mostly an implementation detail.\r\n\r\nWell, it is guaranteed, as I close 50 streams, which triggers sending the MAX_STREAMS capsule in libquiche with the set limits. However, it is true that these are tests that need to know the trigger points of the implementation. But I see using close was not a good idea. But of course, if it takes longer to receive the MAX_STREAMS, it will fail; anyway, I will rework the test.\r\nThe question that remains for me is, what does a `close ' on the stream actually tell the javascript side about the state of the connection? From the conversation until now,, I would say an immediate return would serve the same purpose an d no developer would come to such a stupid idea, as I came up for the unit test. ",
          "createdAt": "2024-01-23T06:23:32Z",
          "updatedAt": "2024-01-23T06:23:32Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Discussed in editor's meeting: \r\n\r\n- The presence of intermediaries complicates things here and also helps explain why we cannot rely on signaling about what's been received, etc.\r\n- For flow control/stream limit purposes, an intermediary is signing up to either pass through or choose to buffer more than what the next hop is willing to offer.\r\n\r\n- A consumer of the JS API should be able to await more room being available to open more streams. There is no expectation that one can close a stream and then immediately have flow credits to open a new one.\r\n- This also helps defend against rapid-reset-style attacks\r\n\r\nWe think the on-wire bits are working as expected, but this is a great thing to identify, as we need to clean up the W3C spec a bit to stop relying on any of this signaling.",
          "createdAt": "2024-01-23T23:36:48Z",
          "updatedAt": "2024-01-23T23:36:48Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: based on this, let's continue the conversation in [W3C issue 581](https://github.com/w3c/webtransport/issues/581) since that's where we'll need to write the fix. Closing this issue in favor of that one.",
          "createdAt": "2024-01-23T23:38:02Z",
          "updatedAt": "2024-01-23T23:38:02Z"
        }
      ]
    },
    {
      "number": 105,
      "id": "I_kwDODnOl886BORvO",
      "title": "Adjust SETTINGS and establishment to match HTTP/3",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/105",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ready for PR"
      ],
      "body": "Now that HTTP/3 is being updated per https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http3/issues/143, https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http3/issues/141, https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http3/issues/140, and https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http3/issues/135, we should update HTTP/2 to match.\r\n\r\nSee https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http3/issues/135#issuecomment-1907120035",
      "createdAt": "2024-03-04T23:47:17Z",
      "updatedAt": "2025-03-03T23:57:08Z",
      "closedAt": "2025-03-03T23:57:08Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed at IETF 120. Eric presented some slides. We got a few thumbs up from the room and no concerns, so this is ready for a PR.",
          "createdAt": "2024-07-25T22:59:25Z",
          "updatedAt": "2024-07-25T22:59:25Z"
        }
      ]
    },
    {
      "number": 106,
      "id": "I_kwDODnOl886Bre5c",
      "title": "CLOSE_WEBTRANSPORT_SESSION capsule clarification",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/106",
      "state": "CLOSED",
      "author": "martenrichter",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "has pull request"
      ],
      "body": "Thanks for adding the CLOSE_WEBTRANSPORT_SESSION capsule,\r\nhttps://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/104 .\r\nI have read \r\n`An endpoint that sends a CLOSE_WEBTRANSPORT_SESSION capsule MUST set the FIN bit\r\non the frame carrying the capsule. The recipient MUST close the stream upon\r\nreceipt of the capsule.`\r\nNow I wonder if a capsule must always be inside one Http2 frame.\r\n\r\nI use node.js as a base and their streams.\r\nUp to now, I have sent a capsule using multiple writes to the http/2 stream, which may lead to multiple Http/2 frames or not (sorry, I have not read the HTTP/2 in much detail so far). The reason is that I can avoid one memcopy.\r\n\r\nDo you know if this is legal per spec?\r\n\r\nOr is it sufficient that a capsule may come through multiple frames? and that only the last part of the CLOSE_WEBTRANSPORT_SESSION  is in a frame with the fin bit (I hope node.js sets this when using end).\r\n",
      "createdAt": "2024-03-08T09:43:48Z",
      "updatedAt": "2024-03-17T01:09:27Z",
      "closedAt": "2024-03-17T01:09:27Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The HTTP/2 framing layer is allowed to split data streams at any point. The boundaries of HTTP/2 DATA frames don't carry any semantics, only the reassembled stream. So a capsule can definitely end up split into multiple HTTP/2 DATA frames.\r\n\r\nI'm not familiar with the Node.js implementation, it could create one HTTP/2 DATA frame for each write, or it could keep an internal buffer, or something else entirely.\r\n\r\nSo you're right that this text could be improved. I'll also note that HTTP/2 uses an END_STREAM flag, not a FIN bit (FIN bit is used by HTTP/3) so this sentence is definitely wrong.\r\n\r\nI would perhaps replace it with `An endpoint that sends a CLOSE_WEBTRANSPORT_SESSION capsule MUST then close the stream. The recipient MUST close the stream upon receipt of the capsule.`",
          "createdAt": "2024-03-08T22:34:27Z",
          "updatedAt": "2024-03-08T22:34:27Z"
        },
        {
          "author": "martenrichter",
          "authorAssociation": "NONE",
          "body": "Thanks, so I can leave it as it is. If node.js split the frames or not, I actually do not know, I tried to trace it down in their source code, but from just reading it is not so clear. I believe it joins some writes, but I do not know for sure.",
          "createdAt": "2024-03-09T07:28:33Z",
          "updatedAt": "2024-03-09T07:28:33Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "That new text looks good to me, thanks David! I do think you can leave the current implementation as-is, as long as the last bit of the data goes out on the wire with END_STREAM set, it doesn't really matter what the framing boundaries end up being.\r\n(Indeed, this was imported from H3 and would need to be updated to use END_STREAM.)\r\n\r\nI'm not sure it's worth having a lot of discussion to say \"needs to set END_STREAM on the final frame that gets generated\" vs. just saying \"needs to close\", since that's in practice what people using H2 libraries will be doing.",
          "createdAt": "2024-03-16T06:11:50Z",
          "updatedAt": "2024-03-16T06:11:50Z"
        },
        {
          "author": "martenrichter",
          "authorAssociation": "NONE",
          "body": "Thanks. I think \"need to close\" is enough. I was confused about whether I had gotten something conceptually wrong about the capsule protocol and H2 webtransport, as it sounded more like H3. So far, I am (or my lib) only talking to myself, so I am not sure if I got everything right.",
          "createdAt": "2024-03-16T06:30:19Z",
          "updatedAt": "2024-03-16T06:30:19Z"
        }
      ]
    },
    {
      "number": 108,
      "id": "I_kwDODnOl886Gs_R-",
      "title": "Subprotocol negotiation",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/108",
      "state": "CLOSED",
      "author": "nidhijaju",
      "authorAssociation": "NONE",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "ready for PR"
      ],
      "body": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http3/pull/144 added subprotocol negotiation to the HTTP/3 document, so it would be nice to have the same mechanism in HTTP/2 as well to match.",
      "createdAt": "2024-04-23T23:25:21Z",
      "updatedAt": "2024-07-21T22:02:17Z",
      "closedAt": "2024-07-21T22:02:17Z",
      "comments": []
    },
    {
      "number": 109,
      "id": "I_kwDODnOl886HdKWl",
      "title": "RESET_STREAM_AT",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/109",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "If this is a possible extension to the WT API, we might need this in the HTTP/2 version.  Not because streams might be dropped, but because a sender might want to indicate the point in the stream that needs to be retained to a receiver, or maybe just to the lower layers of the stack (for those cases where buffering > sending).",
      "createdAt": "2024-04-30T22:13:16Z",
      "updatedAt": "2024-05-14T22:26:25Z",
      "closedAt": "2024-05-14T22:26:25Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "@afrind points out that we will need a frame to let an intermediary know where to reset.  Otherwise, the intermediary might abort its transmission of the entire stream, rather than keep the \"reliable\" portion.",
          "createdAt": "2024-04-30T22:18:47Z",
          "updatedAt": "2024-04-30T22:18:47Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "@vasilvv points out that maybe we could just modify WT_RESET_STREAM to include an offset, so that we don't have two frames.",
          "createdAt": "2024-04-30T22:20:06Z",
          "updatedAt": "2024-04-30T22:20:06Z"
        }
      ]
    },
    {
      "number": 113,
      "id": "I_kwDODnOl886NYFMy",
      "title": "Keying Material Exporters",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/113",
      "state": "OPEN",
      "author": "lqf96",
      "authorAssociation": "NONE",
      "assignees": [
        "vasilvv"
      ],
      "labels": [
        "ready for PR"
      ],
      "body": "WebTransport over HTTP/2 should support keying material exporters, originally proposed in ietf-wg-webtrans/draft-ietf-webtrans-http3#116, since it's also based on TLS 1.3. Perhaps this can be done by simply copying [Section 4.7 of WebTransport over HTTP/3 Spec](https://ietf-wg-webtrans.github.io/draft-ietf-webtrans-http3/draft-ietf-webtrans-http3.html#name-use-of-keying-material-expo) and making minimal adaptations.",
      "createdAt": "2024-06-25T07:22:31Z",
      "updatedAt": "2025-03-05T00:40:10Z",
      "closedAt": null,
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: Discussed at IETF 120. In general this should mimic what we did in h3. There is however one wrinkle: HTTP/2 can run over TLS 1.2, and TLS key exporters are unsafe when using TLS 1.2 without the extended master secret extension. Our options are to either\r\n* allow the W3C API to fail\r\n* forbid the use of WebTransport over h2 unless TLS >= 1.3 or TLS == 1.2 &&  extended master secret extension enabled",
          "createdAt": "2024-07-25T22:50:51Z",
          "updatedAt": "2024-07-25T22:50:51Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussed in editor's call. Sense of the room was to forbid the use of WebTransport over h2 unless TLS >= 1.3 or TLS == 1.2 && extended master secret extension enabled. We also noted that the overview document says `SHOULD use TLS version 1.3 or later`. Please comment on this issue if you have an opinion, otherwise we'll ask someone to write a PR.",
          "createdAt": "2024-08-20T22:33:39Z",
          "updatedAt": "2024-08-20T22:33:39Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Damn, I thought we'd already required the use of session hash in HTTP/2.  I guess we didn't.  This is the only reasonable thing to do if you use exporters, so \ud83d\udc4d from me.",
          "createdAt": "2024-08-21T02:47:20Z",
          "updatedAt": "2024-08-21T02:47:20Z"
        }
      ]
    },
    {
      "number": 114,
      "id": "I_kwDODnOl886VZAJQ",
      "title": "Minor changes required for Subprotocol Negotiation headers",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/114",
      "state": "CLOSED",
      "author": "AnkshitJain",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "[Subprotocol Negotiation headers](https://ietf-wg-webtrans.github.io/draft-ietf-webtrans-http2/draft-ietf-webtrans-http2.html#section-3.4-3) references [HTTP3](https://ietf-wg-webtrans.github.io/draft-ietf-webtrans-http2/draft-ietf-webtrans-http2.html#HTTP3) in Section 3.4-3. This should be [WEBTRANSPORT-H3](https://ietf-wg-webtrans.github.io/draft-ietf-webtrans-http2/draft-ietf-webtrans-http2.html#WEBTRANSPORT-H3). \r\n\r\nAdditionally, the listed headers, `WebTransport-Subprotocols-Available` and `WebTransport-Subprotocol`, are out of date with the headers in the [WEBTRANSPORT-H3 draft 10](https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3-10#name-subprotocol-negotiation), which are `WT-Available-Protocols` and `WT-Protocol`.",
      "createdAt": "2024-09-04T21:43:49Z",
      "updatedAt": "2024-10-21T21:17:34Z",
      "closedAt": "2024-10-21T21:17:34Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you! Updating to resync with WT-H3, and great catch on the reference.",
          "createdAt": "2024-09-23T06:12:10Z",
          "updatedAt": "2024-09-23T06:12:10Z"
        }
      ]
    },
    {
      "number": 117,
      "id": "I_kwDODnOl886saOHH",
      "title": "Remove flow control capsule definitions and instead reference H3 definitions",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues/117",
      "state": "OPEN",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [
        "editorial"
      ],
      "body": "Remove flow control capsule definitions and instead reference H3 definitions.\n\nOnce we're happy with the shape of flow control in H3, we should remove the overlapping definitions from the H2 document and instead reference the H3 versions.",
      "createdAt": "2025-03-03T23:32:56Z",
      "updatedAt": "2025-03-03T23:46:22Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTM1NzMz",
      "title": "Editorial changes",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/1",
      "state": "MERGED",
      "author": "afrind",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "erickinnear"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-05T22:37:18Z",
      "updatedAt": "2020-03-09T23:41:28Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "master",
      "baseRefOid": "02b5b7408316e955cf0e3f9c7bc3e5485375d6fa",
      "headRepository": "afrind/draft-ietf-webtransport-http2",
      "headRefName": "editorial",
      "headRefOid": "d6988dc2bb25b47355d3adc34f79a2a724c26242",
      "closedAt": "2020-03-09T23:19:06Z",
      "mergedAt": "2020-03-09T23:19:05Z",
      "mergedBy": "erickinnear",
      "mergeCommit": {
        "oid": "e6c988bbcdb472d0e7c2271401df37429dbc0e47"
      },
      "comments": [
        {
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Landing this now and applying subsequent comments directly to speed things up",
          "createdAt": "2020-03-09T23:18:53Z",
          "updatedAt": "2020-03-09T23:18:53Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNTEwMTIz",
          "commit": {
            "abbreviatedOid": "d6988dc"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Leaving some inline comments here.  Maybe this wasn't the best mechanism, but here it is.",
          "createdAt": "2020-03-06T17:46:51Z",
          "updatedAt": "2020-03-06T18:01:28Z",
          "comments": [
            {
              "originalPosition": 180,
              "body": "I removed this normative text, but didn't add it elsewhere yet.  I think we're trying to define the legal frames on a WT stream, right?  I was thinking that might make more sense in a different section, rather than in the frame definition.",
              "createdAt": "2020-03-06T17:46:51Z",
              "updatedAt": "2020-03-06T18:01:28Z"
            },
            {
              "originalPosition": 188,
              "body": "The 0xfb frame is my second favorite after ACK_FREQUENCY (0xaf)",
              "createdAt": "2020-03-06T17:47:26Z",
              "updatedAt": "2020-03-06T18:01:28Z"
            },
            {
              "originalPosition": 192,
              "body": "I see you have a full state machine description in a section below, reference it here?",
              "createdAt": "2020-03-06T17:48:07Z",
              "updatedAt": "2020-03-06T18:01:28Z"
            },
            {
              "originalPosition": 192,
              "body": "Gah, GH won't let me add comments to sections of the file without changes.  Dropping a bunch of comments here (line numbers from this PR).\r\n\r\nLine 233: should we mention that including WTHEADERS frames when the peer has not fully negotiated WT will result in compression state getting screwed up?\r\n",
              "createdAt": "2020-03-06T17:50:44Z",
              "updatedAt": "2020-03-06T18:01:29Z"
            },
            {
              "originalPosition": 192,
              "body": "Line 265: Is the presence of WebSocket headers in a WT handshake an error?",
              "createdAt": "2020-03-06T17:52:28Z",
              "updatedAt": "2020-03-06T18:01:29Z"
            },
            {
              "originalPosition": 192,
              "body": "Line 273: \"semantics defined by that protocol\" : add a reference to the protocol mentioned here.",
              "createdAt": "2020-03-06T17:53:23Z",
              "updatedAt": "2020-03-06T18:01:29Z"
            },
            {
              "originalPosition": 192,
              "body": "Line 434: \"priorities and dependencies\": we probably need to update this to reflect the new HTTP priority scheme?  There's also a comment a couple lines later about not allowing dependencies across stream groups, but that doesn't even make sense anymore.",
              "createdAt": "2020-03-06T17:55:04Z",
              "updatedAt": "2020-03-06T18:01:29Z"
            },
            {
              "originalPosition": 192,
              "body": "Line 454: \"identically to their...\" - It's more than routing to the same destination, you must route on the same connection as the Connect Stream.",
              "createdAt": "2020-03-06T17:56:30Z",
              "updatedAt": "2020-03-06T18:01:29Z"
            },
            {
              "originalPosition": 192,
              "body": "Line 458: \"fail the extended...\" - Clients may be piggybacking WT Streams assuming the CONNECT handshake is going to succeed. These streams also need to be reset if the handshake fails.",
              "createdAt": "2020-03-06T17:57:26Z",
              "updatedAt": "2020-03-06T18:01:29Z"
            },
            {
              "originalPosition": 192,
              "body": "Line 494: \"reset all...\" - I think this conflicts with other language that treats graceful and ungraceful termination differently.",
              "createdAt": "2020-03-06T18:00:36Z",
              "updatedAt": "2020-03-06T18:01:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNTE5NTM1",
          "commit": {
            "abbreviatedOid": "d6988dc"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Missed some other comments",
          "createdAt": "2020-03-06T18:02:37Z",
          "updatedAt": "2020-03-06T18:05:48Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Line 384: \"best treated\" - maybe this should be a RECOMMENDED?",
              "createdAt": "2020-03-06T18:02:37Z",
              "updatedAt": "2020-03-06T18:05:48Z"
            },
            {
              "originalPosition": 1,
              "body": "Line 385: \"subsequent...\"  - What happens to open WT Streams?\r\n",
              "createdAt": "2020-03-06T18:03:13Z",
              "updatedAt": "2020-03-06T18:05:48Z"
            },
            {
              "originalPosition": 1,
              "body": "Line 394: \"MUST NOT send data\" - Should we say DATA frames with non-zero payload?\r\n",
              "createdAt": "2020-03-06T18:03:48Z",
              "updatedAt": "2020-03-06T18:05:48Z"
            },
            {
              "originalPosition": 1,
              "body": "Line 410: \"If the Connect Stream...\" - Isn't this different from what's in WT? Doesn't it say that everything is gone once the WT connect stream is gone?",
              "createdAt": "2020-03-06T18:04:26Z",
              "updatedAt": "2020-03-06T18:05:49Z"
            },
            {
              "originalPosition": 1,
              "body": "Line 415: \"SHOULD refresh...\" - Or perhaps, \"SHOULD take measures to prevent a peer or intermediary from timing out the Connect Stream\" ?",
              "createdAt": "2020-03-06T18:05:27Z",
              "updatedAt": "2020-03-06T18:05:49Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDgwMzM0",
          "commit": {
            "abbreviatedOid": "d6988dc"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-09T19:49:41Z",
          "updatedAt": "2020-03-09T19:49:41Z",
          "comments": [
            {
              "originalPosition": 180,
              "body": "Sounds great, I agree it's a little bit weird in that order. Perhaps we could move it later so the structure would be: \r\n- Negotiating Http2Transport, here's all the SETTINGS and such\r\n- Establishing WebTransport Streams, here's the WTHeaders frame and rules around that\r\n- Using WebTransport Streams, here's the additional rules about lifecycle and end of life for such streams",
              "createdAt": "2020-03-09T19:49:41Z",
              "updatedAt": "2020-03-09T19:49:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDgwODE5",
          "commit": {
            "abbreviatedOid": "d6988dc"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-09T19:50:24Z",
          "updatedAt": "2020-03-09T19:50:25Z",
          "comments": [
            {
              "originalPosition": 192,
              "body": "Yes please!",
              "createdAt": "2020-03-09T19:50:24Z",
              "updatedAt": "2020-03-09T19:50:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDgxMDAy",
          "commit": {
            "abbreviatedOid": "d6988dc"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-09T19:50:41Z",
          "updatedAt": "2020-03-09T19:50:41Z",
          "comments": [
            {
              "originalPosition": 188,
              "body": "Yeah, I left this as is for the moment, but should we change this to not a FB frame?",
              "createdAt": "2020-03-09T19:50:41Z",
              "updatedAt": "2020-03-09T19:50:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDgxNDU2",
          "commit": {
            "abbreviatedOid": "d6988dc"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-09T19:51:22Z",
          "updatedAt": "2020-03-09T19:51:22Z",
          "comments": [
            {
              "originalPosition": 192,
              "body": "Good idea \ud83d\udc4d",
              "createdAt": "2020-03-09T19:51:22Z",
              "updatedAt": "2020-03-09T19:51:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDgxNjI3",
          "commit": {
            "abbreviatedOid": "d6988dc"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-09T19:51:40Z",
          "updatedAt": "2020-03-09T19:51:40Z",
          "comments": [
            {
              "originalPosition": 192,
              "body": "In the spirit of being stricter, I'd say yes",
              "createdAt": "2020-03-09T19:51:40Z",
              "updatedAt": "2020-03-09T19:51:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTg5MzM4",
          "commit": {
            "abbreviatedOid": "d6988dc"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking great, thanks for cleaning a bunch of this up! ",
          "createdAt": "2020-03-09T23:17:47Z",
          "updatedAt": "2020-03-09T23:18:34Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "```suggestion\r\nWebTransport Connect Streams to a Http2Transport Server.  Http2Transport servers\r\n```",
              "createdAt": "2020-03-09T23:17:47Z",
              "updatedAt": "2020-03-09T23:18:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTk1OTIz",
          "commit": {
            "abbreviatedOid": "d6988dc"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Will file issues for the ones indicated, otherwise I made the suggested edits. Thanks for reviewing this, @afrind!",
          "createdAt": "2020-03-09T23:37:25Z",
          "updatedAt": "2020-03-09T23:41:28Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Done",
              "createdAt": "2020-03-09T23:37:26Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 1,
              "body": "Needs an issue, we can either let them wrap up or close immediately, tempted to say the latter",
              "createdAt": "2020-03-09T23:38:03Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 1,
              "body": "Done",
              "createdAt": "2020-03-09T23:38:35Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 1,
              "body": "Yup, will put the in the issue above, good catch",
              "createdAt": "2020-03-09T23:39:03Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 1,
              "body": "Nice! Added",
              "createdAt": "2020-03-09T23:39:30Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 180,
              "body": "Put it back in the new spot for now, we can move around later",
              "createdAt": "2020-03-09T23:39:42Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 192,
              "body": "Done",
              "createdAt": "2020-03-09T23:39:49Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 192,
              "body": "Needs an issue, didn't do this yet",
              "createdAt": "2020-03-09T23:39:59Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 192,
              "body": "Needs issue, didn't do this yet",
              "createdAt": "2020-03-09T23:40:04Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 192,
              "body": "Needs issue to follow up",
              "createdAt": "2020-03-09T23:40:13Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 192,
              "body": "Removed some, but still would be good to have an issue tracking a complete scrub",
              "createdAt": "2020-03-09T23:40:28Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 192,
              "body": "Changed",
              "createdAt": "2020-03-09T23:40:33Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 192,
              "body": "Added",
              "createdAt": "2020-03-09T23:40:40Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            },
            {
              "originalPosition": 192,
              "body": "Let's tackle that in an issue I think we require both behaviors in different places and that can't be right :) ",
              "createdAt": "2020-03-09T23:41:01Z",
              "updatedAt": "2020-03-09T23:41:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODY4NjA5",
      "title": "Great suggestions by @afrind",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/2",
      "state": "MERGED",
      "author": "erickinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-09T23:42:23Z",
      "updatedAt": "2020-03-09T23:45:08Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "master",
      "baseRefOid": "e6c988bbcdb472d0e7c2271401df37429dbc0e47",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "ek/reorganize_and_editorial",
      "headRefOid": "97542cc94f6bce585d83e22b42511f20b6ebd1f0",
      "closedAt": "2020-03-09T23:45:02Z",
      "mergedAt": "2020-03-09T23:45:02Z",
      "mergedBy": "erickinnear",
      "mergeCommit": {
        "oid": "8f02a1f3f806b42cad80bc0964c22c429ed748b9"
      },
      "comments": [
        {
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging so we can upload, please do leave any comments if you find some and/or file issues!",
          "createdAt": "2020-03-09T23:44:55Z",
          "updatedAt": "2020-03-09T23:44:55Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 9,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ4NDg4Njk3",
      "title": "Editorial changes and organization",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/9",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [],
      "body": "Move some text out of the introduction into the overview, fix a bunch of typos, and clean up some of the language to aid in clarity of upcoming sections of text.",
      "createdAt": "2020-07-13T21:04:21Z",
      "updatedAt": "2020-07-13T21:22:05Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "master",
      "baseRefOid": "d9e4640cdd12b262aea651dbf80a8ec440960fd6",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "ek/rev_feedback",
      "headRefOid": "1058981ac2d0f94236c58782b49f31319f58c4cc",
      "closedAt": "2020-07-13T21:22:05Z",
      "mergedAt": "2020-07-13T21:22:04Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "fe600c2c8de64472402f3b0fdf18d12081723f8c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NjA5MDQ0",
          "commit": {
            "abbreviatedOid": "1058981"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-13T21:18:43Z",
          "updatedAt": "2020-07-13T21:18:43Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NjA5OTky",
          "commit": {
            "abbreviatedOid": "1058981"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-13T21:20:22Z",
          "updatedAt": "2020-07-13T21:20:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTEzMTI2",
      "title": "#8 Enumerate the transport properties provided by Http2Transport",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/10",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Add brief section describing Http2Transport's stance on the properties enumerated in the WebTransport Overview. \r\nWe can move this around later as necessary, but wanted to get the text in to document which optional properties are supported and which are not.\r\n\r\nCloses #8.",
      "createdAt": "2020-07-13T21:44:57Z",
      "updatedAt": "2021-07-02T23:24:07Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "master",
      "baseRefOid": "fe600c2c8de64472402f3b0fdf18d12081723f8c",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "ek/transport_properties",
      "headRefOid": "df81a40074fe8dbe9475b82445058d1948109e10",
      "closedAt": "2020-07-13T22:45:26Z",
      "mergedAt": "2020-07-13T22:45:26Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "3242a06f1fdab9a6cf183947b94a849b3106b232"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NjM0MDAy",
          "commit": {
            "abbreviatedOid": "16962ff"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-13T21:47:39Z",
          "updatedAt": "2020-07-13T21:47:39Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NjM1MjIx",
          "commit": {
            "abbreviatedOid": "16962ff"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-13T21:49:56Z",
          "updatedAt": "2020-07-13T21:50:18Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I would replace \"Http2Transport supports the following properties\" with something like \"Below are details about whether Http2Transport supports these properties\" ",
              "createdAt": "2020-07-13T21:49:56Z",
              "updatedAt": "2020-07-13T22:44:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NjM1NzQ1",
          "commit": {
            "abbreviatedOid": "16962ff"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-13T21:50:52Z",
          "updatedAt": "2020-07-13T21:50:52Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "(Because I find it odd to say we support properties and then say we don't)",
              "createdAt": "2020-07-13T21:50:52Z",
              "updatedAt": "2020-07-13T22:44:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NjYxMzU4",
          "commit": {
            "abbreviatedOid": "16962ff"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-13T22:43:29Z",
          "updatedAt": "2020-07-13T22:43:30Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Ah thank you, was looking for a way to say that -- was bothering me too.",
              "createdAt": "2020-07-13T22:43:30Z",
              "updatedAt": "2020-07-13T22:44:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NjYyMDU4",
          "commit": {
            "abbreviatedOid": "df81a40"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-13T22:45:06Z",
          "updatedAt": "2020-07-13T22:45:07Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Changed in df81a40",
              "createdAt": "2020-07-13T22:45:06Z",
              "updatedAt": "2020-07-13T22:45:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 13,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE4ODY0NzYx",
      "title": "Add unidirectional flag to WTHEADERS",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/13",
      "state": "MERGED",
      "author": "afrind",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes: #5",
      "createdAt": "2020-11-11T00:54:26Z",
      "updatedAt": "2020-11-15T21:29:13Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "master",
      "baseRefOid": "3242a06f1fdab9a6cf183947b94a849b3106b232",
      "headRepository": "afrind/draft-ietf-webtransport-http2",
      "headRefName": "unidirectional-stream",
      "headRefOid": "cd47d2d945ec0e64fabdc599b30608f80402b9c1",
      "closedAt": "2020-11-15T21:29:13Z",
      "mergedAt": "2020-11-15T21:29:13Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "f3749705a5be9502e781f12fd5155b6af14d683b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNzY3Mjc0",
          "commit": {
            "abbreviatedOid": "5e49eb3"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking good! Few minor formatting nits, but nothing major.",
          "createdAt": "2020-11-15T04:59:04Z",
          "updatedAt": "2020-11-15T05:00:29Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nThe WTHEADERS frame has an additional flag, Unidirectional (0x40).  When this flag\r\n```",
              "createdAt": "2020-11-15T04:59:04Z",
              "updatedAt": "2020-11-15T21:26:29Z"
            },
            {
              "originalPosition": 13,
              "body": "Small formatting nit, I think we're in single-space mode for this one :) \r\n```suggestion\r\nis present, the stream starts in a half-closed state. The sending endpoint\r\n```",
              "createdAt": "2020-11-15T04:59:37Z",
              "updatedAt": "2020-11-15T21:26:29Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nstream state is \"half-closed (remote)\" and the receiving endpoint state is\r\n```",
              "createdAt": "2020-11-15T04:59:47Z",
              "updatedAt": "2020-11-15T21:26:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 14,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE4ODY2MDkw",
      "title": "Add a section describing how the WT overview requirements are satisfied",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/14",
      "state": "CLOSED",
      "author": "afrind",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I tried stacking this PR on the previous commit (which also has a PR), but I'm not sure I did it correctly",
      "createdAt": "2020-11-11T00:58:52Z",
      "updatedAt": "2021-02-22T23:35:42Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "master",
      "baseRefOid": "3242a06f1fdab9a6cf183947b94a849b3106b232",
      "headRepository": "afrind/draft-ietf-webtransport-http2",
      "headRefName": "wt-req",
      "headRefOid": "9127a05a989f6333e1dc5d8ba259c4dde23f452d",
      "closedAt": "2021-02-22T23:04:42Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "Lol ok I totally didn't even read the issue, this definitely doesn't fix #4.",
          "createdAt": "2020-11-11T01:13:08Z",
          "updatedAt": "2020-11-11T01:13:08Z"
        },
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "(Feel free to reopen if still relevant after H3-aligned rewrite, this was closed when transitioning default branch names)",
          "createdAt": "2021-02-22T23:35:42Z",
          "updatedAt": "2021-02-22T23:35:42Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNzY3Njgw",
          "commit": {
            "abbreviatedOid": "9127a05"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-15T05:11:11Z",
          "updatedAt": "2020-11-15T05:11:55Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Do we need this section still or is it getting picked up automatically by the latest version of the template?",
              "createdAt": "2020-11-15T05:11:11Z",
              "updatedAt": "2020-11-15T05:11:55Z"
            },
            {
              "originalPosition": 44,
              "body": "This is a good start, I like the mini-section for each feature describing how to accomplish it with h2transport!",
              "createdAt": "2020-11-15T05:11:50Z",
              "updatedAt": "2020-11-15T05:11:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwOTI0NzA3",
          "commit": {
            "abbreviatedOid": "9127a05"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-16T05:22:13Z",
          "updatedAt": "2020-11-16T05:22:13Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I was getting build errors without it when I tried to reference [OVERVIEW]?",
              "createdAt": "2020-11-16T05:22:13Z",
              "updatedAt": "2020-11-16T05:22:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 15,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE4ODY5MzE3",
      "title": "Allow WTHEADERS to have empty Header Block Fragment",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/15",
      "state": "CLOSED",
      "author": "afrind",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "If the application doesn't wish to use HTTP/2 to convey structured metadata and take advantage of HPACK compression, it doesn't have to.  Note that in the simplest case then, a WTHEADERS frame is:\r\n\r\n```\r\n 0                   1                   2                   3\r\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n+-----------------------------------------------+\r\n|                 Length (24)                   |\r\n+---------------+---------------+---------------+\r\n|   Type (8)    |   Flags (8)   |\r\n+-+-------------+---------------+-------------------------------+\r\n|R|                 Stream Identifier (31)                      |\r\n+-+-------------+-----------------------------------------------+\r\n|R|                 Connect Stream ID (31)                      |\r\n+-+-------------+-----------------------------------------------+\r\n```",
      "createdAt": "2020-11-11T01:09:09Z",
      "updatedAt": "2021-02-22T23:35:37Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "master",
      "baseRefOid": "3242a06f1fdab9a6cf183947b94a849b3106b232",
      "headRepository": "afrind/draft-ietf-webtransport-http2",
      "headRefName": "headers-optional",
      "headRefOid": "41733720c6c23608b4f5a34fa91af585aef860ab",
      "closedAt": "2021-02-22T23:04:42Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "(Feel free to reopen if still relevant after H3-aligned rewrite, this was closed when transitioning default branch names)",
          "createdAt": "2021-02-22T23:35:37Z",
          "updatedAt": "2021-02-22T23:35:37Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNzY3NjQ2",
          "commit": {
            "abbreviatedOid": "4173372"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-15T05:09:56Z",
          "updatedAt": "2020-11-15T05:10:20Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "If we're going to not define additional semantics here, should we indicate that there needs to be a replacement field defined by an extension for it to be considered valid? Or put in place some other extension mechanism? \r\n\r\nIt seems like we jump into a whole additional layer of complexity by leaving it as an exercise for the implementor, is there a way to arrange this so it's very clear about what happens if you choose to leave it empty? \r\n\r\n(Having an empty WTHEADERS frame is totally reasonable and what we've actually implemented so far, so I'm not bothered by that, just want to be clear about what would happen if someone actually wanted to use \"structured\" metadata.)",
              "createdAt": "2020-11-15T05:09:56Z",
              "updatedAt": "2020-11-15T05:10:20Z"
            },
            {
              "originalPosition": 5,
              "body": "One space again :) \r\n```suggestion\r\nUnlike HEADERS, the Header Block Fragment field MAY be empty. There\r\nare no predefined semantics of the fields in the decoded block. The\r\n```",
              "createdAt": "2020-11-15T05:10:16Z",
              "updatedAt": "2020-11-15T05:10:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwOTI0MzEz",
          "commit": {
            "abbreviatedOid": "4173372"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-16T05:20:34Z",
          "updatedAt": "2020-11-16T05:20:35Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Of course if two implementations (client/server) want to interoperate, they need to agree on the semantics of the fields.  But they also need to agree on the content of the streams and/or datagrams, so I'm not sure it's totally different.  \r\n\r\nDoes the CONNECT handshake otherwise allow endpoints to negotiate what the semantics are for the WT session?\r\n\r\nMaybe I can make it explicit in this PR:\r\n\r\n```\r\nThere are no predefined semantics of the fields in the decoded block.  Applications can use it to convey \r\narbitrary structured metadata.  Applications utilizing the header block SHOULD negotiate the semantics \r\nof the fields in the same manner they negotiate the content of streams or datagrams.\r\n```",
              "createdAt": "2020-11-16T05:20:34Z",
              "updatedAt": "2020-11-16T05:20:57Z"
            }
          ]
        }
      ]
    },
    {
      "number": 16,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc2MDU1MjA1",
      "title": "Total rewrite based on draft-ietf-webtransport-http3",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/16",
      "state": "MERGED",
      "author": "afrind",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-18T23:05:44Z",
      "updatedAt": "2021-02-22T22:07:50Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "master",
      "baseRefOid": "f3749705a5be9502e781f12fd5155b6af14d683b",
      "headRepository": "afrind/draft-ietf-webtransport-http2",
      "headRefName": "rewrite",
      "headRefOid": "eacaed156408e3036a1951c0cb9bb2b1559ad5c1",
      "closedAt": "2021-02-22T22:07:50Z",
      "mergedAt": "2021-02-22T22:07:50Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "a40e50b448fe72dc8336fe4f118781d2380247bd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNzI2OTMw",
          "commit": {
            "abbreviatedOid": "3218156"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T23:06:18Z",
          "updatedAt": "2021-02-18T23:06:56Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "This isn't generating links for me, not sure what I did wrong.",
              "createdAt": "2021-02-18T23:06:18Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNzMyMTU3",
          "commit": {
            "abbreviatedOid": "3218156"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Wow, thank you for doing this! Mostly just textual nits, nothing major.",
          "createdAt": "2021-02-18T23:16:11Z",
          "updatedAt": "2021-02-22T21:30:59Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "This probably wants to be either \r\n```suggestion\r\n\\<https://github.com/ekinnear/draft-webtransport-http2/issues\\>.  The\r\n```\r\nor\r\n```suggestion\r\n\\<https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/issues\\>.  The\r\n```\r\n",
              "createdAt": "2021-02-18T23:16:11Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 102,
              "body": "There's probably room to keep a paragraph or two on why HTTP/2, the bits on what's out there, etc. as things that don't apply to H3 but are probably good to establish for H2?",
              "createdAt": "2021-02-18T23:17:23Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 41,
              "body": "Style nit (throughout): Been using single spaces after sentences -- do we want to switch entirely to two or stick with one?",
              "createdAt": "2021-02-18T23:18:04Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 152,
              "body": "```suggestion\r\nWebTransport servers are identified by a pair of authority value and\r\n```",
              "createdAt": "2021-02-22T21:22:48Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 180,
              "body": "```suggestion\r\n* A datagram can be sent using a new HTTP/2 extension frame WT_DATAGRAM.\r\n```",
              "createdAt": "2021-02-22T21:23:40Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 183,
              "body": "```suggestion\r\nA WebTransport session is terminated when the CONNECT stream that created it\r\n```",
              "createdAt": "2021-02-22T21:23:50Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 214,
              "body": "That's kind of an interesting fallout from this, but seems fine",
              "createdAt": "2021-02-22T21:24:30Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 231,
              "body": "Previously, this document registered that value. If that's now in WT over HTTP/3, we probably should reference that here?",
              "createdAt": "2021-02-22T21:25:08Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 462,
              "body": "```suggestion\r\n{: #fig-wt_datagram title=\"WT_DATAGRAM Frame Format\"}\r\n```",
              "createdAt": "2021-02-22T21:27:20Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 511,
              "body": "Does this part stay here even for datagrams?",
              "createdAt": "2021-02-22T21:28:03Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 523,
              "body": "Probably worth filing an issue to either reference the appropriate text or just import it about how endpoints should be careful about what they throw out",
              "createdAt": "2021-02-22T21:28:39Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 535,
              "body": "Can we move this to an issue and keep it out of the ID?\r\n```suggestion\r\n```",
              "createdAt": "2021-02-22T21:29:15Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 956,
              "body": "Same, let's just make an issue\r\n```suggestion\r\n```",
              "createdAt": "2021-02-22T21:30:44Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1ODAzNjk4",
          "commit": {
            "abbreviatedOid": "3218156"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T21:34:55Z",
          "updatedAt": "2021-02-22T21:42:41Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "I copied straight from the h3 draft.  Let's keep diffs to a minimum and address it in both places.",
              "createdAt": "2021-02-22T21:34:55Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 102,
              "body": "Ok, I'll add a little bit back.  Since I killed the Field Section/Header block in this update, some of the second paragraph is moot.",
              "createdAt": "2021-02-22T21:37:04Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 152,
              "body": "This came from h3, but sure.",
              "createdAt": "2021-02-22T21:37:33Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 183,
              "body": "Also h3",
              "createdAt": "2021-02-22T21:37:52Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 214,
              "body": "Yeah, the h3 draft does this, but maybe makes more sense there because the extended CONNECT isn't defined in any specification for h3 yet.",
              "createdAt": "2021-02-22T21:38:43Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 511,
              "body": "oops",
              "createdAt": "2021-02-22T21:40:59Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 523,
              "body": "Where is that text now?",
              "createdAt": "2021-02-22T21:41:28Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            },
            {
              "originalPosition": 535,
              "body": "Also came from h3, but will remove from here.",
              "createdAt": "2021-02-22T21:41:53Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1ODE3MTk4",
          "commit": {
            "abbreviatedOid": "a9195b0"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T21:52:26Z",
          "updatedAt": "2021-02-22T21:52:27Z",
          "comments": [
            {
              "originalPosition": 523,
              "body": "Potentially in QUIC datagram or H3 datagram itself. Let's just make an issue for this one at the moment and we can dig it up later",
              "createdAt": "2021-02-22T21:52:26Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1ODE3NjQw",
          "commit": {
            "abbreviatedOid": "a9195b0"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T21:53:03Z",
          "updatedAt": "2021-02-22T21:53:04Z",
          "comments": [
            {
              "originalPosition": 152,
              "body": ":)",
              "createdAt": "2021-02-22T21:53:04Z",
              "updatedAt": "2021-02-22T22:03:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg1NDQzMDQ5",
      "title": "Add WT_RST_STREAM and WT_STOP_SENDING",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/18",
      "state": "MERGED",
      "author": "afrind",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-07-07T19:10:01Z",
      "updatedAt": "2021-07-09T15:42:05Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "9d43e3d60a8f0f768224a50740e9c537d083d8da",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "uni-resets",
      "headRefOid": "071ee68c076fb5d4f6b4f8fa20dd2b3fe19f7b5b",
      "closedAt": "2021-07-09T15:42:05Z",
      "mergedAt": "2021-07-09T15:42:05Z",
      "mergedBy": "afrind",
      "mergeCommit": {
        "oid": "3eae99522b1ed3cf39ec0997dcf63b645c2d227f"
      },
      "comments": [
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for the review Martin.  I suppose the higher fidelity version of STOP_SENDING would not change the state of the stream at all, but induce the peer to send a RST_STREAM as QUIC does.  Maybe that is better.",
          "createdAt": "2021-07-08T00:07:20Z",
          "updatedAt": "2021-07-08T00:07:20Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Actually, there is worse: when I send STOP_SENDING, I no longer know when the peer has received and acted on that without an explicit stream termination signal, so I can't transition the stream to a closed state.",
          "createdAt": "2021-07-08T00:08:19Z",
          "updatedAt": "2021-07-08T00:08:19Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "> Actually, there is worse: when I send STOP_SENDING, I no longer know when the peer has received and acted on that without an explicit stream termination signal, so I can't transition the stream to a closed state.\r\n\r\nWait, how is this different than QUIC?  You can't close a bidirectional stream until the peer sends you a FIN or RST.",
          "createdAt": "2021-07-08T00:11:45Z",
          "updatedAt": "2021-07-08T00:11:45Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Right; I was reading your description of STOP_SENDING as changing stream state, either at the point that it was sent or received.  In that case, if a stream is \"open\", the sender of STOP_SENDING might believe that all it needs to do is send RESET_STREAM to close the stream completely.  If it does so, the peer will receive those frames and then both peers will believe the stream to be closed.  But the sender of STOP_SENDING has no way to distinguish between that set of circumstances and one where the peer takes an arbitrary amount of time to process the frames.  The receiver of STOP_SENDING might just keep sending data indefinitely.  How does the receiver of those frames know when the other side has truly stopped?\r\n\r\nYou might say \"too bad\".  After all, the only thing you need to do is keep counting against connection-level flow control, but it makes the \"closed\" state that much harder to manage.",
          "createdAt": "2021-07-08T00:17:22Z",
          "updatedAt": "2021-07-08T00:17:22Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "As written, STOP_SENDING does change stream state, which would allow the sender to move to closed unilaterally (for example, send WT_RST_STREAM and WT_STOP_SENDING together).  DATA frames may trickle in after that for the closed stream, you just keep handling them for connection flow control -- this is the same as RST_STREAM in vanilla H2.\r\n\r\nIf we make it like QUIC instead, where STOP_SENDING does not affect state, the sender of the STOP_SENDING has to wait for WT_RST_STREAM or a FIN to move to closed.  \r\n\r\nSo I think either model is fine and I don't have a stylistic preference.  I'm wondering if it has an effect on the stream limit accounting, but I don't think it does?  The H2 model frees the streams 1/2 RTT faster.",
          "createdAt": "2021-07-08T00:37:17Z",
          "updatedAt": "2021-07-08T00:37:17Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Ugh, I should know this stuff better, I only recently rewrote the closing bit in h2 to deal with this problem.\r\n\r\n> this is the same as RST_STREAM in vanilla H2.\r\n\r\nOf course.  It's bad, but no worse than status quo.  Thanks for correcting me.\r\n\r\n(Full transparency: I think that the QUIC stream model is so much better than h2 that I can no longer stomach these minor infidelities in h2.  This PR does manage to balance the need to provide API consistency across versions without fixing/changing h2's problems.  I'm sure I'll manage to swallow my distaste eventually if we go this way.)\r\n",
          "createdAt": "2021-07-08T00:51:28Z",
          "updatedAt": "2021-07-08T00:51:28Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think that the QUIC stream model is so much better than h2 that I can no longer stomach these minor infidelities in h2\r\n\r\nHeh. Since this is merging an H3 feature into H2 I feel like we could pick either model and still claim to be consistent.  For now, I'll leave this H2 style.",
          "createdAt": "2021-07-08T14:32:04Z",
          "updatedAt": "2021-07-08T14:32:04Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzAxMzg5Mjc0",
          "commit": {
            "abbreviatedOid": "806ed4b"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks @afrind!",
          "createdAt": "2021-07-07T19:50:19Z",
          "updatedAt": "2021-07-07T19:51:08Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "```suggestion\nis being abandoned.\n```\n",
              "createdAt": "2021-07-07T19:50:19Z",
              "updatedAt": "2021-07-07T19:51:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzAxNTM1NzI2",
          "commit": {
            "abbreviatedOid": "806ed4b"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks for writing this up Alan.\r\n\r\nThis works.  Though I'm not sure about the STOP_SENDING analogue; QUIC permits the sender to choose the ultimate code for RESET_STREAM, even if it is generally copied  from STOP_SENDING.  I know that we mostly don't need to include RESET_STREAM here as the stream size accounting isn't as critical, so maybe perfect fidelity isn't needed.",
          "createdAt": "2021-07-08T00:00:17Z",
          "updatedAt": "2021-07-08T00:03:01Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "```suggestion\r\na stream that is already \"closed\" or \"half-closed (local)\", the recipient SHOULD\r\n```",
              "createdAt": "2021-07-08T00:00:17Z",
              "updatedAt": "2021-07-08T00:03:01Z"
            },
            {
              "originalPosition": 108,
              "body": "Is \"credit\" the right term here?  \"count the frame length toward the FC window\" perhaps.",
              "createdAt": "2021-07-08T00:01:00Z",
              "updatedAt": "2021-07-08T00:03:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 19,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg1NjgwMDk0",
      "title": "Fix the note",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/19",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Add links to the links.\r\nRemove .note.xml, which wasn't being used.",
      "createdAt": "2021-07-08T04:42:24Z",
      "updatedAt": "2021-07-08T14:00:53Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "9d43e3d60a8f0f768224a50740e9c537d083d8da",
      "headRepository": "martinthomson/draft-webtransport-http2",
      "headRefName": "fix-note",
      "headRefOid": "add59c1ac58d676a735399aec23b0c1494776f0e",
      "closedAt": "2021-07-08T14:00:53Z",
      "mergedAt": "2021-07-08T14:00:53Z",
      "mergedBy": "afrind",
      "mergeCommit": {
        "oid": "33cce3b81a9111e69176c29a04d8e3cff9b8bf1a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 20,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg1NjgwMTY4",
      "title": "Remove unused CI",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/20",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Assuming that you use Actions, that is.",
      "createdAt": "2021-07-08T04:42:37Z",
      "updatedAt": "2021-07-08T14:02:47Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "9d43e3d60a8f0f768224a50740e9c537d083d8da",
      "headRepository": "martinthomson/draft-webtransport-http2",
      "headRefName": "only-one-ci",
      "headRefOid": "9be9fe1fd901b68889f1c3db3cdab7203573ce0b",
      "closedAt": "2021-07-08T14:02:47Z",
      "mergedAt": "2021-07-08T14:02:47Z",
      "mergedBy": "afrind",
      "mergeCommit": {
        "oid": "17f0b8a8aba3e6d1e0134ce9d69d587abde31048"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 21,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg1Njg0NDYy",
      "title": "The query component is relevant too",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/21",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This might seem unfortunate, but it's how the protocol works.\r\n\r\nUpdate the link to point to HTTP spec instead.",
      "createdAt": "2021-07-08T04:54:47Z",
      "updatedAt": "2021-07-08T14:03:57Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "9d43e3d60a8f0f768224a50740e9c537d083d8da",
      "headRepository": "martinthomson/draft-webtransport-http2",
      "headRefName": "http-uri",
      "headRefOid": "c89b3249415f18af801f5d7d04c910a4cb87cd12",
      "closedAt": "2021-07-08T14:03:57Z",
      "mergedAt": "2021-07-08T14:03:57Z",
      "mergedBy": "afrind",
      "mergeCommit": {
        "oid": "1fa717b1a1a988cdad8a15f8d674d8e7f271a105"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzAyMTA1NjY0",
          "commit": {
            "abbreviatedOid": "c89b324"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-08T14:03:33Z",
          "updatedAt": "2021-07-08T14:03:33Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I think this was copied from H3 so you might want to check there also?",
              "createdAt": "2021-07-08T14:03:33Z",
              "updatedAt": "2021-07-08T14:03:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 22,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg1Njg2Mjc5",
      "title": "Fix references",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/22",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There was a local reference that was just typed out.\r\n\r\nThe references to other documents cargo-culted from QUIC, but that only\r\nworks if the documents are in the same repo.  You have to pull\r\nreferences from the datatracker.\r\n\r\nUse the nice reference format in a few places.",
      "createdAt": "2021-07-08T05:00:12Z",
      "updatedAt": "2021-07-08T14:09:42Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "1fa717b1a1a988cdad8a15f8d674d8e7f271a105",
      "headRepository": "martinthomson/draft-webtransport-http2",
      "headRefName": "who-types-section-x",
      "headRefOid": "a9a22fd25a6fd45196e362eedf964f02d5fcafb6",
      "closedAt": "2021-07-08T14:09:42Z",
      "mergedAt": "2021-07-08T14:09:42Z",
      "mergedBy": "afrind",
      "mergeCommit": {
        "oid": "fb4dacb316fee9f4a05782b34906c42a9c2e85af"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzAyMTA5NDE4",
          "commit": {
            "abbreviatedOid": "64ed6d9"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-08T14:06:33Z",
          "updatedAt": "2021-07-08T14:06:34Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "This also came from the webtrans-h3 spec",
              "createdAt": "2021-07-08T14:06:33Z",
              "updatedAt": "2021-07-08T14:06:34Z"
            }
          ]
        }
      ]
    },
    {
      "number": 26,
      "id": "PR_kwDODnOl884tplaO",
      "title": "Initial rewrite with WT frames on top of the HTTP flows instead of adding HTTP/2 frames",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/26",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Initial rewrite that uses WT frames on top of the HTTP flows\r\n- Welcome @martinthomson!\r\n- Borrows heavily from draft-thomson-webtrans-hwtq-00, rfc9000, and draft-ietf-quic-datagram-02, but tries to keep the same general document structure to parallel WT over H3\r\n- Initial outline of frame formats for WT frames, following closely along the lines of QUIC frames\r\n\r\nA few things that we'll need to do and/or file issues for: \r\n- More robust error instructions / WT connection-level errors\r\n- Do we really want length in the frame header for all frames? If so, we probably also want stream ID and to use stream 0 like h2 does. Alternately we could drop it back down like we do for QUIC, at the cost of being unable to delineate unknown frames on the underlying H2 stream (which is a little different from the considerations at play for QUIC)\r\n- More decoupling from H2, do we want to rename, all that sort of thing to be more purely HTTP semantics and not H/2 dependent. Didn't do that here because we aren't (yet) specifying any negation mechanism outside of HTTP/2 SETTINGS frames.\r\n- Fix up the example for real and do some more useful examples\r\n- Many more updates and general completeness",
      "createdAt": "2021-10-25T21:59:21Z",
      "updatedAt": "2021-10-25T22:50:16Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "3eae99522b1ed3cf39ec0997dcf63b645c2d227f",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "ek/http_semantics_initial",
      "headRefOid": "d39d247dc62d9f21ecde290cc31a0ca43f5d1c25",
      "closedAt": "2021-10-25T22:50:16Z",
      "mergedAt": "2021-10-25T22:50:16Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "029b15da46a5bc23c2441f9e047b9b82a1ab1cc7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vAf8O",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:01:17Z",
          "updatedAt": "2021-10-25T22:22:14Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "<3",
              "createdAt": "2021-10-25T22:01:17Z",
              "updatedAt": "2021-10-25T22:22:14Z"
            },
            {
              "originalPosition": 125,
              "body": "Do we need to think about how MAX_DATA interacts with the enclosing HTTP/2 flow control scheme?",
              "createdAt": "2021-10-25T22:05:28Z",
              "updatedAt": "2021-10-25T22:22:14Z"
            },
            {
              "originalPosition": 207,
              "body": "Did we mean `session flow control` here?",
              "createdAt": "2021-10-25T22:08:09Z",
              "updatedAt": "2021-10-25T22:22:14Z"
            },
            {
              "originalPosition": 300,
              "body": "This reads awkwardly with the WT_PADDING frames header.",
              "createdAt": "2021-10-25T22:11:01Z",
              "updatedAt": "2021-10-25T22:22:14Z"
            },
            {
              "originalPosition": 345,
              "body": "Do we talk about the stream ID numbering space here?  It could be completely scoped to the WebTransport session, which is different than H3.",
              "createdAt": "2021-10-25T22:12:51Z",
              "updatedAt": "2021-10-25T22:22:14Z"
            },
            {
              "originalPosition": 361,
              "body": "This field isn't necessary because of the in-order, reliable delivery of the underlying transport.  That said, I'm not opposed to leaving it here for symmetry with QUIC.  We could also say - it's unused, or what to do if this value is different from the value computed as the size of sent data on this stream?",
              "createdAt": "2021-10-25T22:14:28Z",
              "updatedAt": "2021-10-25T22:22:14Z"
            },
            {
              "originalPosition": 416,
              "body": "s/connection/session/",
              "createdAt": "2021-10-25T22:16:32Z",
              "updatedAt": "2021-10-25T22:22:14Z"
            },
            {
              "originalPosition": 457,
              "body": "Since QUIC's flow control credits work differently from H2, it may be worth explicitly stating how this works here.",
              "createdAt": "2021-10-25T22:17:32Z",
              "updatedAt": "2021-10-25T22:22:14Z"
            },
            {
              "originalPosition": 481,
              "body": "Are we working extra hard not to say offset here?  I find this description a bit unclear.",
              "createdAt": "2021-10-25T22:18:18Z",
              "updatedAt": "2021-10-25T22:22:14Z"
            },
            {
              "originalPosition": 573,
              "body": "session level?",
              "createdAt": "2021-10-25T22:19:08Z",
              "updatedAt": "2021-10-25T22:22:14Z"
            },
            {
              "originalPosition": 717,
              "body": "How does WT_DATAGRAM compare to the Datagram capsule from masque?",
              "createdAt": "2021-10-25T22:20:47Z",
              "updatedAt": "2021-10-25T22:22:14Z"
            },
            {
              "originalPosition": 746,
              "body": "We might want to say more here because there's no reason I can't send a WT_DATAGRAM of 1MB.",
              "createdAt": "2021-10-25T22:21:37Z",
              "updatedAt": "2021-10-25T22:22:15Z"
            },
            {
              "originalPosition": 895,
              "body": "We should redo the examples with a different stream ID space.",
              "createdAt": "2021-10-25T22:22:08Z",
              "updatedAt": "2021-10-25T22:22:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAjvt",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:25:56Z",
          "updatedAt": "2021-10-25T22:25:57Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "Probably worth a note, at least. So far my understanding is that we still want a way to limit all stream data vs. all data including the other control frames, so that the stream/connection limits in h2 can be set to something high/ignored except for self-protection reasons. But let's discuss more, #27.",
              "createdAt": "2021-10-25T22:25:56Z",
              "updatedAt": "2021-10-25T22:25:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAkHr",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:28:33Z",
          "updatedAt": "2021-10-25T22:28:33Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "Yeah, although technically both session and stream level limits apply, this part is mostly talking about limiting the number of CONNECT requests. Updating now...",
              "createdAt": "2021-10-25T22:28:33Z",
              "updatedAt": "2021-10-25T22:28:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAkN9",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:29:15Z",
          "updatedAt": "2021-10-25T22:29:16Z",
          "comments": [
            {
              "originalPosition": 300,
              "body": "Whoops, good catch. Copy/paste error (I suspect there will be more)",
              "createdAt": "2021-10-25T22:29:16Z",
              "updatedAt": "2021-10-25T22:29:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAkTF",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:29:48Z",
          "updatedAt": "2021-10-25T22:29:48Z",
          "comments": [
            {
              "originalPosition": 345,
              "body": "Not yet, I think that's something worth discussing with more folks, so I didn't codify much there so far",
              "createdAt": "2021-10-25T22:29:48Z",
              "updatedAt": "2021-10-25T22:29:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAkWy",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:30:15Z",
          "updatedAt": "2021-10-25T22:30:16Z",
          "comments": [
            {
              "originalPosition": 345,
              "body": "#28",
              "createdAt": "2021-10-25T22:30:16Z",
              "updatedAt": "2021-10-25T22:30:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAkqM",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:31:38Z",
          "updatedAt": "2021-10-25T22:31:38Z",
          "comments": [
            {
              "originalPosition": 361,
              "body": "Yeah, I left length-less datagrams out in the same way for parity, we can also just say it's unused if we want. #29",
              "createdAt": "2021-10-25T22:31:38Z",
              "updatedAt": "2021-10-25T22:31:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAkuH",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:32:07Z",
          "updatedAt": "2021-10-25T22:32:08Z",
          "comments": [
            {
              "originalPosition": 416,
              "body": "Ack, will fix",
              "createdAt": "2021-10-25T22:32:08Z",
              "updatedAt": "2021-10-25T22:32:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAkzG",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:32:41Z",
          "updatedAt": "2021-10-25T22:32:41Z",
          "comments": [
            {
              "originalPosition": 457,
              "body": "Great idea, #30",
              "createdAt": "2021-10-25T22:32:41Z",
              "updatedAt": "2021-10-25T22:32:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAk2x",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:33:03Z",
          "updatedAt": "2021-10-25T22:33:03Z",
          "comments": [
            {
              "originalPosition": 481,
              "body": "Yeah, took a bunch of the offset stuff out, but we can try and clean it up.",
              "createdAt": "2021-10-25T22:33:03Z",
              "updatedAt": "2021-10-25T22:33:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAlHx",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:35:11Z",
          "updatedAt": "2021-10-25T22:35:11Z",
          "comments": [
            {
              "originalPosition": 573,
              "body": "Fixed :)",
              "createdAt": "2021-10-25T22:35:11Z",
              "updatedAt": "2021-10-25T22:35:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAlbO",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:37:32Z",
          "updatedAt": "2021-10-25T22:37:32Z",
          "comments": [
            {
              "originalPosition": 717,
              "body": "Heh, super simple in this version, but worth writing up, #31",
              "createdAt": "2021-10-25T22:37:32Z",
              "updatedAt": "2021-10-25T22:37:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAlgE",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:38:03Z",
          "updatedAt": "2021-10-25T22:38:03Z",
          "comments": [
            {
              "originalPosition": 746,
              "body": "Also #31",
              "createdAt": "2021-10-25T22:38:03Z",
              "updatedAt": "2021-10-25T22:38:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAlyo",
          "commit": {
            "abbreviatedOid": "2d0d754"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T22:40:20Z",
          "updatedAt": "2021-10-25T22:40:21Z",
          "comments": [
            {
              "originalPosition": 895,
              "body": "#32",
              "createdAt": "2021-10-25T22:40:20Z",
              "updatedAt": "2021-10-25T22:40:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vAmH7",
          "commit": {
            "abbreviatedOid": "d39d247"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for doing the heavy lifting here!",
          "createdAt": "2021-10-25T22:42:57Z",
          "updatedAt": "2021-10-25T22:42:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDODnOl884txgBh",
      "title": "Fix the links in the note",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/33",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-10-28T03:49:43Z",
      "updatedAt": "2021-11-05T03:44:09Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "029b15da46a5bc23c2441f9e047b9b82a1ab1cc7",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "note-links",
      "headRefOid": "11e99f0177a26eaa6340df9a9a10d472bb9a46ff",
      "closedAt": "2021-11-05T03:44:04Z",
      "mergedAt": "2021-11-05T03:44:04Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "fd4135cebc160eafe2a35febeba6090ff3e617b5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vK8iJ",
          "commit": {
            "abbreviatedOid": "11e99f0"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-28T05:53:11Z",
          "updatedAt": "2021-10-28T05:53:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl884vO-Sj",
          "commit": {
            "abbreviatedOid": "11e99f0"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Ah, bad wrapping, thank you! ",
          "createdAt": "2021-10-28T21:42:06Z",
          "updatedAt": "2021-10-28T21:42:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDODnOl884txkUi",
      "title": "A new shorter intro",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/34",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There is a long and proud legacy of drafts that carry introductions concentrating on the\r\nmotivations for the last design change rather than the true reasons for\r\nthe protocol.  This is my attempt to bring things back on the level.\r\n\r\nI didn't stop there though.  I think that we should make this about\r\nHTTP/2 because we don't currently have an extended CONNECT defined for\r\nHTTP/1.1.  This walks back some of the \"generic HTTP\" language.  More\r\nchanges might be needed later in the document for that to be complete,\r\nbut I wanted to keep this fix localized.\r\n\r\nI did cut stuff that I think the document should still contain.  I just don't think that these need to be in the introduction.\r\n\r\nThat is:\r\n* you can multiplex multiple sessions\r\n* other protocols might take stuff from this session and transmit them in different, better ways",
      "createdAt": "2021-10-28T04:34:23Z",
      "updatedAt": "2021-11-05T17:26:37Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "029b15da46a5bc23c2441f9e047b9b82a1ab1cc7",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "intro",
      "headRefOid": "67f144d2efe85e9cad00d30cd6164cf66d53f5c6",
      "closedAt": "2021-11-05T17:26:35Z",
      "mergedAt": "2021-11-05T17:26:35Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "efac814566f677e8c7658269f47512d6de475f9c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vK7V4",
          "commit": {
            "abbreviatedOid": "169e1ef"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-28T05:43:45Z",
          "updatedAt": "2021-10-28T05:45:02Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "might allow",
              "createdAt": "2021-10-28T05:43:46Z",
              "updatedAt": "2021-10-28T05:45:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vK8Vs",
          "commit": {
            "abbreviatedOid": "169e1ef"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-28T05:51:42Z",
          "updatedAt": "2021-10-28T05:51:43Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nBy relying only on generic HTTP semantics, this protocol might allow deployment\r\n```",
              "createdAt": "2021-10-28T05:51:42Z",
              "updatedAt": "2021-10-28T05:51:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vl8-b",
          "commit": {
            "abbreviatedOid": "b865667"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Definitely good cleanup! This was in a half-generic/half-specific-to-HTTP/2 state and losing a bunch of the cruft from older versions is great. A few minor nits, but nothing particularly major.",
          "createdAt": "2021-11-05T03:46:51Z",
          "updatedAt": "2021-11-05T03:51:24Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "We're not technically providing _all_ of the capabilities, perhaps \r\n```suggestion\r\ndescribes a protocol that can provide many of the capabilities of WebTransport\r\n```\r\nor \r\n```suggestion\r\ndescribes a protocol that can provide all of the required capabilities of WebTransport\r\n```",
              "createdAt": "2021-11-05T03:46:52Z",
              "updatedAt": "2021-11-05T03:51:24Z"
            },
            {
              "originalPosition": 57,
              "body": "We've been framing this as a \"WebTransport framework\" -> reference to overview document that spells out requirements of WebTransport mappings to specific protocols, of which HTTP/3 and HTTP/2 are both \"peer\" implementations. \r\n\r\nNot trying to avoid positioning HTTP/2 as a fallback only for when HTTP/3 doesn't work, but it does potentially seem worth making it clear that we're supporting everything required by WebTransport, which isn't just for HTTP/3?",
              "createdAt": "2021-11-05T03:48:48Z",
              "updatedAt": "2021-11-05T03:51:24Z"
            },
            {
              "originalPosition": 70,
              "body": "Very nice. At some point we need to talk through what this looks like for HTTP in general (and HTTP/1.1 specifically), my first pass put some of that up through the intro and then dropped all pretense of considering not-HTTP/2 afterwards. This is much more elegant.",
              "createdAt": "2021-11-05T03:49:55Z",
              "updatedAt": "2021-11-05T03:51:24Z"
            },
            {
              "originalPosition": 55,
              "body": "Do we want to talk about the ability to break out to native features at all? Not saying we need to, but that sort of feeds into the discussion about HTTP datagrams and such.",
              "createdAt": "2021-11-05T03:50:39Z",
              "updatedAt": "2021-11-05T03:51:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vl9o_",
          "commit": {
            "abbreviatedOid": "67f144d"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-05T03:55:45Z",
          "updatedAt": "2021-11-05T03:55:45Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "I think that we can feed that into the wt-h3 draft.\r\n\r\nI would like to see that use the design we have here, but then enrich it by allowing things to jump out into their own streams or datagrams.",
              "createdAt": "2021-11-05T03:55:45Z",
              "updatedAt": "2021-11-05T03:55:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884voigd",
          "commit": {
            "abbreviatedOid": "67f144d"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-05T17:26:21Z",
          "updatedAt": "2021-11-05T17:26:21Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Makes sense. Putting some slides in for 112 about that since I expect we'll get a variety of thoughts from different folks on how this relates to H3.",
              "createdAt": "2021-11-05T17:26:21Z",
              "updatedAt": "2021-11-05T17:26:21Z"
            }
          ]
        }
      ]
    },
    {
      "number": 35,
      "id": "PR_kwDODnOl884txqI2",
      "title": "Improvements to overview ",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/35",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I make a few word-level adjustments, but the goal here was to tweak the\r\nway that this defines key concepts.\r\n\r\nI added one concept \"WebTransport frames\", which isn't necessarily a\r\nglobal concept, but it might be useful in this document to distinguish\r\nbetween HTTP/2 frames and the stuff in Section 6.\r\n\r\nI also linked up the frame types.  I've a change that I'm going to propose to kramdown that should make this a whole lot less unpleasant to use for the general case.",
      "createdAt": "2021-10-28T05:35:59Z",
      "updatedAt": "2022-03-07T20:43:46Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "029b15da46a5bc23c2441f9e047b9b82a1ab1cc7",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "s2-grammar",
      "headRefOid": "d73be38b1ac9272109b068a9b417d6e89c7cc05f",
      "closedAt": "2022-03-07T20:43:41Z",
      "mergedAt": "2022-03-07T20:43:40Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "af4db491bcf7d45e3f912d93bebff484631c1761"
      },
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Check out [the HTML](https://ietf-wg-webtrans.github.io/draft-webtransport-http2/s2-grammar/draft-ietf-webtrans-http2.html#section-2-7).  It's magic.",
          "createdAt": "2021-11-05T11:00:30Z",
          "updatedAt": "2021-11-05T11:00:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vl9dM",
          "commit": {
            "abbreviatedOid": "4e346c5"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thank you! This is great",
          "createdAt": "2021-11-05T03:53:20Z",
          "updatedAt": "2021-11-05T03:59:50Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Heh, even within this doc we've been back-and-forth on the 1 vs. 2 spaces thing. We can do a pass later to clean just that up -- I don't have crazy strong feelings beyond staying consistent.\r\n```suggestion\r\nbidirectional data for the session. This stream will be referred to as a\r\n```",
              "createdAt": "2021-11-05T03:53:20Z",
              "updatedAt": "2021-11-05T03:59:50Z"
            },
            {
              "originalPosition": 47,
              "body": "Wording nit: Latency or round trips? We're not really making guarantees about network performance, more our usage of it?\r\n```suggestion\r\n  round trips using [WT_STREAM](#wtstream-frames){format=\"none\"} frames\r\n```",
              "createdAt": "2021-11-05T03:57:55Z",
              "updatedAt": "2021-11-05T03:59:50Z"
            },
            {
              "originalPosition": 58,
              "body": "Very nice. :) ",
              "createdAt": "2021-11-05T03:58:42Z",
              "updatedAt": "2021-11-05T03:59:50Z"
            },
            {
              "originalPosition": 74,
              "body": "Whoopsies, good catch :) ",
              "createdAt": "2021-11-05T03:59:26Z",
              "updatedAt": "2021-11-05T03:59:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vm5Mr",
          "commit": {
            "abbreviatedOid": "a7e25bc"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-05T10:37:03Z",
          "updatedAt": "2021-11-05T10:37:03Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "It's about to get better...",
              "createdAt": "2021-11-05T10:37:03Z",
              "updatedAt": "2021-11-05T10:37:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884voO9e",
          "commit": {
            "abbreviatedOid": "d4f2302"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-05T16:08:07Z",
          "updatedAt": "2021-11-05T16:08:08Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Super cool! Just curious: why is this one `#WT_PADDING` while the rest are `#` only?",
              "createdAt": "2021-11-05T16:08:08Z",
              "updatedAt": "2021-11-05T16:08:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vqODA",
          "commit": {
            "abbreviatedOid": "d4f2302"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-07T23:02:32Z",
          "updatedAt": "2021-11-07T23:02:32Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "They mean the same. But I forgot to fix this one up.",
              "createdAt": "2021-11-07T23:02:32Z",
              "updatedAt": "2021-11-07T23:02:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl8841xu-p",
          "commit": {
            "abbreviatedOid": "d4f2302"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T20:42:53Z",
          "updatedAt": "2022-03-07T20:42:53Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "(Cleaned up in [d73be38](https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/35/commits/d73be38b1ac9272109b068a9b417d6e89c7cc05f))",
              "createdAt": "2022-03-07T20:42:53Z",
              "updatedAt": "2022-03-07T20:42:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 36,
      "id": "PR_kwDODnOl884t0wov",
      "title": "Origin header tweak",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/36",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Two things:\r\n\r\n1. Say what the header contains\r\n2. Limit it to the Web\r\n\r\nAnd fix the xref formatting.",
      "createdAt": "2021-10-29T00:11:00Z",
      "updatedAt": "2021-11-05T04:00:36Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "029b15da46a5bc23c2441f9e047b9b82a1ab1cc7",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "origin-header-fix",
      "headRefOid": "b5bc9d7161df762d6674e2d6d84ce8a59a7fc46f",
      "closedAt": "2021-11-05T04:00:34Z",
      "mergedAt": "2021-11-05T04:00:34Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "9f7d2cdfee0d8b98180294a0f59e410ac0ac001f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vPfeE",
          "commit": {
            "abbreviatedOid": "b5bc9d7"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-29T03:19:32Z",
          "updatedAt": "2021-10-29T03:19:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl884vl9-S",
          "commit": {
            "abbreviatedOid": "b5bc9d7"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-11-05T04:00:21Z",
          "updatedAt": "2021-11-05T04:00:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 37,
      "id": "PR_kwDODnOl884t0xGO",
      "title": "The server doesn't support WT",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/37",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The resource does.  It's a fine distinction, but an important one.",
      "createdAt": "2021-10-29T00:15:54Z",
      "updatedAt": "2021-11-05T17:22:16Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "029b15da46a5bc23c2441f9e047b9b82a1ab1cc7",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "resource-support",
      "headRefOid": "dd44b0cdd344a2ea23075605a4f5424c459403a9",
      "closedAt": "2021-11-05T17:22:14Z",
      "mergedAt": "2021-11-05T17:22:14Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "d2cd39b528b92b2916c5ead87f343cba68110923"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vPfjL",
          "commit": {
            "abbreviatedOid": "541d96b"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-29T03:20:36Z",
          "updatedAt": "2021-10-29T03:20:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl884vl-GI",
          "commit": {
            "abbreviatedOid": "541d96b"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "An excellent distinction, thank you :) ",
          "createdAt": "2021-11-05T04:01:52Z",
          "updatedAt": "2021-11-05T04:02:27Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Wording nit: Just to keep the pronoun clear, \r\n> it SHOULD reply\r\nIs that the server replying or the resource? Current wording implies resource\r\n```suggestion\r\nWebTransport sessions. If the resource does not, the server SHOULD reply with status\r\n```",
              "createdAt": "2021-11-05T04:01:52Z",
              "updatedAt": "2021-11-05T04:02:27Z"
            }
          ]
        }
      ]
    },
    {
      "number": 39,
      "id": "PR_kwDODnOl884t0xyb",
      "title": "Fewer headings",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/39",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The features and protocol details are really different concepts (one\r\nrelates to what the protocol does, the other to the implications of\r\nthat), but the current structure is poor.  I was taught that you never\r\nleave a section heading empty (S5 currently) and that you never have\r\njust a single subsection (S4.1 and S5.1).  Expanding the scope of the\r\nsection is an elegant solution.",
      "createdAt": "2021-10-29T00:24:09Z",
      "updatedAt": "2021-11-05T04:03:12Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "029b15da46a5bc23c2441f9e047b9b82a1ab1cc7",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "fewer-headings",
      "headRefOid": "eba277cb6ddbd740a32209345f38c5fabe44c15c",
      "closedAt": "2021-11-05T04:03:09Z",
      "mergedAt": "2021-11-05T04:03:09Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "920765691dc34f8bfa6f8f1fcf0b11f89b464121"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vPfsT",
          "commit": {
            "abbreviatedOid": "eba277c"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "very elegant",
          "createdAt": "2021-10-29T03:22:18Z",
          "updatedAt": "2021-10-29T03:22:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl884vl-Ll",
          "commit": {
            "abbreviatedOid": "eba277c"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Works for me!",
          "createdAt": "2021-11-05T04:03:03Z",
          "updatedAt": "2021-11-05T04:03:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 41,
      "id": "PR_kwDODnOl884t0yU0",
      "title": "Padding field in WT_PADDING",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/41",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The frame format depends on having a definition.  I've also made a\r\nrequirement for this to be zero values.  Do we need to say that\r\nrecipients MUST NOT validate this or that they MAY opt to avoid\r\nvalidation.",
      "createdAt": "2021-10-29T00:30:12Z",
      "updatedAt": "2021-11-05T04:05:08Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "029b15da46a5bc23c2441f9e047b9b82a1ab1cc7",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "padding-extends",
      "headRefOid": "9d777db6d14d21ba231fc7f5175a83f13b9aa17f",
      "closedAt": "2021-11-05T04:05:05Z",
      "mergedAt": "2021-11-05T04:05:05Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "f12522110ba3d97493ba73591ec9c2d07e4a7715"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vPf12",
          "commit": {
            "abbreviatedOid": "1d9c303"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-29T03:24:08Z",
          "updatedAt": "2021-10-29T03:24:08Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Doesn't it need to be the length specified by `Length`?\r\n\r\nError handling needs a bigger pass so it's ok to not say anything about this now, I think.  Or leave a TODO",
              "createdAt": "2021-10-29T03:24:08Z",
              "updatedAt": "2021-10-29T03:24:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vQd_X",
          "commit": {
            "abbreviatedOid": "1d9c303"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-29T09:52:41Z",
          "updatedAt": "2021-10-29T09:52:41Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nThe Padding field MUST be set to an all-zero sequence of bytes of any length as\r\nspecified by the Length field.\r\n<!-- TODO validation and error handling -->\r\n```",
              "createdAt": "2021-10-29T09:52:41Z",
              "updatedAt": "2021-10-29T09:53:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vl-UG",
          "commit": {
            "abbreviatedOid": "9d777db"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-11-05T04:04:51Z",
          "updatedAt": "2021-11-05T04:04:59Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Yeah, I stripped these for basically every frame that had any requirement just until we have some text describing the mechanism for it, then we can drop it back in.",
              "createdAt": "2021-11-05T04:04:51Z",
              "updatedAt": "2021-11-05T04:04:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 42,
      "id": "PR_kwDODnOl884t0yfn",
      "title": "Some more section references",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/42",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-10-29T00:32:14Z",
      "updatedAt": "2021-11-05T04:05:41Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "029b15da46a5bc23c2441f9e047b9b82a1ab1cc7",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "sections",
      "headRefOid": "97ba5de9615129b4c0f8352109c3af93080c4e69",
      "closedAt": "2021-11-05T04:05:39Z",
      "mergedAt": "2021-11-05T04:05:39Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "a6f0dbf84f5d227afb1972a05da724cf7f029bec"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vPf4F",
          "commit": {
            "abbreviatedOid": "97ba5de"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-29T03:24:35Z",
          "updatedAt": "2021-10-29T03:24:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl884vl-Xe",
          "commit": {
            "abbreviatedOid": "97ba5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-11-05T04:05:35Z",
          "updatedAt": "2021-11-05T04:05:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "PR_kwDODnOl884t01NW",
      "title": "Cut Final Size",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/43",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "And explain the difference.\r\n\r\nCloses #29.",
      "createdAt": "2021-10-29T01:04:51Z",
      "updatedAt": "2021-11-16T19:57:42Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "efac814566f677e8c7658269f47512d6de475f9c",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "final-size-begone",
      "headRefOid": "12ce5a0d1fead18e3f4b9722a8e807370919a7e2",
      "closedAt": "2021-11-16T19:57:39Z",
      "mergedAt": "2021-11-16T19:57:39Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "a54890f8f00a9eff147261e19f1b3bea0fa228e2"
      },
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Updated for merge conflicts, merging this now since whatever the capsule discussion outcome, we know we're going to remove final size",
          "createdAt": "2021-11-16T19:57:33Z",
          "updatedAt": "2021-11-16T19:57:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vPf8l",
          "commit": {
            "abbreviatedOid": "dde6a7c"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Of course it's not needed in this context, but the 1:1 mapping is a nice feature because it promotes code re-use with a QUIC parser.  Doesn't seem like it's that sharp an edge if we remove it, but I reserve the right to grumble when I implement it.",
          "createdAt": "2021-10-29T03:25:23Z",
          "updatedAt": "2021-10-29T03:38:51Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Do we ever hyphenate \"in order\"?",
              "createdAt": "2021-10-29T03:25:23Z",
              "updatedAt": "2021-10-29T03:38:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vQePs",
          "commit": {
            "abbreviatedOid": "dde6a7c"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-29T09:53:48Z",
          "updatedAt": "2021-10-29T09:53:48Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "We should.  At least here.\r\n```suggestion\r\nfield.  In-order delivery of WT_STREAM frames ensures that the amount of\r\n```",
              "createdAt": "2021-10-29T09:53:48Z",
              "updatedAt": "2021-10-29T09:53:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vqM5x",
          "commit": {
            "abbreviatedOid": "e128a73"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Text is great, just holding while we decide #29.",
          "createdAt": "2021-11-07T22:22:47Z",
          "updatedAt": "2021-11-07T22:22:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 45,
      "id": "PR_kwDODnOl884t02W3",
      "title": "Fix the definition of WT_STREAM",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/45",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The definition was a little loose, so I rewrote it.\r\n\r\nWe only need to use 0x0a and 0x0b, which is lucky and it lets us avoid\r\nmuch of the mess that QUIC has around bits in the type.\r\n\r\nI've also added definitions for the fields in the frame.",
      "createdAt": "2021-10-29T01:18:28Z",
      "updatedAt": "2022-03-07T20:49:58Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "af4db491bcf7d45e3f912d93bebff484631c1761",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "stream-types",
      "headRefOid": "60b744e1b8e925f2a87550d895192c4d8023190f",
      "closedAt": "2022-03-07T20:49:56Z",
      "mergedAt": "2022-03-07T20:49:56Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "a369799472dd71c04cd6578e344dd0bdd55e9057"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vPhGL",
          "commit": {
            "abbreviatedOid": "e14b2b9"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-29T03:39:59Z",
          "updatedAt": "2021-10-29T03:42:47Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "Should these stream headers be singular (WT_STREAM Frame)?",
              "createdAt": "2021-10-29T03:39:59Z",
              "updatedAt": "2021-10-29T03:42:47Z"
            },
            {
              "originalPosition": 18,
              "body": "Do we need to say 'the end of the write half of the stream'? ",
              "createdAt": "2021-10-29T03:41:06Z",
              "updatedAt": "2021-10-29T03:42:47Z"
            },
            {
              "originalPosition": 35,
              "body": "Just not the first or last empty frame.  I don't have any better text to offer though.",
              "createdAt": "2021-10-29T03:42:43Z",
              "updatedAt": "2021-10-29T03:42:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vl-jn",
          "commit": {
            "abbreviatedOid": "21ef733"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-05T04:08:07Z",
          "updatedAt": "2021-11-05T04:11:17Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "Started that way, but opted to follow what 9000 did and keep them plural",
              "createdAt": "2021-11-05T04:08:08Z",
              "updatedAt": "2021-11-05T04:11:17Z"
            },
            {
              "originalPosition": 35,
              "body": "Ah, nice. We definitely need the ability to open/close without sending, but no need to leave that wide open.",
              "createdAt": "2021-11-05T04:09:11Z",
              "updatedAt": "2021-11-05T04:11:17Z"
            },
            {
              "originalPosition": 9,
              "body": "Asides from whether or not this really needs its own paragraph, do we somewhere want to keep that a stream frame creates a stream? (no preference around wording/implicitness/that stuff, but we no longer say in this section at all that it creates a stream)",
              "createdAt": "2021-11-05T04:10:56Z",
              "updatedAt": "2021-11-05T04:11:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vQe2R",
          "commit": {
            "abbreviatedOid": "66a791b"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-29T09:56:38Z",
          "updatedAt": "2021-11-05T10:49:35Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "This matches the conventions we settled on in RFC 9000.",
              "createdAt": "2021-10-29T09:56:38Z",
              "updatedAt": "2021-11-05T10:49:35Z"
            },
            {
              "originalPosition": 9,
              "body": "The definition starts with \"WT_STREAM frames implicitly create a stream [...]\"  I figured that would be OK.",
              "createdAt": "2021-11-05T10:49:23Z",
              "updatedAt": "2021-11-05T10:49:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884voiJF",
          "commit": {
            "abbreviatedOid": "21ef733"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-05T17:24:46Z",
          "updatedAt": "2021-11-05T17:24:47Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Sorry, I must just be misreading the diff. It looks to me like \r\n> implicitly create a stream\r\n\r\nwould no longer be in the document anywhere, which is fine from a wording perspective, but we probably want _some_ mention that they create a stream.",
              "createdAt": "2021-11-05T17:24:47Z",
              "updatedAt": "2021-11-05T17:25:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl8841xwiO",
          "commit": {
            "abbreviatedOid": "21ef733"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T20:49:33Z",
          "updatedAt": "2022-03-07T20:49:33Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Put create a stream back in that sentence in [60b744e](https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/45/commits/60b744e1b8e925f2a87550d895192c4d8023190f), but we can always reword/take it out later if needed.",
              "createdAt": "2022-03-07T20:49:33Z",
              "updatedAt": "2022-03-07T20:49:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 46,
      "id": "PR_kwDODnOl884t02j4",
      "title": "Simplify the definition of MAX_DATA",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/46",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "QUIC is complicated, this doesn't need to be.",
      "createdAt": "2021-10-29T01:21:12Z",
      "updatedAt": "2021-11-05T04:12:15Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "029b15da46a5bc23c2441f9e047b9b82a1ab1cc7",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "max-data-simple",
      "headRefOid": "51dee606a4ba5081f949d5139907bea93f330030",
      "closedAt": "2021-11-05T04:12:13Z",
      "mergedAt": "2021-11-05T04:12:13Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "fab116f7a0d7dd4823c239f4977e9e91b8661684"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vPhcB",
          "commit": {
            "abbreviatedOid": "51dee60"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-29T03:44:15Z",
          "updatedAt": "2021-10-29T03:44:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl884vl-2X",
          "commit": {
            "abbreviatedOid": "51dee60"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Much nicer!",
          "createdAt": "2021-11-05T04:12:09Z",
          "updatedAt": "2021-11-05T04:12:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 47,
      "id": "PR_kwDODnOl884t03GQ",
      "title": " Some clerical changes ",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/47",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\r\n\r\nMake the definition of fields use definition lists.\r\n\r\nUse superscripts where appropriate.  Also, fix this so that it is\r\n2^62-1 and not 2^61 (parentheses were used incorrectly).\r\n\r\n",
      "createdAt": "2021-10-29T01:28:43Z",
      "updatedAt": "2021-11-05T17:21:24Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "2237c12d75ae9e57fb0c47ff1a62110463720a83",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "dl",
      "headRefOid": "4b853ae9182f37d5fcc877bf9c2187e81efb1263",
      "closedAt": "2021-11-05T17:21:22Z",
      "mergedAt": "2021-11-05T17:21:22Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "2b2ce737780ab7299c318d4df066dbf622dcd117"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vPhk5",
          "commit": {
            "abbreviatedOid": "e939b00"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-29T03:46:07Z",
          "updatedAt": "2021-10-29T03:46:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl884vl-84",
          "commit": {
            "abbreviatedOid": "e939b00"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thank you!",
          "createdAt": "2021-11-05T04:13:38Z",
          "updatedAt": "2021-11-05T04:15:31Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "Heh, good catch",
              "createdAt": "2021-11-05T04:13:38Z",
              "updatedAt": "2021-11-05T04:15:31Z"
            },
            {
              "originalPosition": 204,
              "body": "\ud83d\udc4d",
              "createdAt": "2021-11-05T04:14:13Z",
              "updatedAt": "2021-11-05T04:15:31Z"
            },
            {
              "originalPosition": 14,
              "body": "So why swap padding vs. the rest of these? (And/or what is this intended to convey, I could just have it backwards)",
              "createdAt": "2021-11-05T04:15:21Z",
              "updatedAt": "2021-11-05T04:15:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vm8U1",
          "commit": {
            "abbreviatedOid": "e939b00"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-05T10:52:52Z",
          "updatedAt": "2021-11-05T10:52:53Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I should have removed all of them.  Length isn't zero for any frame now. (I added it to WT_PADDING because PADDING in QUIC doesn't have any body, but this one is different.)",
              "createdAt": "2021-11-05T10:52:53Z",
              "updatedAt": "2021-11-05T10:52:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vohCp",
          "commit": {
            "abbreviatedOid": "4b853ae"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-05T17:20:52Z",
          "updatedAt": "2021-11-05T17:20:52Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Gotcha, makes sense, thanks",
              "createdAt": "2021-11-05T17:20:52Z",
              "updatedAt": "2021-11-05T17:20:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl884vohHl",
          "commit": {
            "abbreviatedOid": "4b853ae"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-11-05T17:21:16Z",
          "updatedAt": "2021-11-05T17:21:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 49,
      "id": "PR_kwDODnOl884t03pt",
      "title": "Move the Examples out of IANA considerations",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/49",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There is not \"right\" place to put these, but as they are fairly large\r\n(and not that useful, frankly), I am going to suggest that they go after\r\nthe frame definitions.",
      "createdAt": "2021-10-29T01:36:26Z",
      "updatedAt": "2021-11-05T04:19:54Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "fab116f7a0d7dd4823c239f4977e9e91b8661684",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "examples-sec",
      "headRefOid": "0e243a6636c7a817f4d44719a7ddb58565385161",
      "closedAt": "2021-11-05T04:19:52Z",
      "mergedAt": "2021-11-05T04:19:52Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "2237c12d75ae9e57fb0c47ff1a62110463720a83"
      },
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, these used to describe how you'd handle a bunch of new concepts, this is now pretty basic and not particularly enlightening. \r\nMayyyybe useful for the establishment, if you've never seen Extended CONNECT, but... yeah. \r\n\r\nSeems good to move around now and we can cut it later if we don't end up adding anything useful to them.\r\n\r\n(I also updated with the section reference change from the other PRs to fix up conflicts, since this moved one of those)",
          "createdAt": "2021-11-05T04:19:20Z",
          "updatedAt": "2021-11-05T04:19:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884vPhws",
          "commit": {
            "abbreviatedOid": "2b5967e"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I think these have evolved through various versions of the drafts.  When the original draft was presented, things like a \"CONNECT stream\" and how other streams relate to it were not common knowledge, so the examples were maybe more useful.  If everyone has got the idea, we can drop it.",
          "createdAt": "2021-10-29T03:48:36Z",
          "updatedAt": "2021-10-29T03:48:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 50,
      "id": "PR_kwDODnOl884uIPPb",
      "title": "Fix up missing WT_ prefix for heading",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/50",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Silly fix for a missing WT_ prefix, missed this earlier somehow",
      "createdAt": "2021-11-05T05:09:03Z",
      "updatedAt": "2021-11-05T16:04:56Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "2237c12d75ae9e57fb0c47ff1a62110463720a83",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "ek/fix_frame_name",
      "headRefOid": "4e4503d18653be5d9cea23ec59c556b5c73457f5",
      "closedAt": "2021-11-05T16:04:52Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Whoops, this is in #35, which I read before doing this... ",
          "createdAt": "2021-11-05T16:04:52Z",
          "updatedAt": "2021-11-05T16:04:52Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 54,
      "id": "PR_kwDODnOl884vHgjb",
      "title": "Use MPTCP RFC",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/54",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "...Not HTTP/2\r\n\r\nThis section might go, but this is also harmless.",
      "createdAt": "2021-11-29T09:53:34Z",
      "updatedAt": "2022-03-07T20:43:57Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "a54890f8f00a9eff147261e19f1b3bea0fa228e2",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "mptcp-rfc",
      "headRefOid": "852f621bb5679d801826a07525deba94ef8c6633",
      "closedAt": "2022-03-07T20:40:58Z",
      "mergedAt": "2022-03-07T20:40:58Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "846aedbb0fa81f7fc579fd2ee991578b1b81c233"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884wwhNl",
          "commit": {
            "abbreviatedOid": "852f621"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-11-29T16:23:29Z",
          "updatedAt": "2021-11-29T16:23:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 55,
      "id": "PR_kwDODnOl8840ErvV",
      "title": "Add text describing Stream ID numbering",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/55",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Attempting to be minimal and just point at RFC9000. \r\n\r\nFixes #28.",
      "createdAt": "2022-03-07T22:58:52Z",
      "updatedAt": "2022-03-11T21:47:24Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "47e7c050a9a1b88b0be51f4dcb29099e51647453",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "ek/stream_id_numbering",
      "headRefOid": "ebd4e051aa8fbb1f1caad65c8058d7504ebeff33",
      "closedAt": "2022-03-11T21:47:14Z",
      "mergedAt": "2022-03-11T21:47:13Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "8a986cb280232764f008b17709cf9fa54cf0717e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl8841yXhY",
          "commit": {
            "abbreviatedOid": "ebd4e05"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T23:58:43Z",
          "updatedAt": "2022-03-07T23:58:43Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl884134qc",
          "commit": {
            "abbreviatedOid": "ebd4e05"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for doing that.",
          "createdAt": "2022-03-09T04:07:16Z",
          "updatedAt": "2022-03-09T04:07:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDODnOl88402bMW",
      "title": "Reset stream doesn't cease retransmission. Closes #53",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/56",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Reset stream doesn't cease retransmission. Closes #53",
      "createdAt": "2022-03-23T02:16:07Z",
      "updatedAt": "2022-03-23T09:34:36Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "8a986cb280232764f008b17709cf9fa54cf0717e",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "ek/reset_stream",
      "headRefOid": "440ac5b7cb990df15d982ffac5ef3454e75c5426",
      "closedAt": "2022-03-23T09:34:33Z",
      "mergedAt": "2022-03-23T09:34:33Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "51418a23c7008512f32d57f434578e23abd73dc1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl8842vc77",
          "commit": {
            "abbreviatedOid": "440ac5b"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-23T08:55:02Z",
          "updatedAt": "2022-03-23T08:55:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 57,
      "id": "PR_kwDODnOl8848Hr69",
      "title": "Typo fix: referrred",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/57",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-26T15:09:13Z",
      "updatedAt": "2022-07-26T16:00:41Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "51418a23c7008512f32d57f434578e23abd73dc1",
      "headRepository": "tfpauly/draft-webtransport-http2",
      "headRefName": "patch-1",
      "headRefOid": "f7003030ee9422826f08c1a29bf61ca3f5c5f665",
      "closedAt": "2022-07-26T16:00:41Z",
      "mergedAt": "2022-07-26T16:00:41Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "c9f4114bc22877a16a8827b59961a77ee3d712ee"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl884-qLDS",
          "commit": {
            "abbreviatedOid": "f700303"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-26T15:59:27Z",
          "updatedAt": "2022-07-26T15:59:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 58,
      "id": "PR_kwDODnOl885By8LQ",
      "title": "Capsule design team output [HTTP/2]",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/58",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Capsule design team output. Tries to avoid touching flow control so that we can tackle the open issues there separately, but converts the rest of HTTP/2 over to using capsules, as discussed. See also [HTTP/3](https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http3/pull/86).\r\n\r\nSame content as [draft PR](https://github.com/ekinnear/draft-ietf-webtrans-http2/pull/1), thank you to those who have already reviewed!\r\n\r\nCloses #25\r\nCloses #51",
      "createdAt": "2022-10-29T07:50:04Z",
      "updatedAt": "2022-12-16T19:10:33Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "c9f4114bc22877a16a8827b59961a77ee3d712ee",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "capsule_design_team",
      "headRefOid": "167cad5b8fbcc1df3093bf2ec83fe598bdf6886c",
      "closedAt": "2022-12-16T19:10:18Z",
      "mergedAt": "2022-12-16T19:10:18Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "fa773bd70fde6ab36f918d2a0fcd63b2192baac4"
      },
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "[Consensus declared](https://mailarchive.ietf.org/arch/msg/webtransport/shBK8WFsC9aWihBCy--e-7kKhRc/)",
          "createdAt": "2022-12-16T19:10:33Z",
          "updatedAt": "2022-12-16T19:10:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885FNeKH",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-30T16:11:39Z",
          "updatedAt": "2022-10-30T16:11:40Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "```suggestion\r\n*CONNECT stream*.  The stream ID of a CONNECT stream, which will be referrrrred to\r\n```",
              "createdAt": "2022-10-30T16:11:39Z",
              "updatedAt": "2022-10-30T16:11:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885FNgKU",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "A few things here, but overall this is good work and much appreciated. Thanks for doing the hard part Eric.",
          "createdAt": "2022-10-30T17:23:38Z",
          "updatedAt": "2022-10-30T18:12:20Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "I forget why we have both of these swings. Isn\u2019t this one sufficient?",
              "createdAt": "2022-10-30T17:23:38Z",
              "updatedAt": "2022-10-30T18:12:20Z"
            },
            {
              "originalPosition": 107,
              "body": "We probably already talked about this, but 404 is not right. 406, maybe. 400, sure. But 404 indicates that the resource doesn\u2019t exist and the text here implies that it does.",
              "createdAt": "2022-10-30T17:26:30Z",
              "updatedAt": "2022-10-30T18:12:20Z"
            },
            {
              "originalPosition": 108,
              "body": "```suggestion\r\nsession by replying with a 2xx series status code, as defined in {{Section 15.3\r\n```",
              "createdAt": "2022-10-30T17:28:14Z",
              "updatedAt": "2022-10-30T18:12:20Z"
            },
            {
              "originalPosition": 115,
              "body": "I don\u2019t agree with this. A client can send a request body without awaiting a response. Always.",
              "createdAt": "2022-10-30T17:29:38Z",
              "updatedAt": "2022-10-30T18:12:20Z"
            },
            {
              "originalPosition": 135,
              "body": "This could use some introductory verbiage.\r\n```suggestion\r\n\r\nFlow control governs the amount of resources that can be consumed or data that can be sent.\r\n\r\nWebTransport over HTTP/2 allows a server to limit the number of sessions that a client can create on a single connection; see {{}}.\r\n\r\nFor data, there are five applicable levels of flow control for data that is sent or received using WebTransport over HTTP/2:\r\n\r\n1. TCP flow control\r\n2. HTTP/2 connection flow control, which governs the total amount of data in DATA frames for all HTTP/2 streams\r\n3. HTTP/2 stream flow control, which limits the data on a single HTTP/2 stream. For a WebTransport session, this includes all capsules, including those that are exempt from session-level flow control.\r\n4. WebTransport session-level flow control which limits the total amount of stream data that can be sent or received on streams within the WebTransport session.\r\n5. WebTransport stream flow control which limits data on individual streams within a session.\r\n\r\nTCP and HTTP/2 define the first three levels of flow control. This document defines the final two.\r\n```",
              "createdAt": "2022-10-30T17:58:37Z",
              "updatedAt": "2022-10-30T18:12:20Z"
            },
            {
              "originalPosition": 144,
              "body": "MUST reset is not good always. Maybe a 4xx (too many requests is 426?)",
              "createdAt": "2022-10-30T18:04:30Z",
              "updatedAt": "2022-10-30T18:12:20Z"
            },
            {
              "originalPosition": 156,
              "body": "```suggestion\r\nend-to-end signal, intermediaries MUST consume flow control signals and\r\n```",
              "createdAt": "2022-10-30T18:05:07Z",
              "updatedAt": "2022-10-30T18:12:20Z"
            },
            {
              "originalPosition": 166,
              "body": "Is reexpress a word?",
              "createdAt": "2022-10-30T18:05:57Z",
              "updatedAt": "2022-10-30T18:12:20Z"
            },
            {
              "originalPosition": 172,
              "body": "Never say never.\r\n\r\ni say this because I am not sure that TOS is possible across all 5 levels. Maybe be less definitive here.",
              "createdAt": "2022-10-30T18:07:25Z",
              "updatedAt": "2022-10-30T18:12:20Z"
            },
            {
              "originalPosition": 380,
              "body": "I don\u2019t believe that is true with the new numbers",
              "createdAt": "2022-10-30T18:08:55Z",
              "updatedAt": "2022-10-30T18:12:20Z"
            },
            {
              "originalPosition": 771,
              "body": "New word!",
              "createdAt": "2022-10-30T18:10:48Z",
              "updatedAt": "2022-10-30T18:12:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885Ftst5",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T14:44:30Z",
          "updatedAt": "2022-11-06T14:44:30Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "It would be nice to not have both, but in practice we have the following setup: \r\n- Both sides send ENABLE_WEBTRANSPORT to say \"I'm willing to talk WebTransport, this RFC is now in play\"\r\n- Only the server sends MAX_SESSIONS, set to a non-zero value, to say \"I'm willing to accept this many sessions\" \r\nThe client cannot accept sessions, since the server cannot send CONNECT to the client.\r\n\r\nIf we wanted to have just the one setting, we could in theory have the client send it with a value of 0, but that's kinda messy for H2 settings, since existence of a setting that is set to 0 is not a great signal that things are set up to handle well.\r\nWe could also do silly things like having the value you accept be `<sent value> - 1`, but that's sadness.",
              "createdAt": "2022-11-06T14:44:30Z",
              "updatedAt": "2022-11-06T14:44:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885Ftsyv",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T14:47:02Z",
          "updatedAt": "2022-11-06T14:47:02Z",
          "comments": [
            {
              "originalPosition": 107,
              "body": "Good call, filed #61 for this",
              "createdAt": "2022-11-06T14:47:02Z",
              "updatedAt": "2022-11-06T14:47:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885Fts4U",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T14:49:28Z",
          "updatedAt": "2022-11-06T14:49:28Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "Yeah, not being modified here, but we also rely on being able to get started on the body without waiting an extra RTT to hear back from the server. Filed #62.",
              "createdAt": "2022-11-06T14:49:28Z",
              "updatedAt": "2022-11-06T14:49:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885FttE8",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T14:54:57Z",
          "updatedAt": "2022-11-06T14:54:57Z",
          "comments": [
            {
              "originalPosition": 166,
              "body": "Heh, good question. Apparently, [yes](https://www.merriam-webster.com/dictionary/reexpress), although we can use the hyphenated form if preferable.",
              "createdAt": "2022-11-06T14:54:57Z",
              "updatedAt": "2022-11-06T14:54:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885FttHn",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T14:56:05Z",
          "updatedAt": "2022-11-06T14:56:05Z",
          "comments": [
            {
              "originalPosition": 380,
              "body": "Whoops, good catch",
              "createdAt": "2022-11-06T14:56:05Z",
              "updatedAt": "2022-11-06T14:56:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885FttZc",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T15:03:44Z",
          "updatedAt": "2022-11-06T15:03:45Z",
          "comments": [
            {
              "originalPosition": 380,
              "body": "Fixed in [167cad5](https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/58/commits/167cad5b8fbcc1df3093bf2ec83fe598bdf6886c)",
              "createdAt": "2022-11-06T15:03:44Z",
              "updatedAt": "2022-11-06T15:03:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885FttZq",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T15:03:51Z",
          "updatedAt": "2022-11-06T15:03:51Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "Fixed in [167cad5](https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/58/commits/167cad5b8fbcc1df3093bf2ec83fe598bdf6886c)",
              "createdAt": "2022-11-06T15:03:51Z",
              "updatedAt": "2022-11-06T15:03:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885FttZ5",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T15:04:01Z",
          "updatedAt": "2022-11-06T15:04:01Z",
          "comments": [
            {
              "originalPosition": 156,
              "body": "Fixed in [167cad5](https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/58/commits/167cad5b8fbcc1df3093bf2ec83fe598bdf6886c)",
              "createdAt": "2022-11-06T15:04:01Z",
              "updatedAt": "2022-11-06T15:04:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885FttaZ",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T15:04:17Z",
          "updatedAt": "2022-11-06T15:04:18Z",
          "comments": [
            {
              "originalPosition": 144,
              "body": "Fixed in [167cad5](https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/58/commits/167cad5b8fbcc1df3093bf2ec83fe598bdf6886c)",
              "createdAt": "2022-11-06T15:04:17Z",
              "updatedAt": "2022-11-06T15:04:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885Ftta1",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T15:04:29Z",
          "updatedAt": "2022-11-06T15:04:29Z",
          "comments": [
            {
              "originalPosition": 135,
              "body": "Thank you! Added in [167cad5](https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/58/commits/167cad5b8fbcc1df3093bf2ec83fe598bdf6886c)",
              "createdAt": "2022-11-06T15:04:29Z",
              "updatedAt": "2022-11-06T15:04:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885Fttbp",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T15:04:55Z",
          "updatedAt": "2022-11-06T15:04:55Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Updated in [167cad5](https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/58/commits/167cad5b8fbcc1df3093bf2ec83fe598bdf6886c)",
              "createdAt": "2022-11-06T15:04:55Z",
              "updatedAt": "2022-11-06T15:04:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885FttcU",
          "commit": {
            "abbreviatedOid": "878b5de"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-06T15:05:10Z",
          "updatedAt": "2022-11-06T15:05:10Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Fixed in [167cad5](https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/58/commits/167cad5b8fbcc1df3093bf2ec83fe598bdf6886c)",
              "createdAt": "2022-11-06T15:05:10Z",
              "updatedAt": "2022-11-06T15:05:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 60,
      "id": "PR_kwDODnOl885CL3dt",
      "title": "Replace \"using HTTP/2\" with \"over HTTP/2\"",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/60",
      "state": "MERGED",
      "author": "vasilvv",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #59",
      "createdAt": "2022-11-04T05:53:11Z",
      "updatedAt": "2022-11-05T10:13:11Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "c9f4114bc22877a16a8827b59961a77ee3d712ee",
      "headRepository": "vasilvv/draft-webtransport-http2",
      "headRefName": "rename",
      "headRefOid": "122547e9f717c74087b24f24bccf968cff653204",
      "closedAt": "2022-11-05T10:13:00Z",
      "mergedAt": "2022-11-05T10:13:00Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "54f4f393a1dc0e2c210f962431e4471c64e041b7"
      },
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "woohoo, making real progress!",
          "createdAt": "2022-11-05T10:13:11Z",
          "updatedAt": "2022-11-05T10:13:11Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 64,
      "id": "PR_kwDODnOl885JeQgI",
      "title": "Stop forbidding capsules before session is accepted",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/64",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #38\r\nCloses #62",
      "createdAt": "2023-02-07T22:21:30Z",
      "updatedAt": "2023-02-21T23:17:11Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "fa773bd70fde6ab36f918d2a0fcd63b2192baac4",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/initial_capsules",
      "headRefOid": "83d17750a377dd6619e1cac02309ac0a52ca3200",
      "closedAt": "2023-02-21T23:17:07Z",
      "mergedAt": "2023-02-21T23:17:07Z",
      "mergedBy": "DavidSchinazi",
      "mergeCommit": {
        "oid": "58f64bbd2978f71f2b9fa8319227ea875123f6ed"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885NL9Z4",
          "commit": {
            "abbreviatedOid": "90ba89a"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "A suggestion here.",
          "createdAt": "2023-02-13T05:52:29Z",
          "updatedAt": "2023-02-13T05:52:38Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "A session is established once the server sends a 200 (or 2xx ?) response.  A server generates a 2xx response on the request header, not its content.  A server MUST NOT process datagrams or capsules unless it accepts the WebTransport session.  A client can therefore preemptively send WebTransport capsules or datagrams associated with a CONNECT request without waiting for a response, to the extent allowed by the connection (which includes flow control).  This can reduce latency for any data sent by a client at the start of a WebTransport session.  It also ensures that a client can resend the same data when re-attempting to establish a session that was rejected by a server.\r\n\r\nNote that this latter one is an interesting thing.  It means that we can easily support various 4xx features easily, including those that allow for automatic retry, such as 425 and 421 and maybe some of those error statuses that include Retry-After.",
              "createdAt": "2023-02-13T05:52:29Z",
              "updatedAt": "2023-02-13T05:52:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885N4i4Q",
          "commit": {
            "abbreviatedOid": "90ba89a"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-21T05:39:16Z",
          "updatedAt": "2023-02-21T05:39:16Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Very nice, thank you! I reworked the paragraph a bit to take most of that phrasing into account, additional tweaks welcome :) ",
              "createdAt": "2023-02-21T05:39:16Z",
              "updatedAt": "2023-02-21T05:39:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885N4_E2",
          "commit": {
            "abbreviatedOid": "b33b981"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T06:51:11Z",
          "updatedAt": "2023-02-21T06:51:13Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n\r\nA client MAY optimistically send any WebTransport capsules associated with a\r\n```\r\n\r\nLooking a bit wall-of-text-like.  Not sure if this breaks the flow too much.  It doesn't seem to.",
              "createdAt": "2023-02-21T06:51:11Z",
              "updatedAt": "2023-02-21T06:51:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885N5Dqb",
          "commit": {
            "abbreviatedOid": "b33b981"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-21T07:01:15Z",
          "updatedAt": "2023-02-21T07:01:15Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Looking good \ud83d\udc4d ",
              "createdAt": "2023-02-21T07:01:15Z",
              "updatedAt": "2023-02-21T07:01:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885N-xmS",
          "commit": {
            "abbreviatedOid": "83d1775"
          },
          "author": "aboba",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T23:16:44Z",
          "updatedAt": "2023-02-21T23:16:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885N-xm1",
          "commit": {
            "abbreviatedOid": "83d1775"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T23:16:47Z",
          "updatedAt": "2023-02-21T23:16:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885N-xn5",
          "commit": {
            "abbreviatedOid": "83d1775"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T23:16:52Z",
          "updatedAt": "2023-02-21T23:16:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 65,
      "id": "PR_kwDODnOl885JenEF",
      "title": "Update status code",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/65",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Change 404 to 406 Not Acceptable\r\nCloses #61",
      "createdAt": "2023-02-07T23:57:58Z",
      "updatedAt": "2023-02-13T06:06:30Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "fa773bd70fde6ab36f918d2a0fcd63b2192baac4",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/status_code",
      "headRefOid": "c6cea30123e9e098ad42530faa02cf28f31c0a9a",
      "closedAt": "2023-02-08T02:03:57Z",
      "mergedAt": "2023-02-08T02:03:57Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "a62abe8bce8aa224d0735ebda9ee91520c269035"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885MyG_P",
          "commit": {
            "abbreviatedOid": "560ab60"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-07T23:58:44Z",
          "updatedAt": "2023-02-07T23:58:49Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "nit: please refer to 9110",
              "createdAt": "2023-02-07T23:58:44Z",
              "updatedAt": "2023-02-07T23:58:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885MyHX5",
          "commit": {
            "abbreviatedOid": "c6cea30"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-07T23:59:38Z",
          "updatedAt": "2023-02-07T23:59:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885MyHbc",
          "commit": {
            "abbreviatedOid": "c6cea30"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-07T23:59:46Z",
          "updatedAt": "2023-02-07T23:59:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885MyHcM",
          "commit": {
            "abbreviatedOid": "560ab60"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-07T23:59:48Z",
          "updatedAt": "2023-02-07T23:59:48Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Fixed in [c6cea30](https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/65/commits/c6cea30123e9e098ad42530faa02cf28f31c0a9a)",
              "createdAt": "2023-02-07T23:59:48Z",
              "updatedAt": "2023-02-07T23:59:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885NL_35",
          "commit": {
            "abbreviatedOid": "c6cea30"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-13T06:06:29Z",
          "updatedAt": "2023-02-13T06:06:30Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Note: RFC9110 here too.",
              "createdAt": "2023-02-13T06:06:29Z",
              "updatedAt": "2023-02-13T06:06:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 66,
      "id": "PR_kwDODnOl885KRxQm",
      "title": "Add initial flow control windows",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/66",
      "state": "MERGED",
      "author": "vasilvv",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #63",
      "createdAt": "2023-02-19T01:49:08Z",
      "updatedAt": "2023-03-07T23:07:16Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "a62abe8bce8aa224d0735ebda9ee91520c269035",
      "headRepository": "vasilvv/draft-webtransport-http2",
      "headRefName": "initial-windows",
      "headRefOid": "31166e2967ed4e0a1643acdf84d29c7ff5b12c8d",
      "closedAt": "2023-03-07T23:07:16Z",
      "mergedAt": "2023-03-07T23:07:16Z",
      "mergedBy": "DavidSchinazi",
      "mergeCommit": {
        "oid": "9314639a845e19e3d8c1a64a6fe91e04ab9b9d2e"
      },
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed during editors' call, plan is to go with Martin's simpler proposed encoding. We might want to discuss non-zero defaults later, but that'll be its own separate issue.",
          "createdAt": "2023-02-21T23:59:30Z",
          "updatedAt": "2023-02-21T23:59:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885Nx_mg",
          "commit": {
            "abbreviatedOid": "00476dd"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "The header field names here are pretty scary.  The prevailing attitude seems to be that header fields are cheap, but when I see a 48 character (!) name, that crosses a line for me.\r\n\r\nI'll take comments about settings vs. fields to the issue.",
          "createdAt": "2023-02-20T01:46:35Z",
          "updatedAt": "2023-02-20T01:49:58Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nFields ({{Section 3.3 of !RFC8941}}); all of the field values MUST be Integer.\r\n```",
              "createdAt": "2023-02-20T01:46:36Z",
              "updatedAt": "2023-02-20T01:49:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885NyAh8",
          "commit": {
            "abbreviatedOid": "00476dd"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Any reason why you did not do a single header field, like:\r\n\r\n```\r\nWebTransport-Init: bl=100, br=200, u=300, s=10\r\n```\r\n\r\nThen at least the common repetitive stuff isn't repeated.",
          "createdAt": "2023-02-20T01:55:06Z",
          "updatedAt": "2023-02-20T01:55:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885N4jiv",
          "commit": {
            "abbreviatedOid": "00476dd"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T05:40:51Z",
          "updatedAt": "2023-02-21T05:41:24Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Do we reset or reject with some error code/response?",
              "createdAt": "2023-02-21T05:40:51Z",
              "updatedAt": "2023-02-21T05:41:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885N-42m",
          "commit": {
            "abbreviatedOid": "00476dd"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-21T23:58:29Z",
          "updatedAt": "2023-02-21T23:58:29Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Usual way to handle this is to say \", the peer MUST treat the message as malformed' then the version-specific rules kick in",
              "createdAt": "2023-02-21T23:58:29Z",
              "updatedAt": "2023-02-21T23:58:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885PQYt6",
          "commit": {
            "abbreviatedOid": "31166e2"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-07T23:07:08Z",
          "updatedAt": "2023-03-07T23:07:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885PQYvi",
          "commit": {
            "abbreviatedOid": "31166e2"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-07T23:07:11Z",
          "updatedAt": "2023-03-07T23:07:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 67,
      "id": "PR_kwDODnOl885KZbH0",
      "title": "Add note about padding in HTTP/2",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/67",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #40",
      "createdAt": "2023-02-21T05:53:21Z",
      "updatedAt": "2023-02-21T23:20:06Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "a62abe8bce8aa224d0735ebda9ee91520c269035",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/explain_padding",
      "headRefOid": "4472845c9a96f5c0a4364a2a1305ac9600566230",
      "closedAt": "2023-02-21T23:19:54Z",
      "mergedAt": "2023-02-21T23:19:53Z",
      "mergedBy": "DavidSchinazi",
      "mergeCommit": {
        "oid": "eb02dd5287be9b90ef4d672754598549286b7ff5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885N4_nW",
          "commit": {
            "abbreviatedOid": "4472845"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T06:51:48Z",
          "updatedAt": "2023-02-21T06:51:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885N-x0c",
          "commit": {
            "abbreviatedOid": "4472845"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T23:17:51Z",
          "updatedAt": "2023-02-21T23:17:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885N-yJt",
          "commit": {
            "abbreviatedOid": "4472845"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T23:19:48Z",
          "updatedAt": "2023-02-21T23:19:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDODnOl885KZesl",
      "title": "Merge transport considerations and transport properties",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/68",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Moved the later section up, fixed up some sections, and consolidated some of the text.\r\n\r\nCloses #48 ",
      "createdAt": "2023-02-21T06:10:21Z",
      "updatedAt": "2023-02-21T23:21:38Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "a62abe8bce8aa224d0735ebda9ee91520c269035",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/transport_properties",
      "headRefOid": "cb29154ced1c98b49ac5c481ab79513e23304e2b",
      "closedAt": "2023-02-21T23:21:35Z",
      "mergedAt": "2023-02-21T23:21:35Z",
      "mergedBy": "DavidSchinazi",
      "mergeCommit": {
        "oid": "2cb43e1c6275d65fb64a2538ac7007dfd46a63a8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885N5AJO",
          "commit": {
            "abbreviatedOid": "81f7177"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T06:52:49Z",
          "updatedAt": "2023-02-21T06:55:19Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nThe WebTransport framework {{OVERVIEW}} defines a set of optional transport\r\n```\r\nThis is more robust, as `[OVERVIEW]` will render even if there is no reference by that name.",
              "createdAt": "2023-02-21T06:52:49Z",
              "updatedAt": "2023-02-21T06:55:19Z"
            },
            {
              "originalPosition": 45,
              "body": "Is it worth pointing out that streams are not created out of a connection-wide shared pool here?  This is one area where the QUIC version is arguably worse.",
              "createdAt": "2023-02-21T06:54:58Z",
              "updatedAt": "2023-02-21T06:55:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885N5Ff1",
          "commit": {
            "abbreviatedOid": "81f7177"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-21T07:06:31Z",
          "updatedAt": "2023-02-21T07:06:31Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Seems reasonable, added a note in [cb29154](https://github.com/ietf-wg-webtrans/draft-webtransport-http2/pull/68/commits/cb29154ced1c98b49ac5c481ab79513e23304e2b)",
              "createdAt": "2023-02-21T07:06:31Z",
              "updatedAt": "2023-02-21T07:06:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885N-yTN",
          "commit": {
            "abbreviatedOid": "cb29154"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T23:20:34Z",
          "updatedAt": "2023-02-21T23:20:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885N-ydI",
          "commit": {
            "abbreviatedOid": "cb29154"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T23:21:26Z",
          "updatedAt": "2023-02-21T23:21:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 70,
      "id": "PR_kwDODnOl885Kd-Ca",
      "title": "Switch from 200 to 2xx",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/70",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #69",
      "createdAt": "2023-02-21T23:24:58Z",
      "updatedAt": "2023-02-21T23:27:15Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "2cb43e1c6275d65fb64a2538ac7007dfd46a63a8",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/status",
      "headRefOid": "ffaa9534fb24a70e40a0fd379cbebdced31a1fca",
      "closedAt": "2023-02-21T23:26:25Z",
      "mergedAt": "2023-02-21T23:26:25Z",
      "mergedBy": "DavidSchinazi",
      "mergeCommit": {
        "oid": "4e603974514663cf5a4e39018d2f4271666646f7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885N-zXK",
          "commit": {
            "abbreviatedOid": "ffaa953"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-21T23:26:20Z",
          "updatedAt": "2023-02-21T23:26:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 75,
      "id": "PR_kwDODnOl885LhqMO",
      "title": "Automatic update of README.md",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/75",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-07T23:52:43Z",
      "updatedAt": "2023-03-08T23:36:40Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "9314639a845e19e3d8c1a64a6fe91e04ab9b9d2e",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "readme",
      "headRefOid": "7b4c4beea69853a864c18d6ef1551f881ec0251b",
      "closedAt": "2023-03-08T20:53:37Z",
      "mergedAt": "2023-03-08T20:53:37Z",
      "mergedBy": "vasilvv",
      "mergeCommit": {
        "oid": "47a9a4ed26c4c7bcb898d7e56ccd2cc7384d0f08"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 76,
      "id": "PR_kwDODnOl885Lz60k",
      "title": "Expand description of flow control and add additional notes",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/76",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Expand description of flow control and add additional notes\r\n\r\n@martinthomson already wrote up a very nice overview of the layers we have, so added a little bit extra there and filled in the last little bit on limiting streams within a session to round everything out.\r\n\r\nCloses #27",
      "createdAt": "2023-03-11T01:20:05Z",
      "updatedAt": "2023-03-13T21:16:01Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "47a9a4ed26c4c7bcb898d7e56ccd2cc7384d0f08",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/flow_control",
      "headRefOid": "b6bcc91a757b55502121e44cb14371a8b29dd578",
      "closedAt": "2023-03-13T20:32:05Z",
      "mergedAt": "2023-03-13T20:32:05Z",
      "mergedBy": "DavidSchinazi",
      "mergeCommit": {
        "oid": "922a349f57a2c9e4fc8dd1e055b03b277b559696"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885Po4EJ",
          "commit": {
            "abbreviatedOid": "b6bcc91"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-13T00:30:50Z",
          "updatedAt": "2023-03-13T00:30:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885Pu73r",
          "commit": {
            "abbreviatedOid": "b6bcc91"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-13T18:23:06Z",
          "updatedAt": "2023-03-13T18:23:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885Pvkvc",
          "commit": {
            "abbreviatedOid": "b6bcc91"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-13T20:08:10Z",
          "updatedAt": "2023-03-13T20:08:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 77,
      "id": "PR_kwDODnOl885L790T",
      "title": "Remove SETTINGS_ENABLE_WEBTRANSPORT",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/77",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Remove SETTINGS_ENABLE_WEBTRANSPORT in favor of SETTINGS_WEBTRANSPORT_MAX_SESSIONS.\r\n\r\nCloses #73",
      "createdAt": "2023-03-13T21:42:58Z",
      "updatedAt": "2023-03-13T22:47:42Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "922a349f57a2c9e4fc8dd1e055b03b277b559696",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/remove_enable_setting",
      "headRefOid": "124346403cd048a51b4a13e27cf0869188340b01",
      "closedAt": "2023-03-13T22:47:38Z",
      "mergedAt": "2023-03-13T22:47:38Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "af9c706590c9529d09008faca3a12cd8eaafb5c7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885PwHJ2",
          "commit": {
            "abbreviatedOid": "1243464"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-13T21:57:32Z",
          "updatedAt": "2023-03-13T21:57:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 78,
      "id": "PR_kwDODnOl885Nd2oM",
      "title": "Add settings for initial limits",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/78",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Add settings for initial limits, with defaults of \"0\".\r\n\r\nFixes #72\r\nFixes #71",
      "createdAt": "2023-04-03T08:49:27Z",
      "updatedAt": "2023-05-16T22:46:56Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "af9c706590c9529d09008faca3a12cd8eaafb5c7",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/flow_control_settings",
      "headRefOid": "13f622ff982d261277d9461bfcf03a8ab93a7617",
      "closedAt": "2023-05-16T22:46:53Z",
      "mergedAt": "2023-05-16T22:46:53Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "c004c51ea548003fb85f240b355eb4ec50241a73"
      },
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chair: discussed in editor's meeting. @vasilvv mentioned that we need to discuss how to handle the case when the header and settings disagree. Simplest proposal is to use the max of the two, possibly in a separate section. Also mention that header should be higher than setting.",
          "createdAt": "2023-04-18T22:50:52Z",
          "updatedAt": "2023-04-18T22:50:52Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885RqkpD",
          "commit": {
            "abbreviatedOid": "1d5520e"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Just a question about the bidi/uni split on stream data.  Otherwise, this looks solid.",
          "createdAt": "2023-04-04T03:04:14Z",
          "updatedAt": "2023-04-04T03:10:22Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "```suggestion\r\nendpoint needs to send a WT_MAX_DATA capsule within each session before its peer is\r\n```\r\n...and the same for all future instances of the same.",
              "createdAt": "2023-04-04T03:04:14Z",
              "updatedAt": "2023-04-04T03:10:22Z"
            },
            {
              "originalPosition": 108,
              "body": "Don't we want to split this?  WT_MAX_STREAM_DATA applies to each stream individually, but you might want to have different bidirectional and unidirectional stream handling.",
              "createdAt": "2023-04-04T03:05:01Z",
              "updatedAt": "2023-04-04T03:10:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885Rr1F1",
          "commit": {
            "abbreviatedOid": "1d5520e"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-04T08:16:48Z",
          "updatedAt": "2023-04-04T08:16:48Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "Updated in [a11bd01](https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/78/commits/a11bd01b072443a80b7df70f697a5836f5e6d52a)",
              "createdAt": "2023-04-04T08:16:48Z",
              "updatedAt": "2023-04-04T08:16:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885Rr1N9",
          "commit": {
            "abbreviatedOid": "1d5520e"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-04T08:17:05Z",
          "updatedAt": "2023-04-04T08:17:05Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Good call, split these out in [5dec3cb](https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/78/commits/5dec3cbe55823ef3f384a3e65ad2f6f985c0e3f6)",
              "createdAt": "2023-04-04T08:17:05Z",
              "updatedAt": "2023-04-04T08:17:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885Rxcyy",
          "commit": {
            "abbreviatedOid": "a11bd01"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Very good, thanks Eric.",
          "createdAt": "2023-04-04T23:21:25Z",
          "updatedAt": "2023-04-04T23:23:05Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nSETTINGS_WEBTRANSPORT_INITIAL_MAX_STREAM_DATA_BIDI respectively.\r\n```",
              "createdAt": "2023-04-04T23:21:25Z",
              "updatedAt": "2023-04-04T23:23:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885UCnc1",
          "commit": {
            "abbreviatedOid": "a4c31ee"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-02T22:32:33Z",
          "updatedAt": "2023-05-02T22:32:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885UCobp",
          "commit": {
            "abbreviatedOid": "a4c31ee"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-02T22:38:19Z",
          "updatedAt": "2023-05-02T22:38:25Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Do you want to add forward references?",
              "createdAt": "2023-05-02T22:38:19Z",
              "updatedAt": "2023-05-02T22:38:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885UCrid",
          "commit": {
            "abbreviatedOid": "a4c31ee"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T22:57:37Z",
          "updatedAt": "2023-05-02T22:57:37Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Great idea, added in https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/78/commits/13f622ff982d261277d9461bfcf03a8ab93a7617",
              "createdAt": "2023-05-02T22:57:37Z",
              "updatedAt": "2023-05-02T22:57:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885VNQov",
          "commit": {
            "abbreviatedOid": "13f622f"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-16T22:44:16Z",
          "updatedAt": "2023-05-16T22:44:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 79,
      "id": "PR_kwDODnOl885NoScL",
      "title": "Update files",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/79",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There are a bunch of template-y things that need a bit of a refresher, lest they stop working soon.",
      "createdAt": "2023-04-04T23:50:35Z",
      "updatedAt": "2023-04-05T07:23:13Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "af9c706590c9529d09008faca3a12cd8eaafb5c7",
      "headRepository": "martinthomson/draft-webtransport-http2",
      "headRefName": "update-files",
      "headRefOid": "77af2bd6bcf94f9ade37645f3415a94945265c80",
      "closedAt": "2023-04-05T07:23:13Z",
      "mergedAt": "2023-04-05T07:23:13Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "091704b481b570aa8b4bcd6838da39d59e74fee3"
      },
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you!",
          "createdAt": "2023-04-05T07:23:06Z",
          "updatedAt": "2023-04-05T07:23:06Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 84,
      "id": "PR_kwDODnOl885S7vIH",
      "title": "Fix typo",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/84",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #82 ",
      "createdAt": "2023-06-13T22:38:15Z",
      "updatedAt": "2023-06-13T22:39:38Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "c004c51ea548003fb85f240b355eb4ec50241a73",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/h3_typo",
      "headRefOid": "fad0fd5ec5dc3b4424a833d55a5513403f9a5644",
      "closedAt": "2023-06-13T22:39:35Z",
      "mergedAt": "2023-06-13T22:39:35Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "b8bbe78862365635d8daf36b94f5bcca2eb3b478"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885YGwT_",
          "commit": {
            "abbreviatedOid": "fad0fd5"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-13T22:38:28Z",
          "updatedAt": "2023-06-13T22:38:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 85,
      "id": "PR_kwDODnOl885U8A5V",
      "title": "Update examples with correct stream IDs",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/85",
      "state": "MERGED",
      "author": "afrind",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "No idea why I stalled on this one for so long.  I wonder if we want to add more examples (eg: uni directional streams, datagrams, flow control, etc).\r\n\r\nFixes: #32 ",
      "createdAt": "2023-07-07T17:45:16Z",
      "updatedAt": "2023-07-10T21:23:54Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "b8bbe78862365635d8daf36b94f5bcca2eb3b478",
      "headRepository": "afrind/draft-ietf-webtransport-http2",
      "headRefName": "update-example",
      "headRefOid": "6b5f6adabb5729bd59d91a2d8712a988cb7b6578",
      "closedAt": "2023-07-10T21:23:54Z",
      "mergedAt": "2023-07-10T21:23:54Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "ed2ce3bd72ad1c159b25670f44955b4129a1d1cc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885apCMh",
          "commit": {
            "abbreviatedOid": "6b5f6ad"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "so. easy.",
          "createdAt": "2023-07-08T13:26:59Z",
          "updatedAt": "2023-07-08T13:26:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885ayCwe",
          "commit": {
            "abbreviatedOid": "6b5f6ad"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T21:23:37Z",
          "updatedAt": "2023-07-10T21:23:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 86,
      "id": "PR_kwDODnOl885VIbf-",
      "title": "Change 426->429",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/86",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Helps, but does not fully resolve #83 ",
      "createdAt": "2023-07-10T21:33:06Z",
      "updatedAt": "2023-07-10T22:06:50Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "ed2ce3bd72ad1c159b25670f44955b4129a1d1cc",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/update_status_code",
      "headRefOid": "9e1525de8b121ee99368eeb7ce7567d546974ac0",
      "closedAt": "2023-07-10T22:06:47Z",
      "mergedAt": "2023-07-10T22:06:47Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "cc942d6fa5a4d67375d9be54c2741db7ea990f9a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 91,
      "id": "PR_kwDODnOl885dgX61",
      "title": "Bring over text from HTTP/3 about refused stream",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/91",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [],
      "body": "Bring over text from HTTP/3 about refused stream\r\n\r\nThis aligns the two documents. We can probably further tweak this wording, but if we do, we should update it everywhere.\r\n\r\nCloses #83",
      "createdAt": "2023-10-23T09:08:05Z",
      "updatedAt": "2023-10-23T22:15:54Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "cc942d6fa5a4d67375d9be54c2741db7ea990f9a",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/refused_stream",
      "headRefOid": "c3b88606687270c73affc16c44a4334337421e39",
      "closedAt": "2023-10-23T22:15:51Z",
      "mergedAt": "2023-10-23T22:15:51Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "4636698c0da7a4ea2544e28326ef22ceaedc6f2b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885k3Wgl",
          "commit": {
            "abbreviatedOid": "c3b8860"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T10:42:45Z",
          "updatedAt": "2023-10-23T10:42:53Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I'm no longer sure about this entire paragraph...\r\n\r\nA server will only be unsure if it reduces the limit and the SETTINGS frame hasn't been acknowledged yet.  But then it is sure, because everything opened before the SETTINGS+ACK uses the larger limit and everything after uses the reduced limit...  So maybe we can completely rewrite this little bit.",
              "createdAt": "2023-10-23T10:42:45Z",
              "updatedAt": "2023-10-23T10:42:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885k8h-y",
          "commit": {
            "abbreviatedOid": "c3b8860"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T22:04:53Z",
          "updatedAt": "2023-10-23T22:04:53Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Yeah, I think in H2 it's much more clear cut and deterministic. Let's spin out an issue -- we've aligned the error response when we need to say \"no, stop\", but we may not want to exactly match where the underlying protocol _really_ doesn't match.\r\n\r\nFiled #94 ",
              "createdAt": "2023-10-23T22:04:53Z",
              "updatedAt": "2023-10-23T22:04:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 92,
      "id": "PR_kwDODnOl885dgdKP",
      "title": "Renumber settings to fit in 16 bits",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/92",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Renumber settings to fit in 16 bits\r\n\r\nCloses #89 ",
      "createdAt": "2023-10-23T09:21:43Z",
      "updatedAt": "2023-10-23T21:03:06Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "cc942d6fa5a4d67375d9be54c2741db7ea990f9a",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/renumber_settings",
      "headRefOid": "35d0096b9e659aee0e57933d451183f366f05bd4",
      "closedAt": "2023-10-23T21:03:02Z",
      "mergedAt": "2023-10-23T21:03:02Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "a4c381578a56e32eb9f762036cf62b11fd8ebc84"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885k3W1b",
          "commit": {
            "abbreviatedOid": "35d0096"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "These look as good as any other and I don't believe we ever got around to greasing these.",
          "createdAt": "2023-10-23T10:43:37Z",
          "updatedAt": "2023-10-23T10:43:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl885k74cL",
          "commit": {
            "abbreviatedOid": "35d0096"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T19:54:03Z",
          "updatedAt": "2023-10-23T19:54:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 93,
      "id": "PR_kwDODnOl885dgnrf",
      "title": "Clarify flow control interactions",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/93",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Clarify flow control interactions\r\n\r\nCloses #88",
      "createdAt": "2023-10-23T09:48:29Z",
      "updatedAt": "2023-10-23T23:33:05Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "cc942d6fa5a4d67375d9be54c2741db7ea990f9a",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/flow_control_clarifications",
      "headRefOid": "09df5c59a1ea251698ca1b072d7b976305a9aed0",
      "closedAt": "2023-10-23T23:32:48Z",
      "mergedAt": "2023-10-23T23:32:48Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "4a36902e59995ec4193eb45c0da9e8daf0bbfa28"
      },
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "(Merged, but happy to update with additional changes)",
          "createdAt": "2023-10-23T23:33:02Z",
          "updatedAt": "2023-10-23T23:33:02Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885k3XTr",
          "commit": {
            "abbreviatedOid": "5a12587"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-10-23T10:44:54Z",
          "updatedAt": "2023-10-23T10:46:04Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "HTTP/2 doesn't really have a problem with limits being reduced, so I'm not sure that we need this one.",
              "createdAt": "2023-10-23T10:44:54Z",
              "updatedAt": "2023-10-23T10:46:04Z"
            },
            {
              "originalPosition": 19,
              "body": "THIS one cannot reduce and can have a \"MUST treat as a connection error\" clause.",
              "createdAt": "2023-10-23T10:46:01Z",
              "updatedAt": "2023-10-23T10:46:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885k8lkd",
          "commit": {
            "abbreviatedOid": "5a12587"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T22:18:22Z",
          "updatedAt": "2023-10-23T22:18:22Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I guess instead of prohibiting this, we can pull the same text from H2: \r\n\r\n> An endpoint that wishes to reduce the value of <SETTING_NAME> to a value that is below the current number of open streams can either close streams that exceed the new value or allow streams to complete.\r\n\r\nAnd just talk about sessions (streams, below).\r\n\r\nNot quite as specific or as strict, but we can adjust if needed.",
              "createdAt": "2023-10-23T22:18:22Z",
              "updatedAt": "2023-10-23T22:19:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885k8uAZ",
          "commit": {
            "abbreviatedOid": "5a12587"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T22:48:48Z",
          "updatedAt": "2023-10-23T22:48:48Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Updated with this for both",
              "createdAt": "2023-10-23T22:48:48Z",
              "updatedAt": "2023-10-23T22:48:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885k8u7x",
          "commit": {
            "abbreviatedOid": "5a12587"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T22:49:43Z",
          "updatedAt": "2023-10-23T22:49:43Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Whoops, no, Victor correctly points out that this can't go down by definition -- that's the paragraph here that I'm struggling to explain as clearly as possible, but we can iterate on wording.",
              "createdAt": "2023-10-23T22:49:43Z",
              "updatedAt": "2023-10-23T23:01:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885k8xzG",
          "commit": {
            "abbreviatedOid": "f099afa"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T22:58:49Z",
          "updatedAt": "2023-10-23T22:58:50Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "I am really confused by this paragraph. I thought WT_MAX_STREAMS only goes up?",
              "createdAt": "2023-10-23T22:58:50Z",
              "updatedAt": "2023-10-23T22:58:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885k8yGb",
          "commit": {
            "abbreviatedOid": "f099afa"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T23:00:07Z",
          "updatedAt": "2023-10-23T23:00:07Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Ah, sorry, the whole reason we added that clarification :) ",
              "createdAt": "2023-10-23T23:00:07Z",
              "updatedAt": "2023-10-23T23:00:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885k8yOv",
          "commit": {
            "abbreviatedOid": "f099afa"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T23:00:44Z",
          "updatedAt": "2023-10-23T23:00:44Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Removed in [09df5c5](https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/93/commits/09df5c59a1ea251698ca1b072d7b976305a9aed0)",
              "createdAt": "2023-10-23T23:00:44Z",
              "updatedAt": "2023-10-23T23:00:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885k8yeq",
          "commit": {
            "abbreviatedOid": "09df5c5"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T23:01:39Z",
          "updatedAt": "2023-10-23T23:01:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 97,
      "id": "PR_kwDODnOl885eoHsF",
      "title": "Mark IANA values as suggested",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/97",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Mark IANA values as suggested\r\n\r\nFixes #96",
      "createdAt": "2023-11-05T21:32:15Z",
      "updatedAt": "2023-11-28T23:21:42Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "4a36902e59995ec4193eb45c0da9e8daf0bbfa28",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/iana_updates",
      "headRefOid": "4cb9d5a9ebb8ea2cfa326c13faad5830e0e043ce",
      "closedAt": "2023-11-28T23:21:42Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Discussed in editor's meeting: Instead, tracking with #99.",
          "createdAt": "2023-11-28T23:21:42Z",
          "updatedAt": "2023-11-28T23:21:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885mLyLY",
          "commit": {
            "abbreviatedOid": "4cb9d5a"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I don't care.  The annotation isn't really necessary in my mind.",
          "createdAt": "2023-11-06T06:51:32Z",
          "updatedAt": "2023-11-06T06:51:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 104,
      "id": "PR_kwDODnOl885opgfy",
      "title": "Add close and drain WebTransport session capsules",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/104",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ekinnear"
      ],
      "labels": [],
      "body": "Add close and drain WebTransport session capsules\r\n\r\nFixes #95",
      "createdAt": "2024-03-04T22:50:42Z",
      "updatedAt": "2024-03-04T23:54:22Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "4a36902e59995ec4193eb45c0da9e8daf0bbfa28",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/drain-and-close",
      "headRefOid": "1a2f85b10922525a7d87a0b116a01164a8327cbb",
      "closedAt": "2024-03-04T23:54:16Z",
      "mergedAt": "2024-03-04T23:54:16Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "cd3fc244609094f5b74097c4edb48a4e419648c6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885yLLko",
          "commit": {
            "abbreviatedOid": "1a2f85b"
          },
          "author": "nidhijaju",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T23:13:03Z",
          "updatedAt": "2024-03-04T23:15:35Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Not sure if it's okay to have this reference the H3 spec, instead of the Overview doc, but IIRC that doesn't have capsule definitions, so maybe it's okay for now? (Same for the DRAIN capsule)",
              "createdAt": "2024-03-04T23:13:03Z",
              "updatedAt": "2024-03-04T23:15:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl885yLZUr",
          "commit": {
            "abbreviatedOid": "1a2f85b"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T23:54:02Z",
          "updatedAt": "2024-03-04T23:54:02Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Yeah, I don't think we want to duplicate the capsule definitions, but I'm not sure the overview doc is necessarily the place for them. Right now, we've kind of picked HTTP/3 to be the document that holds the capsules that overlap, but we could adjust that (or extract them out) as necessary. \r\n\r\nTo fully address the needs of the W3C spec, though, we may want to introduce these as concepts more explicitly in the overview, if they're not there already. Added a note about that in https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-overview/issues/12.",
              "createdAt": "2024-03-04T23:54:02Z",
              "updatedAt": "2024-03-04T23:54:02Z"
            }
          ]
        }
      ]
    },
    {
      "number": 107,
      "id": "PR_kwDODnOl885p0RCP",
      "title": "Clarify END_STREAM and be less specific about individual framing boundaries",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/107",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Clarify END_STREAM and be less specific about individual framing boundaries\r\n\r\nCloses #106",
      "createdAt": "2024-03-16T06:15:27Z",
      "updatedAt": "2024-03-17T01:09:29Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "cd3fc244609094f5b74097c4edb48a4e419648c6",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/end_stream",
      "headRefOid": "bafc7f41efed71274f09d1058391231e567aadb2",
      "closedAt": "2024-03-17T01:09:26Z",
      "mergedAt": "2024-03-17T01:09:26Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "5747182d0aa25e62868a5ee6c44d64a09a22f484"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl885zsRgn",
          "commit": {
            "abbreviatedOid": "bafc7f4"
          },
          "author": "afrind",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-16T07:13:54Z",
          "updatedAt": "2024-03-16T07:13:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 110,
      "id": "PR_kwDODnOl885uNF-4",
      "title": "Add a reliable size to WT_RESET_STREAM",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/110",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As noted in #109, we need to signal to the receiver when a sender opts to use a reliable reset.  Rather than add a second frame type, we can just build a single reset that has the additional feature.  As @vasilvv pointed out, if we were going to do QUIC over again, we'd build this into RESET_STREAM.\r\n\r\nThis is not a backward-compatible change, so we'll need to change version numbers (I have not done that here).\r\n\r\nCloses #109.",
      "createdAt": "2024-04-30T23:11:47Z",
      "updatedAt": "2024-05-14T22:26:24Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "5747182d0aa25e62868a5ee6c44d64a09a22f484",
      "headRepository": "martinthomson/draft-webtransport-http2",
      "headRefName": "reset-at",
      "headRefOid": "7879bbc6440c0690c489fbaf1cdc8a7c1bac330b",
      "closedAt": "2024-05-14T22:26:24Z",
      "mergedAt": "2024-05-14T22:26:24Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "ea68d2be252e49f30ce222c21b450623272078b4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl8855KvLl",
          "commit": {
            "abbreviatedOid": "7879bbc"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-01T00:34:35Z",
          "updatedAt": "2024-05-01T00:35:16Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "nit: should we rename `WT_RESET_STREAM` to `WT_RESET_STREAM_AT` to avoid any confusion?",
              "createdAt": "2024-05-01T00:34:35Z",
              "updatedAt": "2024-05-01T00:35:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl8855KwYb",
          "commit": {
            "abbreviatedOid": "7879bbc"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-01T00:43:22Z",
          "updatedAt": "2024-05-01T00:43:23Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I considered that and concluded that the _AT is a quirk we don't need to retain, but I'm happy to do that if someone wants to make an argument in favor of the longer name.",
              "createdAt": "2024-05-01T00:43:23Z",
              "updatedAt": "2024-05-01T00:43:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl8855Oyll",
          "commit": {
            "abbreviatedOid": "7879bbc"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-01T16:25:54Z",
          "updatedAt": "2024-05-01T16:25:54Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "FWIW I don't feel very strongly, happy to have you decide",
              "createdAt": "2024-05-01T16:25:54Z",
              "updatedAt": "2024-05-01T16:25:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl8856lJlI",
          "commit": {
            "abbreviatedOid": "7879bbc"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-14T22:25:06Z",
          "updatedAt": "2024-05-14T22:25:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 111,
      "id": "PR_kwDODnOl885vMsxD",
      "title": "Error handling",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/111",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I found myself with some time, so I thought that I'd do a bad job and see what happened.",
      "createdAt": "2024-05-13T02:48:58Z",
      "updatedAt": "2024-05-14T22:44:21Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "5747182d0aa25e62868a5ee6c44d64a09a22f484",
      "headRepository": "martinthomson/draft-webtransport-http2",
      "headRefName": "error-handling",
      "headRefOid": "521859990af14c1f2f39b7a73796ab428c5978c1",
      "closedAt": "2024-05-14T22:44:21Z",
      "mergedAt": "2024-05-14T22:44:21Z",
      "mergedBy": "DavidSchinazi",
      "mergeCommit": {
        "oid": "78bc87932de7abf5effd080d2eaca637592c749f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl8856ZqHI",
          "commit": {
            "abbreviatedOid": "fc97b68"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-13T19:08:50Z",
          "updatedAt": "2024-05-13T19:08:55Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "Should we add a note about intermediaries? A naive intermediary that converts QUIC RESET_STREAM to WT_RESET_STREAM is going to have a bad day, so maybe we need a \"don't do that\" sign",
              "createdAt": "2024-05-13T19:08:51Z",
              "updatedAt": "2024-05-13T19:08:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl8856cOmT",
          "commit": {
            "abbreviatedOid": "fc97b68"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T03:54:33Z",
          "updatedAt": "2024-05-14T03:54:33Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "Good call.  I added a general note as this relates to multiple frame/capsule types.",
              "createdAt": "2024-05-14T03:54:33Z",
              "updatedAt": "2024-05-14T03:54:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl8856izAm",
          "commit": {
            "abbreviatedOid": "654c73e"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T16:51:38Z",
          "updatedAt": "2024-05-14T16:53:17Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "Capsules are strongly ordered in QUIC, they're delivered on the request stream\r\n\r\n```suggestion\r\nreceiver is required to treat the arrival of out of order frames rather than\r\n```",
              "createdAt": "2024-05-14T16:51:38Z",
              "updatedAt": "2024-05-14T16:53:17Z"
            },
            {
              "originalPosition": 210,
              "body": "I would replace \"reliable\" with \"strongly ordered\". This makes it sound like you can't rely on QUIC to do its job",
              "createdAt": "2024-05-14T16:52:51Z",
              "updatedAt": "2024-05-14T16:53:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl8856lOMN",
          "commit": {
            "abbreviatedOid": "46fc51e"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T22:31:07Z",
          "updatedAt": "2024-05-14T22:31:08Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "```suggestion\r\nFor an intermediary that forwards from an strongly-ordered transport (like\r\n```",
              "createdAt": "2024-05-14T22:31:08Z",
              "updatedAt": "2024-05-14T22:31:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl8856lOlv",
          "commit": {
            "abbreviatedOid": "654c73e"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-14T22:33:10Z",
          "updatedAt": "2024-05-14T22:33:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl8856lPI2",
          "commit": {
            "abbreviatedOid": "89504da"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T22:35:35Z",
          "updatedAt": "2024-05-14T22:35:35Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\nWEBTRANSPORT_STREAM_STATE_ERROR (0xTBD):\r\n```",
              "createdAt": "2024-05-14T22:35:35Z",
              "updatedAt": "2024-05-14T22:35:35Z"
            }
          ]
        }
      ]
    },
    {
      "number": 112,
      "id": "PR_kwDODnOl885vccy4",
      "title": "Use the same subprotocol negotiation mechanism as HTTP/3",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/112",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Use the same subprotocol negotiation mechanism as HTTP/3\r\n\r\nFixes #108",
      "createdAt": "2024-05-14T19:35:52Z",
      "updatedAt": "2024-07-21T22:02:18Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "78bc87932de7abf5effd080d2eaca637592c749f",
      "headRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "headRefName": "ek/subprotocol_negotiation",
      "headRefOid": "3d3657eed82ccab19187fcec6f12593b0cbc96f9",
      "closedAt": "2024-07-21T22:02:16Z",
      "mergedAt": "2024-07-21T22:02:16Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "62efa40a885515d44b8316108fbc4c06d735a5e8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl8856kpU2",
          "commit": {
            "abbreviatedOid": "6788a81"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T20:43:38Z",
          "updatedAt": "2024-05-14T20:43:38Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Should we instead point to the h3 draft for the definition of the fields? It feels weird to redefine them here",
              "createdAt": "2024-05-14T20:43:38Z",
              "updatedAt": "2024-05-14T20:43:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODnOl8856lRdg",
          "commit": {
            "abbreviatedOid": "6788a81"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Let's refer to h3 for the definitions.",
          "createdAt": "2024-05-14T22:44:38Z",
          "updatedAt": "2024-05-14T22:44:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl8857q8lV",
          "commit": {
            "abbreviatedOid": "718bb59"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-23T19:39:58Z",
          "updatedAt": "2024-05-23T19:39:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODnOl886BMt37",
          "commit": {
            "abbreviatedOid": "718bb59"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-09T22:12:07Z",
          "updatedAt": "2024-07-09T22:12:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 115,
      "id": "PR_kwDODnOl8858UT1y",
      "title": "Update and rename subprotocol negotiation to match HTTP/3",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/115",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Update and rename subprotocol negotiation to match HTTP/3.\r\n\r\nAlso fix reference.\r\n\r\nCloses #114.",
      "createdAt": "2024-09-23T06:13:18Z",
      "updatedAt": "2024-10-21T21:17:33Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "62efa40a885515d44b8316108fbc4c06d735a5e8",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/subprotocols",
      "headRefOid": "a478667df6285816f4b4b96ac86359d962d819e9",
      "closedAt": "2024-10-21T21:17:33Z",
      "mergedAt": "2024-10-21T21:17:33Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "34a1fb69a59ad3bbe00ae6bda596fe2b6aabbeda"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODnOl886KguBf",
          "commit": {
            "abbreviatedOid": "a478667"
          },
          "author": "vasilvv",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-24T01:50:48Z",
          "updatedAt": "2024-09-24T01:50:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 116,
      "id": "PR_kwDODnOl886NOM2q",
      "title": "Update settings based on latest H3 changes, including examples. ",
      "url": "https://github.com/ietf-wg-webtrans/draft-ietf-webtrans-http2/pull/116",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Update settings based on latest H3 changes, including examples.\r\nAlso include considerations for future versions.\r\n\r\nFixes #105",
      "createdAt": "2025-03-03T23:24:47Z",
      "updatedAt": "2025-03-03T23:57:07Z",
      "baseRepository": "ietf-wg-webtrans/draft-ietf-webtrans-http2",
      "baseRefName": "main",
      "baseRefOid": "2f0d8f3e5337c708ab11f456064f7e0da67b5ec7",
      "headRepository": "ekinnear/draft-ietf-webtrans-http2",
      "headRefName": "ek/adjust_settings",
      "headRefOid": "27821beab79444f97c9e5573adce4e120fe23486",
      "closedAt": "2025-03-03T23:57:07Z",
      "mergedAt": "2025-03-03T23:57:07Z",
      "mergedBy": "ekinnear",
      "mergeCommit": {
        "oid": "09aab4f0a80c39a5c0431ca5db7adc28f48ff9e5"
      },
      "comments": [],
      "reviews": []
    }
  ]
}